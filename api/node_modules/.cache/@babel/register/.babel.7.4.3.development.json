{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\tests\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\tests\\\\accounts.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests\\accounts.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests\\accounts.test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests\\accounts.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests",
        "sourceFileName": "accounts.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _index = require(\"../index\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar expect = _chai[\"default\"].expect; // const assert = chai.assert;\n\nvar should = _chai[\"default\"].should();\n\n_chai[\"default\"].use(_chaiHttp[\"default\"]);\n\ndescribe('Accounts', function () {\n  describe('/POST Account Create', function () {\n    it('It should create a new bank account', function (done) {\n      var new_account = {\n        owner: 3,\n        // user id\n        type: 'current' // savings, current\n\n      };\n\n      _chai[\"default\"].request(_index.app).post('/api/v1/accounts').send(new_account).end(function (err, res) {\n        expect(new_account).to.have.property('type');\n        expect(new_account).to.have.property('owner');\n        res.should.have.status(201);\n        expect(res.body).to.be.an('object');\n        expect(res.body.data).to.have.property('id');\n        expect(res.body.data).to.have.property('type');\n        expect(res.body.data).to.have.property('owner');\n        expect(res.body.data).to.have.property('firstName');\n        expect(res.body.data).to.have.property('lastName');\n        expect(res.body.data).to.have.property('accountNumber');\n        expect(res.body.data).to.have.property('email');\n        expect(res.body.data).to.have.property('openingBalance');\n        done();\n      });\n    });\n  });\n  describe('/PATCH Account Activate Deactivate', function () {\n    it('It should set a bank account to dormant status', function (done) {\n      var account_status = {\n        status: 'dormant',\n        userId: 1\n      };\n\n      _chai[\"default\"].request(_index.app).patch('/api/v1/account/1233445642').send(account_status).end(function (err, res) {\n        expect(account_status).to.have.property('status');\n        res.should.have.status(200);\n        expect(res.body).to.be.an('object');\n        expect(res.body.data).to.have.property('id');\n        expect(res.body.data).to.have.property('status');\n        expect(res.body.data.status).to.equal('dormant');\n        expect(res.body.data).to.have.property('type');\n        expect(res.body.data).to.have.property('owner');\n        expect(res.body.data).to.have.property('accountNumber');\n        done();\n      });\n    });\n    it('It should set a bank account to active status', function (done) {\n      var account_status = {\n        status: 'active',\n        userId: 1\n      };\n\n      _chai[\"default\"].request(_index.app).patch('/api/v1/account/1233445642').send(account_status).end(function (err, res) {\n        expect(account_status).to.have.property('status');\n        res.should.have.status(200);\n        expect(res.body).to.be.an('object');\n        expect(res.body.data).to.have.property('id');\n        expect(res.body.data).to.have.property('status');\n        expect(res.body.data.status).to.equal('active');\n        expect(res.body.data).to.have.property('type');\n        expect(res.body.data).to.have.property('owner');\n        expect(res.body.data).to.have.property('accountNumber');\n        done();\n      });\n    });\n    it('It should set a bank account to deleted status', function (done) {\n      var account_status = {\n        status: 'deleted',\n        userId: 1\n      };\n\n      _chai[\"default\"].request(_index.app)[\"delete\"]('/api/v1/account/1233445642').send(account_status).end(function (err, res) {\n        expect(account_status).to.have.property('status');\n        res.should.have.status(200);\n        expect(res.body).to.be.an('object');\n        expect(res.body).to.have.property('message');\n        done();\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "accounts.test.js"
      ],
      "names": [
        "expect",
        "chai",
        "should",
        "use",
        "chaiHttp",
        "describe",
        "it",
        "done",
        "new_account",
        "owner",
        "type",
        "request",
        "app",
        "post",
        "send",
        "end",
        "err",
        "res",
        "to",
        "have",
        "property",
        "status",
        "body",
        "be",
        "an",
        "data",
        "account_status",
        "userId",
        "patch",
        "equal"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,iBAAKD,MAApB,C,CACA;;AACA,IAAME,MAAM,GAAGD,iBAAKC,MAAL,EAAf;;AAEAD,iBAAKE,GAAL,CAASC,oBAAT;;AACAC,QAAQ,CAAC,UAAD,EAAa,YAAM;AACzBA,EAAAA,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCC,IAAAA,EAAE,CAAC,qCAAD,EAAwC,UAAAC,IAAI,EAAI;AAChD,UAAMC,WAAW,GAAG;AAClBC,QAAAA,KAAK,EAAE,CADW;AACR;AACVC,QAAAA,IAAI,EAAE,SAFY,CAEF;;AAFE,OAApB;;AAIAT,uBACGU,OADH,CACWC,UADX,EAEGC,IAFH,CAEQ,kBAFR,EAGGC,IAHH,CAGQN,WAHR,EAIGO,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBjB,QAAAA,MAAM,CAACQ,WAAD,CAAN,CAAoBU,EAApB,CAAuBC,IAAvB,CAA4BC,QAA5B,CAAqC,MAArC;AACApB,QAAAA,MAAM,CAACQ,WAAD,CAAN,CAAoBU,EAApB,CAAuBC,IAAvB,CAA4BC,QAA5B,CAAqC,OAArC;AACAH,QAAAA,GAAG,CAACf,MAAJ,CAAWiB,IAAX,CAAgBE,MAAhB,CAAuB,GAAvB;AACArB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBK,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACAxB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,IAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,MAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,OAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,WAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,UAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,eAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,OAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,gBAAvC;AACAb,QAAAA,IAAI;AACL,OAlBH;AAmBD,KAxBC,CAAF;AAyBD,GA1BO,CAAR;AA4BAF,EAAAA,QAAQ,CAAC,oCAAD,EAAuC,YAAM;AACnDC,IAAAA,EAAE,CAAC,gDAAD,EAAmD,UAAAC,IAAI,EAAI;AAC3D,UAAMmB,cAAc,GAAG;AACrBL,QAAAA,MAAM,EAAE,SADa;AAErBM,QAAAA,MAAM,EAAE;AAFa,OAAvB;;AAIA1B,uBACGU,OADH,CACWC,UADX,EAEGgB,KAFH,CAES,4BAFT,EAGGd,IAHH,CAGQY,cAHR,EAIGX,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBjB,QAAAA,MAAM,CAAC0B,cAAD,CAAN,CAAuBR,EAAvB,CAA0BC,IAA1B,CAA+BC,QAA/B,CAAwC,QAAxC;AACAH,QAAAA,GAAG,CAACf,MAAJ,CAAWiB,IAAX,CAAgBE,MAAhB,CAAuB,GAAvB;AACArB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBK,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACAxB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,IAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,QAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAT,CAAcJ,MAAf,CAAN,CAA6BH,EAA7B,CAAgCW,KAAhC,CAAsC,SAAtC;AACA7B,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,MAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,OAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,eAAvC;AACAb,QAAAA,IAAI;AACL,OAfH;AAgBD,KArBC,CAAF;AAuBAD,IAAAA,EAAE,CAAC,+CAAD,EAAkD,UAAAC,IAAI,EAAI;AAC1D,UAAMmB,cAAc,GAAG;AACrBL,QAAAA,MAAM,EAAE,QADa;AAErBM,QAAAA,MAAM,EAAE;AAFa,OAAvB;;AAIA1B,uBACGU,OADH,CACWC,UADX,EAEGgB,KAFH,CAES,4BAFT,EAGGd,IAHH,CAGQY,cAHR,EAIGX,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBjB,QAAAA,MAAM,CAAC0B,cAAD,CAAN,CAAuBR,EAAvB,CAA0BC,IAA1B,CAA+BC,QAA/B,CAAwC,QAAxC;AACAH,QAAAA,GAAG,CAACf,MAAJ,CAAWiB,IAAX,CAAgBE,MAAhB,CAAuB,GAAvB;AACArB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBK,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACAxB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,IAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,QAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAT,CAAcJ,MAAf,CAAN,CAA6BH,EAA7B,CAAgCW,KAAhC,CAAsC,QAAtC;AACA7B,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,MAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,OAAvC;AACApB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,eAAvC;AACAb,QAAAA,IAAI;AACL,OAfH;AAgBD,KArBC,CAAF;AAuBAD,IAAAA,EAAE,CAAC,gDAAD,EAAmD,UAAAC,IAAI,EAAI;AAC3D,UAAMmB,cAAc,GAAG;AACrBL,QAAAA,MAAM,EAAE,SADa;AAErBM,QAAAA,MAAM,EAAE;AAFa,OAAvB;;AAIA1B,uBACGU,OADH,CACWC,UADX,YAEU,4BAFV,EAGGE,IAHH,CAGQY,cAHR,EAIGX,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBjB,QAAAA,MAAM,CAAC0B,cAAD,CAAN,CAAuBR,EAAvB,CAA0BC,IAA1B,CAA+BC,QAA/B,CAAwC,QAAxC;AACAH,QAAAA,GAAG,CAACf,MAAJ,CAAWiB,IAAX,CAAgBE,MAAhB,CAAuB,GAAvB;AACArB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBK,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACAxB,QAAAA,MAAM,CAACiB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBC,IAApB,CAAyBC,QAAzB,CAAkC,SAAlC;AACAb,QAAAA,IAAI;AACL,OAVH;AAWD,KAhBC,CAAF;AAiBD,GAhEO,CAAR;AAiED,CA9FO,CAAR",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests",
      "sourcesContent": [
        "import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport { app } from '../index';\n\nconst expect = chai.expect;\n// const assert = chai.assert;\nconst should = chai.should();\n\nchai.use(chaiHttp);\ndescribe('Accounts', () => {\n  describe('/POST Account Create', () => {\n    it('It should create a new bank account', done => {\n      const new_account = {\n        owner: 3, // user id\n        type: 'current' // savings, current\n      };\n      chai\n        .request(app)\n        .post('/api/v1/accounts')\n        .send(new_account)\n        .end((err, res) => {\n          expect(new_account).to.have.property('type');\n          expect(new_account).to.have.property('owner');\n          res.should.have.status(201);\n          expect(res.body).to.be.an('object');\n          expect(res.body.data).to.have.property('id');\n          expect(res.body.data).to.have.property('type');\n          expect(res.body.data).to.have.property('owner');\n          expect(res.body.data).to.have.property('firstName');\n          expect(res.body.data).to.have.property('lastName');\n          expect(res.body.data).to.have.property('accountNumber');\n          expect(res.body.data).to.have.property('email');\n          expect(res.body.data).to.have.property('openingBalance');\n          done();\n        });\n    });\n  });\n\n  describe('/PATCH Account Activate Deactivate', () => {\n    it('It should set a bank account to dormant status', done => {\n      const account_status = {\n        status: 'dormant',\n        userId: 1\n      };\n      chai\n        .request(app)\n        .patch('/api/v1/account/1233445642')\n        .send(account_status)\n        .end((err, res) => {\n          expect(account_status).to.have.property('status');\n          res.should.have.status(200);\n          expect(res.body).to.be.an('object');\n          expect(res.body.data).to.have.property('id');\n          expect(res.body.data).to.have.property('status');\n          expect(res.body.data.status).to.equal('dormant');\n          expect(res.body.data).to.have.property('type');\n          expect(res.body.data).to.have.property('owner');\n          expect(res.body.data).to.have.property('accountNumber');\n          done();\n        });\n    });\n\n    it('It should set a bank account to active status', done => {\n      const account_status = {\n        status: 'active',\n        userId: 1\n      };\n      chai\n        .request(app)\n        .patch('/api/v1/account/1233445642')\n        .send(account_status)\n        .end((err, res) => {\n          expect(account_status).to.have.property('status');\n          res.should.have.status(200);\n          expect(res.body).to.be.an('object');\n          expect(res.body.data).to.have.property('id');\n          expect(res.body.data).to.have.property('status');\n          expect(res.body.data.status).to.equal('active');\n          expect(res.body.data).to.have.property('type');\n          expect(res.body.data).to.have.property('owner');\n          expect(res.body.data).to.have.property('accountNumber');\n          done();\n        });\n    });\n\n    it('It should set a bank account to deleted status', done => {\n      const account_status = {\n        status: 'deleted',\n        userId: 1\n      };\n      chai\n        .request(app)\n        .delete('/api/v1/account/1233445642')\n        .send(account_status)\n        .end((err, res) => {\n          expect(account_status).to.have.property('status');\n          res.should.have.status(200);\n          expect(res.body).to.be.an('object');\n          expect(res.body).to.have.property('message');\n          done();\n        });\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555144497621
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.app = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _user = _interopRequireDefault(require(\"./routes/user.route\"));\n\nvar _account = _interopRequireDefault(require(\"./routes/account.route\"));\n\nvar _transactions = _interopRequireDefault(require(\"./routes/transactions.route\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nexports.app = app;\napp.use(_bodyParser[\"default\"].json());\napp.use('/api/v1/auth', _user[\"default\"]);\napp.use('/api/v1/', _account[\"default\"]);\napp.use('/api/v1/transactions', _transactions[\"default\"]);\napp.get('/', function (req, res) {\n  res.send('Welcome');\n});\nvar PORT = 8080;\nvar server = app.listen(process.env.PORT || PORT, function () {\n  console.log(\"server started on port \".concat(PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwiVXNlclJvdXRlcyIsIkFjY291bnRSb3V0ZXMiLCJUcmFuc2FjdGlvblJvdXRlcyIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJQT1JUIiwic2VydmVyIiwibGlzdGVuIiwicHJvY2VzcyIsImVudiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVPLElBQU1BLEdBQUcsR0FBRywwQkFBWjs7QUFFUEEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLHVCQUFXQyxJQUFYLEVBQVI7QUFFQUgsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QkcsZ0JBQXhCO0FBQ0FKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQVIsRUFBb0JJLG1CQUFwQjtBQUNBTCxHQUFHLENBQUNDLEdBQUosQ0FBUSxzQkFBUixFQUFnQ0ssd0JBQWhDO0FBRUFOLEdBQUcsQ0FBQ08sR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN6QkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsU0FBVDtBQUNELENBRkQ7QUFHQSxJQUFNQyxJQUFJLEdBQUcsSUFBYjtBQUNBLElBQU1DLE1BQU0sR0FBR1osR0FBRyxDQUFDYSxNQUFKLENBQVdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixJQUFaLElBQW9CQSxJQUEvQixFQUFxQyxZQUFNO0FBQ3hESyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsa0NBQXNDTixJQUF0QztBQUNELENBRmMsQ0FBZiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE9sYXlpbmthXFxBRENcXGJhbmthXFxhcGlcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IFVzZXJSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvdXNlci5yb3V0ZSc7XG5pbXBvcnQgQWNjb3VudFJvdXRlcyBmcm9tICcuL3JvdXRlcy9hY2NvdW50LnJvdXRlJztcbmltcG9ydCBUcmFuc2FjdGlvblJvdXRlcyBmcm9tICcuL3JvdXRlcy90cmFuc2FjdGlvbnMucm91dGUnO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuXG5leHBvcnQgY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuYXBwLnVzZSgnL2FwaS92MS9hdXRoJywgVXNlclJvdXRlcyk7XG5hcHAudXNlKCcvYXBpL3YxLycsIEFjY291bnRSb3V0ZXMpO1xuYXBwLnVzZSgnL2FwaS92MS90cmFuc2FjdGlvbnMnLCBUcmFuc2FjdGlvblJvdXRlcyk7XG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmQoJ1dlbGNvbWUnKTtcbn0pO1xuY29uc3QgUE9SVCA9IDgwODA7XG5jb25zdCBzZXJ2ZXIgPSBhcHAubGlzdGVuKHByb2Nlc3MuZW52LlBPUlQgfHwgUE9SVCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhgc2VydmVyIHN0YXJ0ZWQgb24gcG9ydCAke1BPUlR9YCk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "UserRoutes",
        "AccountRoutes",
        "TransactionRoutes",
        "get",
        "req",
        "res",
        "send",
        "PORT",
        "server",
        "listen",
        "process",
        "env",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEO,IAAMA,GAAG,GAAG,0BAAZ;;AAEPA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AAEAH,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBG,gBAAxB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBI,mBAApB;AACAL,GAAG,CAACC,GAAJ,CAAQ,sBAAR,EAAgCK,wBAAhC;AAEAN,GAAG,CAACO,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,SAAT;AACD,CAFD;AAGA,IAAMC,IAAI,GAAG,IAAb;AACA,IAAMC,MAAM,GAAGZ,GAAG,CAACa,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYJ,IAAZ,IAAoBA,IAA/B,EAAqC,YAAM;AACxDK,EAAAA,OAAO,CAACC,GAAR,kCAAsCN,IAAtC;AACD,CAFc,CAAf",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src",
      "sourcesContent": [
        "import express from 'express';\nimport UserRoutes from './routes/user.route';\nimport AccountRoutes from './routes/account.route';\nimport TransactionRoutes from './routes/transactions.route';\nimport bodyParser from 'body-parser';\n\nexport const app = express();\n\napp.use(bodyParser.json());\n\napp.use('/api/v1/auth', UserRoutes);\napp.use('/api/v1/', AccountRoutes);\napp.use('/api/v1/transactions', TransactionRoutes);\n\napp.get('/', (req, res) => {\n  res.send('Welcome');\n});\nconst PORT = 8080;\nconst server = app.listen(process.env.PORT || PORT, () => {\n  console.log(`server started on port ${PORT}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555151339739
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\routes\\\\user.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\user.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\user.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\user.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
        "sourceFileName": "user.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _users = _interopRequireDefault(require(\"../controllers/users.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar userController = new _users[\"default\"]();\n\nvar router = _express[\"default\"].Router();\n\nrouter.post('/signup', userController.signupUser);\nrouter.post('/signin', userController.loginUser);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGUuanMiXSwibmFtZXMiOlsidXNlckNvbnRyb2xsZXIiLCJVc2VyQ29udHJvbGxlciIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0Iiwic2lnbnVwVXNlciIsImxvZ2luVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsY0FBYyxHQUFHLElBQUlDLGlCQUFKLEVBQXZCOztBQUVBLElBQU1DLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZjs7QUFFQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkwsY0FBYyxDQUFDTSxVQUF0QztBQUNBSixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCTCxjQUFjLENBQUNPLFNBQXRDO2VBRWVMLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxPbGF5aW5rYVxcQURDXFxiYW5rYVxcYXBpXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IFVzZXJDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXJzLmNvbnRyb2xsZXInO1xuXG5jb25zdCB1c2VyQ29udHJvbGxlciA9IG5ldyBVc2VyQ29udHJvbGxlcigpO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIucG9zdCgnL3NpZ251cCcsIHVzZXJDb250cm9sbGVyLnNpZ251cFVzZXIpO1xucm91dGVyLnBvc3QoJy9zaWduaW4nLCB1c2VyQ29udHJvbGxlci5sb2dpblVzZXIpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.route.js"
      ],
      "names": [
        "userController",
        "UserController",
        "router",
        "express",
        "Router",
        "post",
        "signupUser",
        "loginUser"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,cAAc,GAAG,IAAIC,iBAAJ,EAAvB;;AAEA,IAAMC,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBL,cAAc,CAACM,UAAtC;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBL,cAAc,CAACO,SAAtC;eAEeL,M",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\nimport UserController from '../controllers/users.controller';\n\nconst userController = new UserController();\n\nconst router = express.Router();\n\nrouter.post('/signup', userController.signupUser);\nrouter.post('/signin', userController.loginUser);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554915255873
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\controllers\\\\users.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\users.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\users.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\users.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
        "sourceFileName": "users.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _user = _interopRequireDefault(require(\"../services/user.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar UsersController =\n/*#__PURE__*/\nfunction () {\n  function UsersController() {\n    _classCallCheck(this, UsersController);\n  }\n\n  _createClass(UsersController, [{\n    key: \"signupUser\",\n    value: function signupUser(req, res) {\n      var user_data = req.body;\n      var user = new _user[\"default\"]();\n      var new_user = user.addUser(user_data);\n\n      if (!new_user.error) {\n        return res.status(new_user.code).send({\n          status: 201,\n          data: new_user.data\n        });\n      }\n\n      return res.status(new_user.code).send({\n        status: 401,\n        error: new_user.message\n      });\n    }\n  }, {\n    key: \"loginUser\",\n    value: function loginUser(req, res) {\n      var user_data = req.body;\n      var user = new _user[\"default\"]();\n      var existing_user = user.loginUser(user_data);\n\n      if (!existing_user.error) {\n        return res.status(existing_user.code).send({\n          status: existing_user.code,\n          data: existing_user.data\n        });\n      }\n\n      return res.status(existing_user.code).send({\n        status: existing_user.code,\n        error: existing_user.message\n      });\n    }\n  }]);\n\n  return UsersController;\n}();\n\nexports[\"default\"] = UsersController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiVXNlcnNDb250cm9sbGVyIiwicmVxIiwicmVzIiwidXNlcl9kYXRhIiwiYm9keSIsInVzZXIiLCJVc2VyIiwibmV3X3VzZXIiLCJhZGRVc2VyIiwiZXJyb3IiLCJzdGF0dXMiLCJjb2RlIiwic2VuZCIsImRhdGEiLCJtZXNzYWdlIiwiZXhpc3RpbmdfdXNlciIsImxvZ2luVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0lBRXFCQSxlOzs7Ozs7Ozs7K0JBQ1JDLEcsRUFBS0MsRyxFQUFLO0FBQ25CLFVBQU1DLFNBQVMsR0FBR0YsR0FBRyxDQUFDRyxJQUF0QjtBQUNBLFVBQU1DLElBQUksR0FBRyxJQUFJQyxnQkFBSixFQUFiO0FBQ0EsVUFBTUMsUUFBUSxHQUFHRixJQUFJLENBQUNHLE9BQUwsQ0FBYUwsU0FBYixDQUFqQjs7QUFFQSxVQUFJLENBQUNJLFFBQVEsQ0FBQ0UsS0FBZCxFQUFxQjtBQUNuQixlQUFPUCxHQUFHLENBQUNRLE1BQUosQ0FBV0gsUUFBUSxDQUFDSSxJQUFwQixFQUEwQkMsSUFBMUIsQ0FBK0I7QUFBRUYsVUFBQUEsTUFBTSxFQUFFLEdBQVY7QUFBZUcsVUFBQUEsSUFBSSxFQUFFTixRQUFRLENBQUNNO0FBQTlCLFNBQS9CLENBQVA7QUFDRDs7QUFDRCxhQUFPWCxHQUFHLENBQUNRLE1BQUosQ0FBV0gsUUFBUSxDQUFDSSxJQUFwQixFQUEwQkMsSUFBMUIsQ0FBK0I7QUFBRUYsUUFBQUEsTUFBTSxFQUFFLEdBQVY7QUFBZUQsUUFBQUEsS0FBSyxFQUFFRixRQUFRLENBQUNPO0FBQS9CLE9BQS9CLENBQVA7QUFDRDs7OzhCQUVTYixHLEVBQUtDLEcsRUFBSztBQUNsQixVQUFNQyxTQUFTLEdBQUdGLEdBQUcsQ0FBQ0csSUFBdEI7QUFDQSxVQUFNQyxJQUFJLEdBQUcsSUFBSUMsZ0JBQUosRUFBYjtBQUNBLFVBQU1TLGFBQWEsR0FBR1YsSUFBSSxDQUFDVyxTQUFMLENBQWViLFNBQWYsQ0FBdEI7O0FBRUEsVUFBSSxDQUFDWSxhQUFhLENBQUNOLEtBQW5CLEVBQTBCO0FBQ3hCLGVBQU9QLEdBQUcsQ0FDUFEsTUFESSxDQUNHSyxhQUFhLENBQUNKLElBRGpCLEVBRUpDLElBRkksQ0FFQztBQUFFRixVQUFBQSxNQUFNLEVBQUVLLGFBQWEsQ0FBQ0osSUFBeEI7QUFBOEJFLFVBQUFBLElBQUksRUFBRUUsYUFBYSxDQUFDRjtBQUFsRCxTQUZELENBQVA7QUFHRDs7QUFDRCxhQUFPWCxHQUFHLENBQ1BRLE1BREksQ0FDR0ssYUFBYSxDQUFDSixJQURqQixFQUVKQyxJQUZJLENBRUM7QUFBRUYsUUFBQUEsTUFBTSxFQUFFSyxhQUFhLENBQUNKLElBQXhCO0FBQThCRixRQUFBQSxLQUFLLEVBQUVNLGFBQWEsQ0FBQ0Q7QUFBbkQsT0FGRCxDQUFQO0FBR0QiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxPbGF5aW5rYVxcQURDXFxiYW5rYVxcYXBpXFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVzZXIgZnJvbSAnLi4vc2VydmljZXMvdXNlci5zZXJ2aWNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlcnNDb250cm9sbGVyIHtcbiAgc2lnbnVwVXNlcihyZXEsIHJlcykge1xuICAgIGNvbnN0IHVzZXJfZGF0YSA9IHJlcS5ib2R5O1xuICAgIGNvbnN0IHVzZXIgPSBuZXcgVXNlcigpO1xuICAgIGNvbnN0IG5ld191c2VyID0gdXNlci5hZGRVc2VyKHVzZXJfZGF0YSk7XG5cbiAgICBpZiAoIW5ld191c2VyLmVycm9yKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyhuZXdfdXNlci5jb2RlKS5zZW5kKHsgc3RhdHVzOiAyMDEsIGRhdGE6IG5ld191c2VyLmRhdGEgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXMuc3RhdHVzKG5ld191c2VyLmNvZGUpLnNlbmQoeyBzdGF0dXM6IDQwMSwgZXJyb3I6IG5ld191c2VyLm1lc3NhZ2UgfSk7XG4gIH1cblxuICBsb2dpblVzZXIocmVxLCByZXMpIHtcbiAgICBjb25zdCB1c2VyX2RhdGEgPSByZXEuYm9keTtcbiAgICBjb25zdCB1c2VyID0gbmV3IFVzZXIoKTtcbiAgICBjb25zdCBleGlzdGluZ191c2VyID0gdXNlci5sb2dpblVzZXIodXNlcl9kYXRhKTtcblxuICAgIGlmICghZXhpc3RpbmdfdXNlci5lcnJvcikge1xuICAgICAgcmV0dXJuIHJlc1xuICAgICAgICAuc3RhdHVzKGV4aXN0aW5nX3VzZXIuY29kZSlcbiAgICAgICAgLnNlbmQoeyBzdGF0dXM6IGV4aXN0aW5nX3VzZXIuY29kZSwgZGF0YTogZXhpc3RpbmdfdXNlci5kYXRhIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzXG4gICAgICAuc3RhdHVzKGV4aXN0aW5nX3VzZXIuY29kZSlcbiAgICAgIC5zZW5kKHsgc3RhdHVzOiBleGlzdGluZ191c2VyLmNvZGUsIGVycm9yOiBleGlzdGluZ191c2VyLm1lc3NhZ2UgfSk7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.controller.js"
      ],
      "names": [
        "UsersController",
        "req",
        "res",
        "user_data",
        "body",
        "user",
        "User",
        "new_user",
        "addUser",
        "error",
        "status",
        "code",
        "send",
        "data",
        "message",
        "existing_user",
        "loginUser"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEqBA,e;;;;;;;;;+BACRC,G,EAAKC,G,EAAK;AACnB,UAAMC,SAAS,GAAGF,GAAG,CAACG,IAAtB;AACA,UAAMC,IAAI,GAAG,IAAIC,gBAAJ,EAAb;AACA,UAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,CAAaL,SAAb,CAAjB;;AAEA,UAAI,CAACI,QAAQ,CAACE,KAAd,EAAqB;AACnB,eAAOP,GAAG,CAACQ,MAAJ,CAAWH,QAAQ,CAACI,IAApB,EAA0BC,IAA1B,CAA+B;AAAEF,UAAAA,MAAM,EAAE,GAAV;AAAeG,UAAAA,IAAI,EAAEN,QAAQ,CAACM;AAA9B,SAA/B,CAAP;AACD;;AACD,aAAOX,GAAG,CAACQ,MAAJ,CAAWH,QAAQ,CAACI,IAApB,EAA0BC,IAA1B,CAA+B;AAAEF,QAAAA,MAAM,EAAE,GAAV;AAAeD,QAAAA,KAAK,EAAEF,QAAQ,CAACO;AAA/B,OAA/B,CAAP;AACD;;;8BAESb,G,EAAKC,G,EAAK;AAClB,UAAMC,SAAS,GAAGF,GAAG,CAACG,IAAtB;AACA,UAAMC,IAAI,GAAG,IAAIC,gBAAJ,EAAb;AACA,UAAMS,aAAa,GAAGV,IAAI,CAACW,SAAL,CAAeb,SAAf,CAAtB;;AAEA,UAAI,CAACY,aAAa,CAACN,KAAnB,EAA0B;AACxB,eAAOP,GAAG,CACPQ,MADI,CACGK,aAAa,CAACJ,IADjB,EAEJC,IAFI,CAEC;AAAEF,UAAAA,MAAM,EAAEK,aAAa,CAACJ,IAAxB;AAA8BE,UAAAA,IAAI,EAAEE,aAAa,CAACF;AAAlD,SAFD,CAAP;AAGD;;AACD,aAAOX,GAAG,CACPQ,MADI,CACGK,aAAa,CAACJ,IADjB,EAEJC,IAFI,CAEC;AAAEF,QAAAA,MAAM,EAAEK,aAAa,CAACJ,IAAxB;AAA8BF,QAAAA,KAAK,EAAEM,aAAa,CAACD;AAAnD,OAFD,CAAP;AAGD",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
      "sourcesContent": [
        "import User from '../services/user.service';\n\nexport default class UsersController {\n  signupUser(req, res) {\n    const user_data = req.body;\n    const user = new User();\n    const new_user = user.addUser(user_data);\n\n    if (!new_user.error) {\n      return res.status(new_user.code).send({ status: 201, data: new_user.data });\n    }\n    return res.status(new_user.code).send({ status: 401, error: new_user.message });\n  }\n\n  loginUser(req, res) {\n    const user_data = req.body;\n    const user = new User();\n    const existing_user = user.loginUser(user_data);\n\n    if (!existing_user.error) {\n      return res\n        .status(existing_user.code)\n        .send({ status: existing_user.code, data: existing_user.data });\n    }\n    return res\n      .status(existing_user.code)\n      .send({ status: existing_user.code, error: existing_user.message });\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554915255834
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\services\\\\user.service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\user.service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\user.service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\user.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
        "sourceFileName": "user.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _users = require(\"../.data/users\");\n\nvar _helpers = require(\"../Helpers/helpers\");\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @exports\n * @class UserService\n */\nvar UserService =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of UserService.\n   * @memberof User\n   */\n  function UserService() {\n    _classCallCheck(this, UserService);\n\n    this.users = _users.users;\n  }\n  /**\n   * Get all user resources.\n   * @param null\n   * @returns {object}\n   */\n\n\n  _createClass(UserService, [{\n    key: \"getAllUsers\",\n    value: function getAllUsers() {\n      return this.users;\n    }\n    /**\n     * Creates a new user.\n     * @param {object} user\n     * @returns {object}\n     */\n\n  }, {\n    key: \"addUser\",\n    value: function addUser(user) {\n      // const new_user = new User({ ...user });\n      var allUsers = this.getAllUsers();\n      var newId = (0, _helpers.getLastId)(allUsers) + 1;\n      var email_exists = (0, _helpers.recordExists)(allUsers, user, 'email');\n      var token = (0, _helpers.generateToken)();\n\n      if (email_exists) {\n        return {\n          message: 'Email already exist',\n          error: true,\n          code: 401\n        };\n      } else {\n        return {\n          message: 'Signup successful',\n          error: false,\n          code: 201,\n          data: _objectSpread({\n            token: token,\n            id: newId\n          }, user)\n        };\n      }\n    }\n    /**\n     * Logs in a user.\n     * @param {object} user\n     * @returns {object}\n     */\n\n  }, {\n    key: \"loginUser\",\n    value: function loginUser(user) {\n      var allUsers = this.getAllUsers();\n      var email_exists = (0, _helpers.recordExists)(allUsers, user, 'email'); // const token = generateToken();\n\n      if (!email_exists) {\n        return {\n          message: 'Users With This Email Does Not exist',\n          error: true,\n          code: 404\n        };\n      } else {\n        var validUser = allUsers.filter(function (db_user) {\n          return user.password === db_user.password && user.email === db_user.email;\n        });\n\n        if (validUser.length) {\n          return {\n            message: 'Login successful',\n            error: false,\n            code: 200,\n            data: _objectSpread({}, validUser[0])\n          };\n        } else {\n          return {\n            message: 'Login Failed. Please enter a valid password',\n            error: true,\n            code: 401\n          };\n        }\n      }\n    }\n    /**\n     * Gets user information.\n     * @param {number} userId\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo(userId) {\n      var userInfo = this.getAllUsers().filter(function (user) {\n        return user.id === userId;\n      });\n\n      if (!userInfo.length) {\n        return {\n          message: 'User information not found',\n          error: true,\n          code: 404\n        };\n      } else {\n        return {\n          message: 'User Information Found',\n          error: false,\n          code: 200,\n          data: _objectSpread({}, userInfo[0])\n        };\n      }\n    }\n  }]);\n\n  return UserService;\n}();\n\nexports[\"default\"] = UserService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJVc2VyU2VydmljZSIsInVzZXJzIiwidXNlciIsImFsbFVzZXJzIiwiZ2V0QWxsVXNlcnMiLCJuZXdJZCIsImVtYWlsX2V4aXN0cyIsInRva2VuIiwibWVzc2FnZSIsImVycm9yIiwiY29kZSIsImRhdGEiLCJpZCIsInZhbGlkVXNlciIsImZpbHRlciIsImRiX3VzZXIiLCJwYXNzd29yZCIsImVtYWlsIiwibGVuZ3RoIiwidXNlcklkIiwidXNlckluZm8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7O0FBRUE7Ozs7SUFLcUJBLFc7OztBQUNuQjs7OztBQUlBLHlCQUFjO0FBQUE7O0FBQ1osU0FBS0MsS0FBTCxHQUFhQSxZQUFiO0FBQ0Q7QUFFRDs7Ozs7Ozs7O2tDQUtjO0FBQ1osYUFBTyxLQUFLQSxLQUFaO0FBQ0Q7QUFFRDs7Ozs7Ozs7NEJBS1FDLEksRUFBTTtBQUNaO0FBQ0EsVUFBTUMsUUFBUSxHQUFHLEtBQUtDLFdBQUwsRUFBakI7QUFDQSxVQUFNQyxLQUFLLEdBQUcsd0JBQVVGLFFBQVYsSUFBc0IsQ0FBcEM7QUFDQSxVQUFNRyxZQUFZLEdBQUcsMkJBQWFILFFBQWIsRUFBdUJELElBQXZCLEVBQTZCLE9BQTdCLENBQXJCO0FBQ0EsVUFBTUssS0FBSyxHQUFHLDZCQUFkOztBQUNBLFVBQUlELFlBQUosRUFBa0I7QUFDaEIsZUFBTztBQUFFRSxVQUFBQSxPQUFPLEVBQUUscUJBQVg7QUFBa0NDLFVBQUFBLEtBQUssRUFBRSxJQUF6QztBQUErQ0MsVUFBQUEsSUFBSSxFQUFFO0FBQXJELFNBQVA7QUFDRCxPQUZELE1BRU87QUFDTCxlQUFPO0FBQ0xGLFVBQUFBLE9BQU8sRUFBRSxtQkFESjtBQUVMQyxVQUFBQSxLQUFLLEVBQUUsS0FGRjtBQUdMQyxVQUFBQSxJQUFJLEVBQUUsR0FIRDtBQUlMQyxVQUFBQSxJQUFJO0FBQUlKLFlBQUFBLEtBQUssRUFBTEEsS0FBSjtBQUFXSyxZQUFBQSxFQUFFLEVBQUVQO0FBQWYsYUFBeUJILElBQXpCO0FBSkMsU0FBUDtBQU1EO0FBQ0Y7QUFFRDs7Ozs7Ozs7OEJBS1VBLEksRUFBTTtBQUNkLFVBQU1DLFFBQVEsR0FBRyxLQUFLQyxXQUFMLEVBQWpCO0FBQ0EsVUFBTUUsWUFBWSxHQUFHLDJCQUFhSCxRQUFiLEVBQXVCRCxJQUF2QixFQUE2QixPQUE3QixDQUFyQixDQUZjLENBR2Q7O0FBQ0EsVUFBSSxDQUFDSSxZQUFMLEVBQW1CO0FBQ2pCLGVBQU87QUFBRUUsVUFBQUEsT0FBTyxFQUFFLHNDQUFYO0FBQW1EQyxVQUFBQSxLQUFLLEVBQUUsSUFBMUQ7QUFBZ0VDLFVBQUFBLElBQUksRUFBRTtBQUF0RSxTQUFQO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsWUFBTUcsU0FBUyxHQUFHVixRQUFRLENBQUNXLE1BQVQsQ0FBZ0IsVUFBQUMsT0FBTyxFQUFJO0FBQzNDLGlCQUFPYixJQUFJLENBQUNjLFFBQUwsS0FBa0JELE9BQU8sQ0FBQ0MsUUFBMUIsSUFBc0NkLElBQUksQ0FBQ2UsS0FBTCxLQUFlRixPQUFPLENBQUNFLEtBQXBFO0FBQ0QsU0FGaUIsQ0FBbEI7O0FBR0EsWUFBSUosU0FBUyxDQUFDSyxNQUFkLEVBQXNCO0FBQ3BCLGlCQUFPO0FBQ0xWLFlBQUFBLE9BQU8sRUFBRSxrQkFESjtBQUVMQyxZQUFBQSxLQUFLLEVBQUUsS0FGRjtBQUdMQyxZQUFBQSxJQUFJLEVBQUUsR0FIRDtBQUlMQyxZQUFBQSxJQUFJLG9CQUFPRSxTQUFTLENBQUMsQ0FBRCxDQUFoQjtBQUpDLFdBQVA7QUFNRCxTQVBELE1BT087QUFDTCxpQkFBTztBQUNMTCxZQUFBQSxPQUFPLEVBQUUsNkNBREo7QUFFTEMsWUFBQUEsS0FBSyxFQUFFLElBRkY7QUFHTEMsWUFBQUEsSUFBSSxFQUFFO0FBSEQsV0FBUDtBQUtEO0FBQ0Y7QUFDRjtBQUVEOzs7Ozs7OztnQ0FLWVMsTSxFQUFRO0FBQ2xCLFVBQU1DLFFBQVEsR0FBRyxLQUFLaEIsV0FBTCxHQUFtQlUsTUFBbkIsQ0FBMEIsVUFBQVosSUFBSTtBQUFBLGVBQUlBLElBQUksQ0FBQ1UsRUFBTCxLQUFZTyxNQUFoQjtBQUFBLE9BQTlCLENBQWpCOztBQUVBLFVBQUksQ0FBQ0MsUUFBUSxDQUFDRixNQUFkLEVBQXNCO0FBQ3BCLGVBQU87QUFBRVYsVUFBQUEsT0FBTyxFQUFFLDRCQUFYO0FBQXlDQyxVQUFBQSxLQUFLLEVBQUUsSUFBaEQ7QUFBc0RDLFVBQUFBLElBQUksRUFBRTtBQUE1RCxTQUFQO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsZUFBTztBQUNMRixVQUFBQSxPQUFPLEVBQUUsd0JBREo7QUFFTEMsVUFBQUEsS0FBSyxFQUFFLEtBRkY7QUFHTEMsVUFBQUEsSUFBSSxFQUFFLEdBSEQ7QUFJTEMsVUFBQUEsSUFBSSxvQkFBT1MsUUFBUSxDQUFDLENBQUQsQ0FBZjtBQUpDLFNBQVA7QUFNRDtBQUNGIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcT2xheWlua2FcXEFEQ1xcYmFua2FcXGFwaVxcc3JjXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBVc2VyIGZyb20gJy4uL21vZGVscy91c2VyLm1vZGVsJztcbmltcG9ydCB7IHVzZXJzIH0gZnJvbSAnLi4vLmRhdGEvdXNlcnMnO1xuaW1wb3J0IHsgcmVjb3JkRXhpc3RzLCBnZXRMYXN0SWQsIGdlbmVyYXRlVG9rZW4gfSBmcm9tICcuLi9IZWxwZXJzL2hlbHBlcnMnO1xuXG4vKipcbiAqIEBleHBvcnRzXG4gKiBAY2xhc3MgVXNlclNlcnZpY2VcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VyU2VydmljZSB7XG4gIC8qKlxuICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIFVzZXJTZXJ2aWNlLlxuICAgKiBAbWVtYmVyb2YgVXNlclxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy51c2VycyA9IHVzZXJzO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhbGwgdXNlciByZXNvdXJjZXMuXG4gICAqIEBwYXJhbSBudWxsXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XG4gICAqL1xuICBnZXRBbGxVc2VycygpIHtcbiAgICByZXR1cm4gdGhpcy51c2VycztcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IHVzZXIuXG4gICAqIEBwYXJhbSB7b2JqZWN0fSB1c2VyXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XG4gICAqL1xuICBhZGRVc2VyKHVzZXIpIHtcbiAgICAvLyBjb25zdCBuZXdfdXNlciA9IG5ldyBVc2VyKHsgLi4udXNlciB9KTtcbiAgICBjb25zdCBhbGxVc2VycyA9IHRoaXMuZ2V0QWxsVXNlcnMoKTtcbiAgICBjb25zdCBuZXdJZCA9IGdldExhc3RJZChhbGxVc2VycykgKyAxO1xuICAgIGNvbnN0IGVtYWlsX2V4aXN0cyA9IHJlY29yZEV4aXN0cyhhbGxVc2VycywgdXNlciwgJ2VtYWlsJyk7XG4gICAgY29uc3QgdG9rZW4gPSBnZW5lcmF0ZVRva2VuKCk7XG4gICAgaWYgKGVtYWlsX2V4aXN0cykge1xuICAgICAgcmV0dXJuIHsgbWVzc2FnZTogJ0VtYWlsIGFscmVhZHkgZXhpc3QnLCBlcnJvcjogdHJ1ZSwgY29kZTogNDAxIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG1lc3NhZ2U6ICdTaWdudXAgc3VjY2Vzc2Z1bCcsXG4gICAgICAgIGVycm9yOiBmYWxzZSxcbiAgICAgICAgY29kZTogMjAxLFxuICAgICAgICBkYXRhOiB7IHRva2VuLCBpZDogbmV3SWQsIC4uLnVzZXIgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogTG9ncyBpbiBhIHVzZXIuXG4gICAqIEBwYXJhbSB7b2JqZWN0fSB1c2VyXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XG4gICAqL1xuICBsb2dpblVzZXIodXNlcikge1xuICAgIGNvbnN0IGFsbFVzZXJzID0gdGhpcy5nZXRBbGxVc2VycygpO1xuICAgIGNvbnN0IGVtYWlsX2V4aXN0cyA9IHJlY29yZEV4aXN0cyhhbGxVc2VycywgdXNlciwgJ2VtYWlsJyk7XG4gICAgLy8gY29uc3QgdG9rZW4gPSBnZW5lcmF0ZVRva2VuKCk7XG4gICAgaWYgKCFlbWFpbF9leGlzdHMpIHtcbiAgICAgIHJldHVybiB7IG1lc3NhZ2U6ICdVc2VycyBXaXRoIFRoaXMgRW1haWwgRG9lcyBOb3QgZXhpc3QnLCBlcnJvcjogdHJ1ZSwgY29kZTogNDA0IH07XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHZhbGlkVXNlciA9IGFsbFVzZXJzLmZpbHRlcihkYl91c2VyID0+IHtcbiAgICAgICAgcmV0dXJuIHVzZXIucGFzc3dvcmQgPT09IGRiX3VzZXIucGFzc3dvcmQgJiYgdXNlci5lbWFpbCA9PT0gZGJfdXNlci5lbWFpbDtcbiAgICAgIH0pO1xuICAgICAgaWYgKHZhbGlkVXNlci5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBtZXNzYWdlOiAnTG9naW4gc3VjY2Vzc2Z1bCcsXG4gICAgICAgICAgZXJyb3I6IGZhbHNlLFxuICAgICAgICAgIGNvZGU6IDIwMCxcbiAgICAgICAgICBkYXRhOiB7IC4uLnZhbGlkVXNlclswXSB9XG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIG1lc3NhZ2U6ICdMb2dpbiBGYWlsZWQuIFBsZWFzZSBlbnRlciBhIHZhbGlkIHBhc3N3b3JkJyxcbiAgICAgICAgICBlcnJvcjogdHJ1ZSxcbiAgICAgICAgICBjb2RlOiA0MDFcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogR2V0cyB1c2VyIGluZm9ybWF0aW9uLlxuICAgKiBAcGFyYW0ge251bWJlcn0gdXNlcklkXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XG4gICAqL1xuICBnZXRVc2VySW5mbyh1c2VySWQpIHtcbiAgICBjb25zdCB1c2VySW5mbyA9IHRoaXMuZ2V0QWxsVXNlcnMoKS5maWx0ZXIodXNlciA9PiB1c2VyLmlkID09PSB1c2VySWQpO1xuXG4gICAgaWYgKCF1c2VySW5mby5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB7IG1lc3NhZ2U6ICdVc2VyIGluZm9ybWF0aW9uIG5vdCBmb3VuZCcsIGVycm9yOiB0cnVlLCBjb2RlOiA0MDQgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWVzc2FnZTogJ1VzZXIgSW5mb3JtYXRpb24gRm91bmQnLFxuICAgICAgICBlcnJvcjogZmFsc2UsXG4gICAgICAgIGNvZGU6IDIwMCxcbiAgICAgICAgZGF0YTogeyAuLi51c2VySW5mb1swXSB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.service.js"
      ],
      "names": [
        "UserService",
        "users",
        "user",
        "allUsers",
        "getAllUsers",
        "newId",
        "email_exists",
        "token",
        "message",
        "error",
        "code",
        "data",
        "id",
        "validUser",
        "filter",
        "db_user",
        "password",
        "email",
        "length",
        "userId",
        "userInfo"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;;;;;;;;;;;AAEA;;;;IAKqBA,W;;;AACnB;;;;AAIA,yBAAc;AAAA;;AACZ,SAAKC,KAAL,GAAaA,YAAb;AACD;AAED;;;;;;;;;kCAKc;AACZ,aAAO,KAAKA,KAAZ;AACD;AAED;;;;;;;;4BAKQC,I,EAAM;AACZ;AACA,UAAMC,QAAQ,GAAG,KAAKC,WAAL,EAAjB;AACA,UAAMC,KAAK,GAAG,wBAAUF,QAAV,IAAsB,CAApC;AACA,UAAMG,YAAY,GAAG,2BAAaH,QAAb,EAAuBD,IAAvB,EAA6B,OAA7B,CAArB;AACA,UAAMK,KAAK,GAAG,6BAAd;;AACA,UAAID,YAAJ,EAAkB;AAChB,eAAO;AAAEE,UAAAA,OAAO,EAAE,qBAAX;AAAkCC,UAAAA,KAAK,EAAE,IAAzC;AAA+CC,UAAAA,IAAI,EAAE;AAArD,SAAP;AACD,OAFD,MAEO;AACL,eAAO;AACLF,UAAAA,OAAO,EAAE,mBADJ;AAELC,UAAAA,KAAK,EAAE,KAFF;AAGLC,UAAAA,IAAI,EAAE,GAHD;AAILC,UAAAA,IAAI;AAAIJ,YAAAA,KAAK,EAALA,KAAJ;AAAWK,YAAAA,EAAE,EAAEP;AAAf,aAAyBH,IAAzB;AAJC,SAAP;AAMD;AACF;AAED;;;;;;;;8BAKUA,I,EAAM;AACd,UAAMC,QAAQ,GAAG,KAAKC,WAAL,EAAjB;AACA,UAAME,YAAY,GAAG,2BAAaH,QAAb,EAAuBD,IAAvB,EAA6B,OAA7B,CAArB,CAFc,CAGd;;AACA,UAAI,CAACI,YAAL,EAAmB;AACjB,eAAO;AAAEE,UAAAA,OAAO,EAAE,sCAAX;AAAmDC,UAAAA,KAAK,EAAE,IAA1D;AAAgEC,UAAAA,IAAI,EAAE;AAAtE,SAAP;AACD,OAFD,MAEO;AACL,YAAMG,SAAS,GAAGV,QAAQ,CAACW,MAAT,CAAgB,UAAAC,OAAO,EAAI;AAC3C,iBAAOb,IAAI,CAACc,QAAL,KAAkBD,OAAO,CAACC,QAA1B,IAAsCd,IAAI,CAACe,KAAL,KAAeF,OAAO,CAACE,KAApE;AACD,SAFiB,CAAlB;;AAGA,YAAIJ,SAAS,CAACK,MAAd,EAAsB;AACpB,iBAAO;AACLV,YAAAA,OAAO,EAAE,kBADJ;AAELC,YAAAA,KAAK,EAAE,KAFF;AAGLC,YAAAA,IAAI,EAAE,GAHD;AAILC,YAAAA,IAAI,oBAAOE,SAAS,CAAC,CAAD,CAAhB;AAJC,WAAP;AAMD,SAPD,MAOO;AACL,iBAAO;AACLL,YAAAA,OAAO,EAAE,6CADJ;AAELC,YAAAA,KAAK,EAAE,IAFF;AAGLC,YAAAA,IAAI,EAAE;AAHD,WAAP;AAKD;AACF;AACF;AAED;;;;;;;;gCAKYS,M,EAAQ;AAClB,UAAMC,QAAQ,GAAG,KAAKhB,WAAL,GAAmBU,MAAnB,CAA0B,UAAAZ,IAAI;AAAA,eAAIA,IAAI,CAACU,EAAL,KAAYO,MAAhB;AAAA,OAA9B,CAAjB;;AAEA,UAAI,CAACC,QAAQ,CAACF,MAAd,EAAsB;AACpB,eAAO;AAAEV,UAAAA,OAAO,EAAE,4BAAX;AAAyCC,UAAAA,KAAK,EAAE,IAAhD;AAAsDC,UAAAA,IAAI,EAAE;AAA5D,SAAP;AACD,OAFD,MAEO;AACL,eAAO;AACLF,UAAAA,OAAO,EAAE,wBADJ;AAELC,UAAAA,KAAK,EAAE,KAFF;AAGLC,UAAAA,IAAI,EAAE,GAHD;AAILC,UAAAA,IAAI,oBAAOS,QAAQ,CAAC,CAAD,CAAf;AAJC,SAAP;AAMD;AACF",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
      "sourcesContent": [
        "// import User from '../models/user.model';\nimport { users } from '../.data/users';\nimport { recordExists, getLastId, generateToken } from '../Helpers/helpers';\n\n/**\n * @exports\n * @class UserService\n */\n\nexport default class UserService {\n  /**\n   * Creates an instance of UserService.\n   * @memberof User\n   */\n  constructor() {\n    this.users = users;\n  }\n\n  /**\n   * Get all user resources.\n   * @param null\n   * @returns {object}\n   */\n  getAllUsers() {\n    return this.users;\n  }\n\n  /**\n   * Creates a new user.\n   * @param {object} user\n   * @returns {object}\n   */\n  addUser(user) {\n    // const new_user = new User({ ...user });\n    const allUsers = this.getAllUsers();\n    const newId = getLastId(allUsers) + 1;\n    const email_exists = recordExists(allUsers, user, 'email');\n    const token = generateToken();\n    if (email_exists) {\n      return { message: 'Email already exist', error: true, code: 401 };\n    } else {\n      return {\n        message: 'Signup successful',\n        error: false,\n        code: 201,\n        data: { token, id: newId, ...user }\n      };\n    }\n  }\n\n  /**\n   * Logs in a user.\n   * @param {object} user\n   * @returns {object}\n   */\n  loginUser(user) {\n    const allUsers = this.getAllUsers();\n    const email_exists = recordExists(allUsers, user, 'email');\n    // const token = generateToken();\n    if (!email_exists) {\n      return { message: 'Users With This Email Does Not exist', error: true, code: 404 };\n    } else {\n      const validUser = allUsers.filter(db_user => {\n        return user.password === db_user.password && user.email === db_user.email;\n      });\n      if (validUser.length) {\n        return {\n          message: 'Login successful',\n          error: false,\n          code: 200,\n          data: { ...validUser[0] }\n        };\n      } else {\n        return {\n          message: 'Login Failed. Please enter a valid password',\n          error: true,\n          code: 401\n        };\n      }\n    }\n  }\n\n  /**\n   * Gets user information.\n   * @param {number} userId\n   * @returns {object}\n   */\n  getUserInfo(userId) {\n    const userInfo = this.getAllUsers().filter(user => user.id === userId);\n\n    if (!userInfo.length) {\n      return { message: 'User information not found', error: true, code: 404 };\n    } else {\n      return {\n        message: 'User Information Found',\n        error: false,\n        code: 200,\n        data: { ...userInfo[0] }\n      };\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554994973744
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\.data\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\.data\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.users = void 0;\nvar users = [{\n  id: 1,\n  email: 'admin@banka.com',\n  firstName: 'Admin',\n  lastName: 'Admin',\n  password: 'adminpass@421',\n  type: 'staff',\n  isAdmin: true,\n  created_at: '2019-04-07 07:00:43',\n  updated_at: '',\n  token: '45erkjherht45495783'\n}, {\n  id: 2,\n  email: 'cashier1@banka.com',\n  firstName: 'Alan',\n  lastName: 'Dave',\n  password: 'cashierpass@421',\n  type: 'staff',\n  isAdmin: false,\n  created_at: '2019-04-07 07:00:43',\n  updated_at: '',\n  token: '45erkjherht45495783'\n}, {\n  id: 3,\n  email: 'user1@mail.com',\n  firstName: 'Smith',\n  lastName: 'Rex',\n  password: 'userpass@421',\n  type: 'client',\n  isAdmin: false,\n  created_at: '2019-04-07 07:00:43',\n  updated_at: '',\n  token: '45erkjherht45495783'\n}, {\n  id: 5,\n  email: 'user5@mail.com',\n  firstName: 'Smith',\n  lastName: 'Rex',\n  password: 'userpass@421',\n  type: 'client',\n  isAdmin: false,\n  created_at: '2019-04-07 07:00:43',\n  updated_at: '',\n  token: '45erkjherht45495783'\n}];\nexports.users = users;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInVzZXJzIiwiaWQiLCJlbWFpbCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicGFzc3dvcmQiLCJ0eXBlIiwiaXNBZG1pbiIsImNyZWF0ZWRfYXQiLCJ1cGRhdGVkX2F0IiwidG9rZW4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQU1BLEtBQUssR0FBRyxDQUNuQjtBQUNFQyxFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxFQUFBQSxLQUFLLEVBQUUsaUJBRlQ7QUFHRUMsRUFBQUEsU0FBUyxFQUFFLE9BSGI7QUFJRUMsRUFBQUEsUUFBUSxFQUFFLE9BSlo7QUFLRUMsRUFBQUEsUUFBUSxFQUFFLGVBTFo7QUFNRUMsRUFBQUEsSUFBSSxFQUFFLE9BTlI7QUFPRUMsRUFBQUEsT0FBTyxFQUFFLElBUFg7QUFRRUMsRUFBQUEsVUFBVSxFQUFFLHFCQVJkO0FBU0VDLEVBQUFBLFVBQVUsRUFBRSxFQVRkO0FBVUVDLEVBQUFBLEtBQUssRUFBRTtBQVZULENBRG1CLEVBYW5CO0FBQ0VULEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLEVBQUFBLEtBQUssRUFBRSxvQkFGVDtBQUdFQyxFQUFBQSxTQUFTLEVBQUUsTUFIYjtBQUlFQyxFQUFBQSxRQUFRLEVBQUUsTUFKWjtBQUtFQyxFQUFBQSxRQUFRLEVBQUUsaUJBTFo7QUFNRUMsRUFBQUEsSUFBSSxFQUFFLE9BTlI7QUFPRUMsRUFBQUEsT0FBTyxFQUFFLEtBUFg7QUFRRUMsRUFBQUEsVUFBVSxFQUFFLHFCQVJkO0FBU0VDLEVBQUFBLFVBQVUsRUFBRSxFQVRkO0FBVUVDLEVBQUFBLEtBQUssRUFBRTtBQVZULENBYm1CLEVBeUJuQjtBQUNFVCxFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxFQUFBQSxLQUFLLEVBQUUsZ0JBRlQ7QUFHRUMsRUFBQUEsU0FBUyxFQUFFLE9BSGI7QUFJRUMsRUFBQUEsUUFBUSxFQUFFLEtBSlo7QUFLRUMsRUFBQUEsUUFBUSxFQUFFLGNBTFo7QUFNRUMsRUFBQUEsSUFBSSxFQUFFLFFBTlI7QUFPRUMsRUFBQUEsT0FBTyxFQUFFLEtBUFg7QUFRRUMsRUFBQUEsVUFBVSxFQUFFLHFCQVJkO0FBU0VDLEVBQUFBLFVBQVUsRUFBRSxFQVRkO0FBVUVDLEVBQUFBLEtBQUssRUFBRTtBQVZULENBekJtQixFQXFDbkI7QUFDRVQsRUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRUMsRUFBQUEsS0FBSyxFQUFFLGdCQUZUO0FBR0VDLEVBQUFBLFNBQVMsRUFBRSxPQUhiO0FBSUVDLEVBQUFBLFFBQVEsRUFBRSxLQUpaO0FBS0VDLEVBQUFBLFFBQVEsRUFBRSxjQUxaO0FBTUVDLEVBQUFBLElBQUksRUFBRSxRQU5SO0FBT0VDLEVBQUFBLE9BQU8sRUFBRSxLQVBYO0FBUUVDLEVBQUFBLFVBQVUsRUFBRSxxQkFSZDtBQVNFQyxFQUFBQSxVQUFVLEVBQUUsRUFUZDtBQVVFQyxFQUFBQSxLQUFLLEVBQUU7QUFWVCxDQXJDbUIsQ0FBZCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE9sYXlpbmthXFxBRENcXGJhbmthXFxhcGlcXHNyY1xcLmRhdGEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdXNlcnMgPSBbXG4gIHtcbiAgICBpZDogMSxcbiAgICBlbWFpbDogJ2FkbWluQGJhbmthLmNvbScsXG4gICAgZmlyc3ROYW1lOiAnQWRtaW4nLFxuICAgIGxhc3ROYW1lOiAnQWRtaW4nLFxuICAgIHBhc3N3b3JkOiAnYWRtaW5wYXNzQDQyMScsXG4gICAgdHlwZTogJ3N0YWZmJyxcbiAgICBpc0FkbWluOiB0cnVlLFxuICAgIGNyZWF0ZWRfYXQ6ICcyMDE5LTA0LTA3IDA3OjAwOjQzJyxcbiAgICB1cGRhdGVkX2F0OiAnJyxcbiAgICB0b2tlbjogJzQ1ZXJramhlcmh0NDU0OTU3ODMnXG4gIH0sXG4gIHtcbiAgICBpZDogMixcbiAgICBlbWFpbDogJ2Nhc2hpZXIxQGJhbmthLmNvbScsXG4gICAgZmlyc3ROYW1lOiAnQWxhbicsXG4gICAgbGFzdE5hbWU6ICdEYXZlJyxcbiAgICBwYXNzd29yZDogJ2Nhc2hpZXJwYXNzQDQyMScsXG4gICAgdHlwZTogJ3N0YWZmJyxcbiAgICBpc0FkbWluOiBmYWxzZSxcbiAgICBjcmVhdGVkX2F0OiAnMjAxOS0wNC0wNyAwNzowMDo0MycsXG4gICAgdXBkYXRlZF9hdDogJycsXG4gICAgdG9rZW46ICc0NWVya2poZXJodDQ1NDk1NzgzJ1xuICB9LFxuICB7XG4gICAgaWQ6IDMsXG4gICAgZW1haWw6ICd1c2VyMUBtYWlsLmNvbScsXG4gICAgZmlyc3ROYW1lOiAnU21pdGgnLFxuICAgIGxhc3ROYW1lOiAnUmV4JyxcbiAgICBwYXNzd29yZDogJ3VzZXJwYXNzQDQyMScsXG4gICAgdHlwZTogJ2NsaWVudCcsXG4gICAgaXNBZG1pbjogZmFsc2UsXG4gICAgY3JlYXRlZF9hdDogJzIwMTktMDQtMDcgMDc6MDA6NDMnLFxuICAgIHVwZGF0ZWRfYXQ6ICcnLFxuICAgIHRva2VuOiAnNDVlcmtqaGVyaHQ0NTQ5NTc4MydcbiAgfSxcbiAge1xuICAgIGlkOiA1LFxuICAgIGVtYWlsOiAndXNlcjVAbWFpbC5jb20nLFxuICAgIGZpcnN0TmFtZTogJ1NtaXRoJyxcbiAgICBsYXN0TmFtZTogJ1JleCcsXG4gICAgcGFzc3dvcmQ6ICd1c2VycGFzc0A0MjEnLFxuICAgIHR5cGU6ICdjbGllbnQnLFxuICAgIGlzQWRtaW46IGZhbHNlLFxuICAgIGNyZWF0ZWRfYXQ6ICcyMDE5LTA0LTA3IDA3OjAwOjQzJyxcbiAgICB1cGRhdGVkX2F0OiAnJyxcbiAgICB0b2tlbjogJzQ1ZXJramhlcmh0NDU0OTU3ODMnXG4gIH1cbl07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "users",
        "id",
        "email",
        "firstName",
        "lastName",
        "password",
        "type",
        "isAdmin",
        "created_at",
        "updated_at",
        "token"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,KAAK,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,SAAS,EAAE,OAHb;AAIEC,EAAAA,QAAQ,EAAE,OAJZ;AAKEC,EAAAA,QAAQ,EAAE,eALZ;AAMEC,EAAAA,IAAI,EAAE,OANR;AAOEC,EAAAA,OAAO,EAAE,IAPX;AAQEC,EAAAA,UAAU,EAAE,qBARd;AASEC,EAAAA,UAAU,EAAE,EATd;AAUEC,EAAAA,KAAK,EAAE;AAVT,CADmB,EAanB;AACET,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,oBAFT;AAGEC,EAAAA,SAAS,EAAE,MAHb;AAIEC,EAAAA,QAAQ,EAAE,MAJZ;AAKEC,EAAAA,QAAQ,EAAE,iBALZ;AAMEC,EAAAA,IAAI,EAAE,OANR;AAOEC,EAAAA,OAAO,EAAE,KAPX;AAQEC,EAAAA,UAAU,EAAE,qBARd;AASEC,EAAAA,UAAU,EAAE,EATd;AAUEC,EAAAA,KAAK,EAAE;AAVT,CAbmB,EAyBnB;AACET,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,SAAS,EAAE,OAHb;AAIEC,EAAAA,QAAQ,EAAE,KAJZ;AAKEC,EAAAA,QAAQ,EAAE,cALZ;AAMEC,EAAAA,IAAI,EAAE,QANR;AAOEC,EAAAA,OAAO,EAAE,KAPX;AAQEC,EAAAA,UAAU,EAAE,qBARd;AASEC,EAAAA,UAAU,EAAE,EATd;AAUEC,EAAAA,KAAK,EAAE;AAVT,CAzBmB,EAqCnB;AACET,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,SAAS,EAAE,OAHb;AAIEC,EAAAA,QAAQ,EAAE,KAJZ;AAKEC,EAAAA,QAAQ,EAAE,cALZ;AAMEC,EAAAA,IAAI,EAAE,QANR;AAOEC,EAAAA,OAAO,EAAE,KAPX;AAQEC,EAAAA,UAAU,EAAE,qBARd;AASEC,EAAAA,UAAU,EAAE,EATd;AAUEC,EAAAA,KAAK,EAAE;AAVT,CArCmB,CAAd",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
      "sourcesContent": [
        "export const users = [\n  {\n    id: 1,\n    email: 'admin@banka.com',\n    firstName: 'Admin',\n    lastName: 'Admin',\n    password: 'adminpass@421',\n    type: 'staff',\n    isAdmin: true,\n    created_at: '2019-04-07 07:00:43',\n    updated_at: '',\n    token: '45erkjherht45495783'\n  },\n  {\n    id: 2,\n    email: 'cashier1@banka.com',\n    firstName: 'Alan',\n    lastName: 'Dave',\n    password: 'cashierpass@421',\n    type: 'staff',\n    isAdmin: false,\n    created_at: '2019-04-07 07:00:43',\n    updated_at: '',\n    token: '45erkjherht45495783'\n  },\n  {\n    id: 3,\n    email: 'user1@mail.com',\n    firstName: 'Smith',\n    lastName: 'Rex',\n    password: 'userpass@421',\n    type: 'client',\n    isAdmin: false,\n    created_at: '2019-04-07 07:00:43',\n    updated_at: '',\n    token: '45erkjherht45495783'\n  },\n  {\n    id: 5,\n    email: 'user5@mail.com',\n    firstName: 'Smith',\n    lastName: 'Rex',\n    password: 'userpass@421',\n    type: 'client',\n    isAdmin: false,\n    created_at: '2019-04-07 07:00:43',\n    updated_at: '',\n    token: '45erkjherht45495783'\n  }\n];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555149964740
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\Helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\Helpers\\\\helpers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers\\helpers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers\\helpers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers\\helpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers",
        "sourceFileName": "helpers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateToken = exports.getLastId = exports.recordExists = void 0;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * Checks if a record already exists\n * @param {object} model\n * @param {object} data\n * @param {string} key\n * @returns {boolean}\n */\nvar recordExists = function recordExists(model, data, key) {\n  var check = model.filter(function (resource) {\n    return resource[key] === data[key];\n  });\n  return check.length ? true : false;\n};\n/**\n * Gets the last ID from a list of resources\n * @param {object} model\n * @returns {number}\n */\n\n\nexports.recordExists = recordExists;\n\nvar getLastId = function getLastId(model) {\n  var ids = model.map(function (item) {\n    return item.id;\n  });\n  return Math.max.apply(Math, _toConsumableArray(ids));\n};\n/**\n * Generates random token\n * @param null\n * @returns {string} token\n */\n\n\nexports.getLastId = getLastId;\n\nvar generateToken = function generateToken() {\n  var token = '45erkjherht45495783';\n  return token;\n};\n\nexports.generateToken = generateToken;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsicmVjb3JkRXhpc3RzIiwibW9kZWwiLCJkYXRhIiwia2V5IiwiY2hlY2siLCJmaWx0ZXIiLCJyZXNvdXJjZSIsImxlbmd0aCIsImdldExhc3RJZCIsImlkcyIsIm1hcCIsIml0ZW0iLCJpZCIsIk1hdGgiLCJtYXgiLCJnZW5lcmF0ZVRva2VuIiwidG9rZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7O0FBT08sSUFBTUEsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsS0FBRCxFQUFRQyxJQUFSLEVBQWNDLEdBQWQsRUFBc0I7QUFDaEQsTUFBTUMsS0FBSyxHQUFHSCxLQUFLLENBQUNJLE1BQU4sQ0FBYSxVQUFBQyxRQUFRLEVBQUk7QUFDckMsV0FBT0EsUUFBUSxDQUFDSCxHQUFELENBQVIsS0FBa0JELElBQUksQ0FBQ0MsR0FBRCxDQUE3QjtBQUNELEdBRmEsQ0FBZDtBQUdBLFNBQU9DLEtBQUssQ0FBQ0csTUFBTixHQUFlLElBQWYsR0FBc0IsS0FBN0I7QUFDRCxDQUxNO0FBT1A7Ozs7Ozs7OztBQUtPLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUFQLEtBQUssRUFBSTtBQUNoQyxNQUFNUSxHQUFHLEdBQUdSLEtBQUssQ0FBQ1MsR0FBTixDQUFVLFVBQUFDLElBQUksRUFBSTtBQUM1QixXQUFPQSxJQUFJLENBQUNDLEVBQVo7QUFDRCxHQUZXLENBQVo7QUFHQSxTQUFPQyxJQUFJLENBQUNDLEdBQUwsT0FBQUQsSUFBSSxxQkFBUUosR0FBUixFQUFYO0FBQ0QsQ0FMTTtBQU9QOzs7Ozs7Ozs7QUFLTyxJQUFNTSxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLEdBQU07QUFDakMsTUFBTUMsS0FBSyxHQUFHLHFCQUFkO0FBQ0EsU0FBT0EsS0FBUDtBQUNELENBSE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxPbGF5aW5rYVxcQURDXFxiYW5rYVxcYXBpXFxzcmNcXEhlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBhIHJlY29yZCBhbHJlYWR5IGV4aXN0c1xuICogQHBhcmFtIHtvYmplY3R9IG1vZGVsXG4gKiBAcGFyYW0ge29iamVjdH0gZGF0YVxuICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBjb25zdCByZWNvcmRFeGlzdHMgPSAobW9kZWwsIGRhdGEsIGtleSkgPT4ge1xuICBjb25zdCBjaGVjayA9IG1vZGVsLmZpbHRlcihyZXNvdXJjZSA9PiB7XG4gICAgcmV0dXJuIHJlc291cmNlW2tleV0gPT09IGRhdGFba2V5XTtcbiAgfSk7XG4gIHJldHVybiBjaGVjay5sZW5ndGggPyB0cnVlIDogZmFsc2U7XG59O1xuXG4vKipcbiAqIEdldHMgdGhlIGxhc3QgSUQgZnJvbSBhIGxpc3Qgb2YgcmVzb3VyY2VzXG4gKiBAcGFyYW0ge29iamVjdH0gbW9kZWxcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBnZXRMYXN0SWQgPSBtb2RlbCA9PiB7XG4gIGNvbnN0IGlkcyA9IG1vZGVsLm1hcChpdGVtID0+IHtcbiAgICByZXR1cm4gaXRlbS5pZDtcbiAgfSk7XG4gIHJldHVybiBNYXRoLm1heCguLi5pZHMpO1xufTtcblxuLyoqXG4gKiBHZW5lcmF0ZXMgcmFuZG9tIHRva2VuXG4gKiBAcGFyYW0gbnVsbFxuICogQHJldHVybnMge3N0cmluZ30gdG9rZW5cbiAqL1xuZXhwb3J0IGNvbnN0IGdlbmVyYXRlVG9rZW4gPSAoKSA9PiB7XG4gIGNvbnN0IHRva2VuID0gJzQ1ZXJramhlcmh0NDU0OTU3ODMnO1xuICByZXR1cm4gdG9rZW47XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "helpers.js"
      ],
      "names": [
        "recordExists",
        "model",
        "data",
        "key",
        "check",
        "filter",
        "resource",
        "length",
        "getLastId",
        "ids",
        "map",
        "item",
        "id",
        "Math",
        "max",
        "generateToken",
        "token"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;;;;;;AAOO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,IAAR,EAAcC,GAAd,EAAsB;AAChD,MAAMC,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAa,UAAAC,QAAQ,EAAI;AACrC,WAAOA,QAAQ,CAACH,GAAD,CAAR,KAAkBD,IAAI,CAACC,GAAD,CAA7B;AACD,GAFa,CAAd;AAGA,SAAOC,KAAK,CAACG,MAAN,GAAe,IAAf,GAAsB,KAA7B;AACD,CALM;AAOP;;;;;;;;;AAKO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAP,KAAK,EAAI;AAChC,MAAMQ,GAAG,GAAGR,KAAK,CAACS,GAAN,CAAU,UAAAC,IAAI,EAAI;AAC5B,WAAOA,IAAI,CAACC,EAAZ;AACD,GAFW,CAAZ;AAGA,SAAOC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQJ,GAAR,EAAX;AACD,CALM;AAOP;;;;;;;;;AAKO,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,MAAMC,KAAK,GAAG,qBAAd;AACA,SAAOA,KAAP;AACD,CAHM",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers",
      "sourcesContent": [
        "/**\n * Checks if a record already exists\n * @param {object} model\n * @param {object} data\n * @param {string} key\n * @returns {boolean}\n */\nexport const recordExists = (model, data, key) => {\n  const check = model.filter(resource => {\n    return resource[key] === data[key];\n  });\n  return check.length ? true : false;\n};\n\n/**\n * Gets the last ID from a list of resources\n * @param {object} model\n * @returns {number}\n */\nexport const getLastId = model => {\n  const ids = model.map(item => {\n    return item.id;\n  });\n  return Math.max(...ids);\n};\n\n/**\n * Generates random token\n * @param null\n * @returns {string} token\n */\nexport const generateToken = () => {\n  const token = '45erkjherht45495783';\n  return token;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554885212141
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\routes\\\\account.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\account.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\account.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\account.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
        "sourceFileName": "account.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _account = _interopRequireDefault(require(\"../controllers/account.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar accountController = new _account[\"default\"]();\n\nvar router = _express[\"default\"].Router();\n\nrouter.post('/accounts', accountController.createAccount);\nrouter.patch('/account/:accountNumber', accountController.updateAccountStatus);\nrouter[\"delete\"]('/account/:accountNumber', accountController.updateAccountStatus);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQucm91dGUuanMiXSwibmFtZXMiOlsiYWNjb3VudENvbnRyb2xsZXIiLCJBY2NvdW50Q29udHJvbGxlciIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwiY3JlYXRlQWNjb3VudCIsInBhdGNoIiwidXBkYXRlQWNjb3VudFN0YXR1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsaUJBQWlCLEdBQUcsSUFBSUMsbUJBQUosRUFBMUI7O0FBRUEsSUFBTUMsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmOztBQUVBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxXQUFaLEVBQXlCTCxpQkFBaUIsQ0FBQ00sYUFBM0M7QUFDQUosTUFBTSxDQUFDSyxLQUFQLENBQWEseUJBQWIsRUFBd0NQLGlCQUFpQixDQUFDUSxtQkFBMUQ7QUFDQU4sTUFBTSxVQUFOLENBQWMseUJBQWQsRUFBeUNGLGlCQUFpQixDQUFDUSxtQkFBM0Q7ZUFFZU4sTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE9sYXlpbmthXFxBRENcXGJhbmthXFxhcGlcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgQWNjb3VudENvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvYWNjb3VudC5jb250cm9sbGVyJztcblxuY29uc3QgYWNjb3VudENvbnRyb2xsZXIgPSBuZXcgQWNjb3VudENvbnRyb2xsZXIoKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLnBvc3QoJy9hY2NvdW50cycsIGFjY291bnRDb250cm9sbGVyLmNyZWF0ZUFjY291bnQpO1xucm91dGVyLnBhdGNoKCcvYWNjb3VudC86YWNjb3VudE51bWJlcicsIGFjY291bnRDb250cm9sbGVyLnVwZGF0ZUFjY291bnRTdGF0dXMpO1xucm91dGVyLmRlbGV0ZSgnL2FjY291bnQvOmFjY291bnROdW1iZXInLCBhY2NvdW50Q29udHJvbGxlci51cGRhdGVBY2NvdW50U3RhdHVzKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "account.route.js"
      ],
      "names": [
        "accountController",
        "AccountController",
        "router",
        "express",
        "Router",
        "post",
        "createAccount",
        "patch",
        "updateAccountStatus"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,iBAAiB,GAAG,IAAIC,mBAAJ,EAA1B;;AAEA,IAAMC,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,IAAP,CAAY,WAAZ,EAAyBL,iBAAiB,CAACM,aAA3C;AACAJ,MAAM,CAACK,KAAP,CAAa,yBAAb,EAAwCP,iBAAiB,CAACQ,mBAA1D;AACAN,MAAM,UAAN,CAAc,yBAAd,EAAyCF,iBAAiB,CAACQ,mBAA3D;eAEeN,M",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\nimport AccountController from '../controllers/account.controller';\n\nconst accountController = new AccountController();\n\nconst router = express.Router();\n\nrouter.post('/accounts', accountController.createAccount);\nrouter.patch('/account/:accountNumber', accountController.updateAccountStatus);\nrouter.delete('/account/:accountNumber', accountController.updateAccountStatus);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555112567954
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\controllers\\\\account.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\account.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\account.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\account.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
        "sourceFileName": "account.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _accounts = _interopRequireDefault(require(\"../services/accounts.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar AccountController =\n/*#__PURE__*/\nfunction () {\n  function AccountController() {\n    _classCallCheck(this, AccountController);\n  }\n\n  _createClass(AccountController, [{\n    key: \"createAccount\",\n    value: function createAccount(req, res) {\n      var accountInfo = req.body;\n      var account = new _accounts[\"default\"]();\n      var newAccount = account.addAccount(accountInfo);\n\n      if (!newAccount.error) {\n        return res.status(newAccount.code).send({\n          status: newAccount.code,\n          data: newAccount.data\n        });\n      }\n\n      return res.status(newAccount.code).send({\n        status: newAccount.code,\n        error: newAccount.message\n      });\n    }\n  }, {\n    key: \"updateAccountStatus\",\n    value: function updateAccountStatus(req, res) {\n      var _req$body = req.body,\n          status = _req$body.status,\n          userId = _req$body.userId;\n      var accountNumber = req.params.accountNumber;\n      var account = new _accounts[\"default\"]();\n      var updatedAccount = account.updateAccountStatus({\n        status: status,\n        accountNumber: accountNumber\n      }, userId);\n\n      if (!updatedAccount.error) {\n        var response = req.body.status === 'deleted' ? {\n          status: updatedAccount.code,\n          message: updatedAccount.message\n        } : {\n          status: updatedAccount.code,\n          data: updatedAccount.data\n        };\n        return res.status(updatedAccount.code).send(response);\n      }\n\n      return res.status(updatedAccount.code).send({\n        status: updatedAccount.code,\n        error: updatedAccount.message\n      });\n    }\n  }]);\n\n  return AccountController;\n}();\n\nexports[\"default\"] = AccountController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJBY2NvdW50Q29udHJvbGxlciIsInJlcSIsInJlcyIsImFjY291bnRJbmZvIiwiYm9keSIsImFjY291bnQiLCJBY2NvdW50IiwibmV3QWNjb3VudCIsImFkZEFjY291bnQiLCJlcnJvciIsInN0YXR1cyIsImNvZGUiLCJzZW5kIiwiZGF0YSIsIm1lc3NhZ2UiLCJ1c2VySWQiLCJhY2NvdW50TnVtYmVyIiwicGFyYW1zIiwidXBkYXRlZEFjY291bnQiLCJ1cGRhdGVBY2NvdW50U3RhdHVzIiwicmVzcG9uc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztJQUVxQkEsaUI7Ozs7Ozs7OztrQ0FDTEMsRyxFQUFLQyxHLEVBQUs7QUFDdEIsVUFBTUMsV0FBVyxHQUFHRixHQUFHLENBQUNHLElBQXhCO0FBQ0EsVUFBTUMsT0FBTyxHQUFHLElBQUlDLG9CQUFKLEVBQWhCO0FBQ0EsVUFBTUMsVUFBVSxHQUFHRixPQUFPLENBQUNHLFVBQVIsQ0FBbUJMLFdBQW5CLENBQW5COztBQUVBLFVBQUksQ0FBQ0ksVUFBVSxDQUFDRSxLQUFoQixFQUF1QjtBQUNyQixlQUFPUCxHQUFHLENBQUNRLE1BQUosQ0FBV0gsVUFBVSxDQUFDSSxJQUF0QixFQUE0QkMsSUFBNUIsQ0FBaUM7QUFBRUYsVUFBQUEsTUFBTSxFQUFFSCxVQUFVLENBQUNJLElBQXJCO0FBQTJCRSxVQUFBQSxJQUFJLEVBQUVOLFVBQVUsQ0FBQ007QUFBNUMsU0FBakMsQ0FBUDtBQUNEOztBQUNELGFBQU9YLEdBQUcsQ0FBQ1EsTUFBSixDQUFXSCxVQUFVLENBQUNJLElBQXRCLEVBQTRCQyxJQUE1QixDQUFpQztBQUFFRixRQUFBQSxNQUFNLEVBQUVILFVBQVUsQ0FBQ0ksSUFBckI7QUFBMkJGLFFBQUFBLEtBQUssRUFBRUYsVUFBVSxDQUFDTztBQUE3QyxPQUFqQyxDQUFQO0FBQ0Q7Ozt3Q0FFbUJiLEcsRUFBS0MsRyxFQUFLO0FBQUEsc0JBQ0RELEdBQUcsQ0FBQ0csSUFESDtBQUFBLFVBQ3BCTSxNQURvQixhQUNwQkEsTUFEb0I7QUFBQSxVQUNaSyxNQURZLGFBQ1pBLE1BRFk7QUFFNUIsVUFBTUMsYUFBYSxHQUFHZixHQUFHLENBQUNnQixNQUFKLENBQVdELGFBQWpDO0FBQ0EsVUFBTVgsT0FBTyxHQUFHLElBQUlDLG9CQUFKLEVBQWhCO0FBQ0EsVUFBTVksY0FBYyxHQUFHYixPQUFPLENBQUNjLG1CQUFSLENBQTRCO0FBQUVULFFBQUFBLE1BQU0sRUFBTkEsTUFBRjtBQUFVTSxRQUFBQSxhQUFhLEVBQWJBO0FBQVYsT0FBNUIsRUFBdURELE1BQXZELENBQXZCOztBQUVBLFVBQUksQ0FBQ0csY0FBYyxDQUFDVCxLQUFwQixFQUEyQjtBQUN6QixZQUFNVyxRQUFRLEdBQ1puQixHQUFHLENBQUNHLElBQUosQ0FBU00sTUFBVCxLQUFvQixTQUFwQixHQUNJO0FBQUVBLFVBQUFBLE1BQU0sRUFBRVEsY0FBYyxDQUFDUCxJQUF6QjtBQUErQkcsVUFBQUEsT0FBTyxFQUFFSSxjQUFjLENBQUNKO0FBQXZELFNBREosR0FFSTtBQUFFSixVQUFBQSxNQUFNLEVBQUVRLGNBQWMsQ0FBQ1AsSUFBekI7QUFBK0JFLFVBQUFBLElBQUksRUFBRUssY0FBYyxDQUFDTDtBQUFwRCxTQUhOO0FBSUEsZUFBT1gsR0FBRyxDQUFDUSxNQUFKLENBQVdRLGNBQWMsQ0FBQ1AsSUFBMUIsRUFBZ0NDLElBQWhDLENBQXFDUSxRQUFyQyxDQUFQO0FBQ0Q7O0FBQ0QsYUFBT2xCLEdBQUcsQ0FDUFEsTUFESSxDQUNHUSxjQUFjLENBQUNQLElBRGxCLEVBRUpDLElBRkksQ0FFQztBQUFFRixRQUFBQSxNQUFNLEVBQUVRLGNBQWMsQ0FBQ1AsSUFBekI7QUFBK0JGLFFBQUFBLEtBQUssRUFBRVMsY0FBYyxDQUFDSjtBQUFyRCxPQUZELENBQVA7QUFHRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE9sYXlpbmthXFxBRENcXGJhbmthXFxhcGlcXHNyY1xcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWNjb3VudCBmcm9tICcuLi9zZXJ2aWNlcy9hY2NvdW50cy5zZXJ2aWNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWNjb3VudENvbnRyb2xsZXIge1xuICBjcmVhdGVBY2NvdW50KHJlcSwgcmVzKSB7XG4gICAgY29uc3QgYWNjb3VudEluZm8gPSByZXEuYm9keTtcbiAgICBjb25zdCBhY2NvdW50ID0gbmV3IEFjY291bnQoKTtcbiAgICBjb25zdCBuZXdBY2NvdW50ID0gYWNjb3VudC5hZGRBY2NvdW50KGFjY291bnRJbmZvKTtcblxuICAgIGlmICghbmV3QWNjb3VudC5lcnJvcikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMobmV3QWNjb3VudC5jb2RlKS5zZW5kKHsgc3RhdHVzOiBuZXdBY2NvdW50LmNvZGUsIGRhdGE6IG5ld0FjY291bnQuZGF0YSB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMobmV3QWNjb3VudC5jb2RlKS5zZW5kKHsgc3RhdHVzOiBuZXdBY2NvdW50LmNvZGUsIGVycm9yOiBuZXdBY2NvdW50Lm1lc3NhZ2UgfSk7XG4gIH1cblxuICB1cGRhdGVBY2NvdW50U3RhdHVzKHJlcSwgcmVzKSB7XG4gICAgY29uc3QgeyBzdGF0dXMsIHVzZXJJZCB9ID0gcmVxLmJvZHk7XG4gICAgY29uc3QgYWNjb3VudE51bWJlciA9IHJlcS5wYXJhbXMuYWNjb3VudE51bWJlcjtcbiAgICBjb25zdCBhY2NvdW50ID0gbmV3IEFjY291bnQoKTtcbiAgICBjb25zdCB1cGRhdGVkQWNjb3VudCA9IGFjY291bnQudXBkYXRlQWNjb3VudFN0YXR1cyh7IHN0YXR1cywgYWNjb3VudE51bWJlciB9LCB1c2VySWQpO1xuXG4gICAgaWYgKCF1cGRhdGVkQWNjb3VudC5lcnJvcikge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPVxuICAgICAgICByZXEuYm9keS5zdGF0dXMgPT09ICdkZWxldGVkJ1xuICAgICAgICAgID8geyBzdGF0dXM6IHVwZGF0ZWRBY2NvdW50LmNvZGUsIG1lc3NhZ2U6IHVwZGF0ZWRBY2NvdW50Lm1lc3NhZ2UgfVxuICAgICAgICAgIDogeyBzdGF0dXM6IHVwZGF0ZWRBY2NvdW50LmNvZGUsIGRhdGE6IHVwZGF0ZWRBY2NvdW50LmRhdGEgfTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKHVwZGF0ZWRBY2NvdW50LmNvZGUpLnNlbmQocmVzcG9uc2UpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzXG4gICAgICAuc3RhdHVzKHVwZGF0ZWRBY2NvdW50LmNvZGUpXG4gICAgICAuc2VuZCh7IHN0YXR1czogdXBkYXRlZEFjY291bnQuY29kZSwgZXJyb3I6IHVwZGF0ZWRBY2NvdW50Lm1lc3NhZ2UgfSk7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "account.controller.js"
      ],
      "names": [
        "AccountController",
        "req",
        "res",
        "accountInfo",
        "body",
        "account",
        "Account",
        "newAccount",
        "addAccount",
        "error",
        "status",
        "code",
        "send",
        "data",
        "message",
        "userId",
        "accountNumber",
        "params",
        "updatedAccount",
        "updateAccountStatus",
        "response"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEqBA,iB;;;;;;;;;kCACLC,G,EAAKC,G,EAAK;AACtB,UAAMC,WAAW,GAAGF,GAAG,CAACG,IAAxB;AACA,UAAMC,OAAO,GAAG,IAAIC,oBAAJ,EAAhB;AACA,UAAMC,UAAU,GAAGF,OAAO,CAACG,UAAR,CAAmBL,WAAnB,CAAnB;;AAEA,UAAI,CAACI,UAAU,CAACE,KAAhB,EAAuB;AACrB,eAAOP,GAAG,CAACQ,MAAJ,CAAWH,UAAU,CAACI,IAAtB,EAA4BC,IAA5B,CAAiC;AAAEF,UAAAA,MAAM,EAAEH,UAAU,CAACI,IAArB;AAA2BE,UAAAA,IAAI,EAAEN,UAAU,CAACM;AAA5C,SAAjC,CAAP;AACD;;AACD,aAAOX,GAAG,CAACQ,MAAJ,CAAWH,UAAU,CAACI,IAAtB,EAA4BC,IAA5B,CAAiC;AAAEF,QAAAA,MAAM,EAAEH,UAAU,CAACI,IAArB;AAA2BF,QAAAA,KAAK,EAAEF,UAAU,CAACO;AAA7C,OAAjC,CAAP;AACD;;;wCAEmBb,G,EAAKC,G,EAAK;AAAA,sBACDD,GAAG,CAACG,IADH;AAAA,UACpBM,MADoB,aACpBA,MADoB;AAAA,UACZK,MADY,aACZA,MADY;AAE5B,UAAMC,aAAa,GAAGf,GAAG,CAACgB,MAAJ,CAAWD,aAAjC;AACA,UAAMX,OAAO,GAAG,IAAIC,oBAAJ,EAAhB;AACA,UAAMY,cAAc,GAAGb,OAAO,CAACc,mBAAR,CAA4B;AAAET,QAAAA,MAAM,EAANA,MAAF;AAAUM,QAAAA,aAAa,EAAbA;AAAV,OAA5B,EAAuDD,MAAvD,CAAvB;;AAEA,UAAI,CAACG,cAAc,CAACT,KAApB,EAA2B;AACzB,YAAMW,QAAQ,GACZnB,GAAG,CAACG,IAAJ,CAASM,MAAT,KAAoB,SAApB,GACI;AAAEA,UAAAA,MAAM,EAAEQ,cAAc,CAACP,IAAzB;AAA+BG,UAAAA,OAAO,EAAEI,cAAc,CAACJ;AAAvD,SADJ,GAEI;AAAEJ,UAAAA,MAAM,EAAEQ,cAAc,CAACP,IAAzB;AAA+BE,UAAAA,IAAI,EAAEK,cAAc,CAACL;AAApD,SAHN;AAIA,eAAOX,GAAG,CAACQ,MAAJ,CAAWQ,cAAc,CAACP,IAA1B,EAAgCC,IAAhC,CAAqCQ,QAArC,CAAP;AACD;;AACD,aAAOlB,GAAG,CACPQ,MADI,CACGQ,cAAc,CAACP,IADlB,EAEJC,IAFI,CAEC;AAAEF,QAAAA,MAAM,EAAEQ,cAAc,CAACP,IAAzB;AAA+BF,QAAAA,KAAK,EAAES,cAAc,CAACJ;AAArD,OAFD,CAAP;AAGD",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
      "sourcesContent": [
        "import Account from '../services/accounts.service';\n\nexport default class AccountController {\n  createAccount(req, res) {\n    const accountInfo = req.body;\n    const account = new Account();\n    const newAccount = account.addAccount(accountInfo);\n\n    if (!newAccount.error) {\n      return res.status(newAccount.code).send({ status: newAccount.code, data: newAccount.data });\n    }\n    return res.status(newAccount.code).send({ status: newAccount.code, error: newAccount.message });\n  }\n\n  updateAccountStatus(req, res) {\n    const { status, userId } = req.body;\n    const accountNumber = req.params.accountNumber;\n    const account = new Account();\n    const updatedAccount = account.updateAccountStatus({ status, accountNumber }, userId);\n\n    if (!updatedAccount.error) {\n      const response =\n        req.body.status === 'deleted'\n          ? { status: updatedAccount.code, message: updatedAccount.message }\n          : { status: updatedAccount.code, data: updatedAccount.data };\n      return res.status(updatedAccount.code).send(response);\n    }\n    return res\n      .status(updatedAccount.code)\n      .send({ status: updatedAccount.code, error: updatedAccount.message });\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555112567910
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\services\\\\accounts.service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\accounts.service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\accounts.service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\accounts.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
        "sourceFileName": "accounts.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _accounts = require(\"../.data/accounts\");\n\nvar _helpers = require(\"../Helpers/helpers\");\n\nvar _user = _interopRequireDefault(require(\"./user.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @exports\n * @class AccountService\n */\nvar AccountService =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of AccountService.\n   * @memberof AccountService\n   */\n  function AccountService() {\n    _classCallCheck(this, AccountService);\n\n    this.accounts = _accounts.accounts;\n  }\n  /**\n   * Get all account resources.\n   * @param null\n   * @returns {object}\n   */\n\n\n  _createClass(AccountService, [{\n    key: \"getAllAccounts\",\n    value: function getAllAccounts() {\n      return this.accounts;\n    }\n    /**\n     * Creates a new bank account.\n     * @param {object} accountInfo\n     * @returns {object}\n     */\n\n  }, {\n    key: \"addAccount\",\n    value: function addAccount(accountInfo) {\n      var allAccounts = this.getAllAccounts();\n      var newId = (0, _helpers.getLastId)(allAccounts) + 1;\n      var userAccounts = allAccounts.filter(function (account) {\n        return account.owner === accountInfo.owner;\n      });\n      var account_type_exists = (0, _helpers.recordExists)(userAccounts, accountInfo, 'type');\n\n      if (account_type_exists) {\n        return {\n          message: \"You already have a \".concat(accountInfo.type, \" account\"),\n          error: true,\n          code: 401\n        };\n      } else {\n        var account_number = Math.max.apply(Math, _toConsumableArray(this.getAllAccounts().map(function (account) {\n          return account.accountNumber;\n        }))) + 1; // console.log('Account number',account_number);\n\n        var userService = new _user[\"default\"]();\n        var userInfo = userService.getUserInfo(accountInfo.owner);\n\n        if (!userInfo.error) {\n          var _userInfo$data = userInfo.data,\n              id = _userInfo$data.id,\n              firstName = _userInfo$data.firstName,\n              lastName = _userInfo$data.lastName,\n              email = _userInfo$data.email;\n          var newAccount = {\n            id: newId,\n            accountNumber: account_number,\n            type: accountInfo.type,\n            openingBalance: parseFloat('0.00'),\n            createdOn: new Date(),\n            owner: id,\n            firstName: firstName,\n            lastName: lastName,\n            email: email\n          };\n          return {\n            message: 'Account Created successfully',\n            error: false,\n            code: 201,\n            data: _objectSpread({}, newAccount)\n          };\n        } else {\n          return {\n            message: 'Error Creating Account User information required',\n            error: true,\n            code: 403\n          };\n        }\n      }\n    }\n    /**\n     * Activates/Deactvate a bank account.\n     * @param {number} userId\n     * @param {object} update\n     * @returns {object}\n     */\n\n  }, {\n    key: \"updateAccountStatus\",\n    value: function updateAccountStatus(update, userId) {\n      var users = new _user[\"default\"]();\n      var allUsers = users.getAllUsers();\n      var validUser = allUsers.filter(function (db_user) {\n        return userId === db_user.id && db_user.isAdmin === true;\n      });\n\n      if (validUser.length) {\n        var accountToUpdate = this.accounts.filter(function (account) {\n          return account.accountNumber === parseInt(update.accountNumber);\n        });\n\n        if (accountToUpdate.length) {\n          var allowedStatuses = ['deleted', 'dormant', 'active'];\n\n          if (!allowedStatuses.includes(update.status)) {\n            return {\n              message: \"Unidentified status specified\",\n              error: true,\n              code: 400\n            };\n          }\n\n          if (update.status === 'deleted') {\n            accountToUpdate[0].status = 'deleted';\n            return {\n              message: \"Account deleted successfully\",\n              error: false,\n              code: 200\n            };\n          } else {\n            accountToUpdate[0].status = accountToUpdate[0].status === 'active' ? 'dormant' : 'active';\n            return {\n              message: \"Account Status successfully updated to '\".concat(accountToUpdate[0].status, \"'\"),\n              error: false,\n              code: 200,\n              data: _objectSpread({}, accountToUpdate[0])\n            };\n          }\n        } else {\n          return {\n            message: \"Account number \".concat(update.accountNumber, \" does not exist\"),\n            error: true,\n            code: 404\n          };\n        }\n      } else {\n        return {\n          message: 'You are not authorized to perform this action.',\n          error: true,\n          code: 403\n        };\n      }\n    }\n  }]);\n\n  return AccountService;\n}();\n\nexports[\"default\"] = AccountService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "accounts.service.js"
      ],
      "names": [
        "AccountService",
        "accounts",
        "accountInfo",
        "allAccounts",
        "getAllAccounts",
        "newId",
        "userAccounts",
        "filter",
        "account",
        "owner",
        "account_type_exists",
        "message",
        "type",
        "error",
        "code",
        "account_number",
        "Math",
        "max",
        "map",
        "accountNumber",
        "userService",
        "UserService",
        "userInfo",
        "getUserInfo",
        "data",
        "id",
        "firstName",
        "lastName",
        "email",
        "newAccount",
        "openingBalance",
        "parseFloat",
        "createdOn",
        "Date",
        "update",
        "userId",
        "users",
        "allUsers",
        "getAllUsers",
        "validUser",
        "db_user",
        "isAdmin",
        "length",
        "accountToUpdate",
        "parseInt",
        "allowedStatuses",
        "includes",
        "status"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;IAKqBA,c;;;AACnB;;;;AAIA,4BAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgBA,kBAAhB;AACD;AAED;;;;;;;;;qCAKiB;AACf,aAAO,KAAKA,QAAZ;AACD;AAED;;;;;;;;+BAKWC,W,EAAa;AACtB,UAAMC,WAAW,GAAG,KAAKC,cAAL,EAApB;AACA,UAAMC,KAAK,GAAG,wBAAUF,WAAV,IAAyB,CAAvC;AACA,UAAMG,YAAY,GAAGH,WAAW,CAACI,MAAZ,CAAmB,UAAAC,OAAO,EAAI;AACjD,eAAOA,OAAO,CAACC,KAAR,KAAkBP,WAAW,CAACO,KAArC;AACD,OAFoB,CAArB;AAGA,UAAMC,mBAAmB,GAAG,2BAAaJ,YAAb,EAA2BJ,WAA3B,EAAwC,MAAxC,CAA5B;;AAEA,UAAIQ,mBAAJ,EAAyB;AACvB,eAAO;AAAEC,UAAAA,OAAO,+BAAwBT,WAAW,CAACU,IAApC,aAAT;AAA6DC,UAAAA,KAAK,EAAE,IAApE;AAA0EC,UAAAA,IAAI,EAAE;AAAhF,SAAP;AACD,OAFD,MAEO;AACL,YAAMC,cAAc,GAClBC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ,KAAKZ,cAAL,GAAsBc,GAAtB,CAA0B,UAAAV,OAAO;AAAA,iBAAIA,OAAO,CAACW,aAAZ;AAAA,SAAjC,CAAR,EAAJ,GAA2E,CAD7E,CADK,CAGL;;AACA,YAAMC,WAAW,GAAG,IAAIC,gBAAJ,EAApB;AACA,YAAMC,QAAQ,GAAGF,WAAW,CAACG,WAAZ,CAAwBrB,WAAW,CAACO,KAApC,CAAjB;;AACA,YAAI,CAACa,QAAQ,CAACT,KAAd,EAAqB;AAAA,+BACwBS,QAAQ,CAACE,IADjC;AAAA,cACXC,EADW,kBACXA,EADW;AAAA,cACPC,SADO,kBACPA,SADO;AAAA,cACIC,QADJ,kBACIA,QADJ;AAAA,cACcC,KADd,kBACcA,KADd;AAEnB,cAAMC,UAAU,GAAG;AACjBJ,YAAAA,EAAE,EAAEpB,KADa;AAEjBc,YAAAA,aAAa,EAAEJ,cAFE;AAGjBH,YAAAA,IAAI,EAAEV,WAAW,CAACU,IAHD;AAIjBkB,YAAAA,cAAc,EAAEC,UAAU,CAAC,MAAD,CAJT;AAKjBC,YAAAA,SAAS,EAAE,IAAIC,IAAJ,EALM;AAMjBxB,YAAAA,KAAK,EAAEgB,EANU;AAOjBC,YAAAA,SAAS,EAATA,SAPiB;AAQjBC,YAAAA,QAAQ,EAARA,QARiB;AASjBC,YAAAA,KAAK,EAALA;AATiB,WAAnB;AAYA,iBAAO;AACLjB,YAAAA,OAAO,EAAE,8BADJ;AAELE,YAAAA,KAAK,EAAE,KAFF;AAGLC,YAAAA,IAAI,EAAE,GAHD;AAILU,YAAAA,IAAI,oBAAOK,UAAP;AAJC,WAAP;AAMD,SApBD,MAoBO;AACL,iBAAO;AACLlB,YAAAA,OAAO,EAAE,kDADJ;AAELE,YAAAA,KAAK,EAAE,IAFF;AAGLC,YAAAA,IAAI,EAAE;AAHD,WAAP;AAKD;AACF;AACF;AAED;;;;;;;;;wCAMoBoB,M,EAAQC,M,EAAQ;AAClC,UAAMC,KAAK,GAAG,IAAIf,gBAAJ,EAAd;AACA,UAAMgB,QAAQ,GAAGD,KAAK,CAACE,WAAN,EAAjB;AACA,UAAMC,SAAS,GAAGF,QAAQ,CAAC9B,MAAT,CAAgB,UAAAiC,OAAO,EAAI;AAC3C,eAAOL,MAAM,KAAKK,OAAO,CAACf,EAAnB,IAAyBe,OAAO,CAACC,OAAR,KAAoB,IAApD;AACD,OAFiB,CAAlB;;AAGA,UAAIF,SAAS,CAACG,MAAd,EAAsB;AACpB,YAAMC,eAAe,GAAG,KAAK1C,QAAL,CAAcM,MAAd,CAAqB,UAAAC,OAAO,EAAI;AACtD,iBAAOA,OAAO,CAACW,aAAR,KAA0ByB,QAAQ,CAACV,MAAM,CAACf,aAAR,CAAzC;AACD,SAFuB,CAAxB;;AAGA,YAAIwB,eAAe,CAACD,MAApB,EAA4B;AAC1B,cAAMG,eAAe,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,CAAxB;;AACA,cAAI,CAACA,eAAe,CAACC,QAAhB,CAAyBZ,MAAM,CAACa,MAAhC,CAAL,EAA8C;AAC5C,mBAAO;AACLpC,cAAAA,OAAO,iCADF;AAELE,cAAAA,KAAK,EAAE,IAFF;AAGLC,cAAAA,IAAI,EAAE;AAHD,aAAP;AAKD;;AACD,cAAIoB,MAAM,CAACa,MAAP,KAAkB,SAAtB,EAAiC;AAC/BJ,YAAAA,eAAe,CAAC,CAAD,CAAf,CAAmBI,MAAnB,GAA4B,SAA5B;AACA,mBAAO;AACLpC,cAAAA,OAAO,gCADF;AAELE,cAAAA,KAAK,EAAE,KAFF;AAGLC,cAAAA,IAAI,EAAE;AAHD,aAAP;AAKD,WAPD,MAOO;AACL6B,YAAAA,eAAe,CAAC,CAAD,CAAf,CAAmBI,MAAnB,GAA4BJ,eAAe,CAAC,CAAD,CAAf,CAAmBI,MAAnB,KAA8B,QAA9B,GAAyC,SAAzC,GAAqD,QAAjF;AACA,mBAAO;AACLpC,cAAAA,OAAO,oDAA6CgC,eAAe,CAAC,CAAD,CAAf,CAAmBI,MAAhE,MADF;AAELlC,cAAAA,KAAK,EAAE,KAFF;AAGLC,cAAAA,IAAI,EAAE,GAHD;AAILU,cAAAA,IAAI,oBAAOmB,eAAe,CAAC,CAAD,CAAtB;AAJC,aAAP;AAMD;AACF,SAzBD,MAyBO;AACL,iBAAO;AACLhC,YAAAA,OAAO,2BAAoBuB,MAAM,CAACf,aAA3B,oBADF;AAELN,YAAAA,KAAK,EAAE,IAFF;AAGLC,YAAAA,IAAI,EAAE;AAHD,WAAP;AAKD;AACF,OApCD,MAoCO;AACL,eAAO;AACLH,UAAAA,OAAO,EAAE,gDADJ;AAELE,UAAAA,KAAK,EAAE,IAFF;AAGLC,UAAAA,IAAI,EAAE;AAHD,SAAP;AAKD;AACF",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
      "sourcesContent": [
        "import { accounts } from '../.data/accounts';\nimport { recordExists, getLastId } from '../Helpers/helpers';\nimport UserService from './user.service';\n\n/**\n * @exports\n * @class AccountService\n */\n\nexport default class AccountService {\n  /**\n   * Creates an instance of AccountService.\n   * @memberof AccountService\n   */\n  constructor() {\n    this.accounts = accounts;\n  }\n\n  /**\n   * Get all account resources.\n   * @param null\n   * @returns {object}\n   */\n  getAllAccounts() {\n    return this.accounts;\n  }\n\n  /**\n   * Creates a new bank account.\n   * @param {object} accountInfo\n   * @returns {object}\n   */\n  addAccount(accountInfo) {\n    const allAccounts = this.getAllAccounts();\n    const newId = getLastId(allAccounts) + 1;\n    const userAccounts = allAccounts.filter(account => {\n      return account.owner === accountInfo.owner;\n    });\n    const account_type_exists = recordExists(userAccounts, accountInfo, 'type');\n\n    if (account_type_exists) {\n      return { message: `You already have a ${accountInfo.type} account`, error: true, code: 401 };\n    } else {\n      const account_number =\n        Math.max(...this.getAllAccounts().map(account => account.accountNumber)) + 1;\n      // console.log('Account number',account_number);\n      const userService = new UserService();\n      const userInfo = userService.getUserInfo(accountInfo.owner);\n      if (!userInfo.error) {\n        const { id, firstName, lastName, email } = userInfo.data;\n        const newAccount = {\n          id: newId,\n          accountNumber: account_number,\n          type: accountInfo.type,\n          openingBalance: parseFloat('0.00'),\n          createdOn: new Date(),\n          owner: id,\n          firstName,\n          lastName,\n          email\n        };\n\n        return {\n          message: 'Account Created successfully',\n          error: false,\n          code: 201,\n          data: { ...newAccount }\n        };\n      } else {\n        return {\n          message: 'Error Creating Account User information required',\n          error: true,\n          code: 403\n        };\n      }\n    }\n  }\n\n  /**\n   * Activates/Deactvate a bank account.\n   * @param {number} userId\n   * @param {object} update\n   * @returns {object}\n   */\n  updateAccountStatus(update, userId) {\n    const users = new UserService();\n    const allUsers = users.getAllUsers();\n    const validUser = allUsers.filter(db_user => {\n      return userId === db_user.id && db_user.isAdmin === true;\n    });\n    if (validUser.length) {\n      const accountToUpdate = this.accounts.filter(account => {\n        return account.accountNumber === parseInt(update.accountNumber);\n      });\n      if (accountToUpdate.length) {\n        const allowedStatuses = ['deleted', 'dormant', 'active'];\n        if (!allowedStatuses.includes(update.status)) {\n          return {\n            message: `Unidentified status specified`,\n            error: true,\n            code: 400\n          };\n        }\n        if (update.status === 'deleted') {\n          accountToUpdate[0].status = 'deleted';\n          return {\n            message: `Account deleted successfully`,\n            error: false,\n            code: 200\n          };\n        } else {\n          accountToUpdate[0].status = accountToUpdate[0].status === 'active' ? 'dormant' : 'active';\n          return {\n            message: `Account Status successfully updated to '${accountToUpdate[0].status}'`,\n            error: false,\n            code: 200,\n            data: { ...accountToUpdate[0] }\n          };\n        }\n      } else {\n        return {\n          message: `Account number ${update.accountNumber} does not exist`,\n          error: true,\n          code: 404\n        };\n      }\n    } else {\n      return {\n        message: 'You are not authorized to perform this action.',\n        error: true,\n        code: 403\n      };\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555149965434
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\.data\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\.data\\\\accounts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\accounts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\accounts.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\accounts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
        "sourceFileName": "accounts.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.accounts = void 0;\nvar accounts = [{\n  id: 1,\n  accountNumber: 1233445642,\n  createdOn: '2019-04-10 12:35:00',\n  owner: 3,\n  // user id\n  type: 'savings',\n  // savings, current\n  status: 'active',\n  // draft, active, or dormant\n  balance: 1234125.0\n}, {\n  id: 2,\n  accountNumber: 1233445643,\n  createdOn: '2019-04-10 12:35:00',\n  owner: 5,\n  // user id\n  type: 'savings',\n  // savings, current\n  status: 'active',\n  // draft, active, or dormant\n  balance: 1234125.0\n}];\nexports.accounts = accounts;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnRzLmpzIl0sIm5hbWVzIjpbImFjY291bnRzIiwiaWQiLCJhY2NvdW50TnVtYmVyIiwiY3JlYXRlZE9uIiwib3duZXIiLCJ0eXBlIiwic3RhdHVzIiwiYmFsYW5jZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsUUFBUSxHQUFHLENBQ3RCO0FBQ0VDLEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLEVBQUFBLGFBQWEsRUFBRSxVQUZqQjtBQUdFQyxFQUFBQSxTQUFTLEVBQUUscUJBSGI7QUFJRUMsRUFBQUEsS0FBSyxFQUFFLENBSlQ7QUFJWTtBQUNWQyxFQUFBQSxJQUFJLEVBQUUsU0FMUjtBQUttQjtBQUNqQkMsRUFBQUEsTUFBTSxFQUFFLFFBTlY7QUFNb0I7QUFDbEJDLEVBQUFBLE9BQU8sRUFBRTtBQVBYLENBRHNCLEVBVXRCO0FBQ0VOLEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLEVBQUFBLGFBQWEsRUFBRSxVQUZqQjtBQUdFQyxFQUFBQSxTQUFTLEVBQUUscUJBSGI7QUFJRUMsRUFBQUEsS0FBSyxFQUFFLENBSlQ7QUFJWTtBQUNWQyxFQUFBQSxJQUFJLEVBQUUsU0FMUjtBQUttQjtBQUNqQkMsRUFBQUEsTUFBTSxFQUFFLFFBTlY7QUFNb0I7QUFDbEJDLEVBQUFBLE9BQU8sRUFBRTtBQVBYLENBVnNCLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcT2xheWlua2FcXEFEQ1xcYmFua2FcXGFwaVxcc3JjXFwuZGF0YSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBhY2NvdW50cyA9IFtcbiAge1xuICAgIGlkOiAxLFxuICAgIGFjY291bnROdW1iZXI6IDEyMzM0NDU2NDIsXG4gICAgY3JlYXRlZE9uOiAnMjAxOS0wNC0xMCAxMjozNTowMCcsXG4gICAgb3duZXI6IDMsIC8vIHVzZXIgaWRcbiAgICB0eXBlOiAnc2F2aW5ncycsIC8vIHNhdmluZ3MsIGN1cnJlbnRcbiAgICBzdGF0dXM6ICdhY3RpdmUnLCAvLyBkcmFmdCwgYWN0aXZlLCBvciBkb3JtYW50XG4gICAgYmFsYW5jZTogMTIzNDEyNS4wXG4gIH0sXG4gIHtcbiAgICBpZDogMixcbiAgICBhY2NvdW50TnVtYmVyOiAxMjMzNDQ1NjQzLFxuICAgIGNyZWF0ZWRPbjogJzIwMTktMDQtMTAgMTI6MzU6MDAnLFxuICAgIG93bmVyOiA1LCAvLyB1c2VyIGlkXG4gICAgdHlwZTogJ3NhdmluZ3MnLCAvLyBzYXZpbmdzLCBjdXJyZW50XG4gICAgc3RhdHVzOiAnYWN0aXZlJywgLy8gZHJhZnQsIGFjdGl2ZSwgb3IgZG9ybWFudFxuICAgIGJhbGFuY2U6IDEyMzQxMjUuMFxuICB9XG5dO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "accounts.js"
      ],
      "names": [
        "accounts",
        "id",
        "accountNumber",
        "createdOn",
        "owner",
        "type",
        "status",
        "balance"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,QAAQ,GAAG,CACtB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,aAAa,EAAE,UAFjB;AAGEC,EAAAA,SAAS,EAAE,qBAHb;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAIY;AACVC,EAAAA,IAAI,EAAE,SALR;AAKmB;AACjBC,EAAAA,MAAM,EAAE,QANV;AAMoB;AAClBC,EAAAA,OAAO,EAAE;AAPX,CADsB,EAUtB;AACEN,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,aAAa,EAAE,UAFjB;AAGEC,EAAAA,SAAS,EAAE,qBAHb;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAIY;AACVC,EAAAA,IAAI,EAAE,SALR;AAKmB;AACjBC,EAAAA,MAAM,EAAE,QANV;AAMoB;AAClBC,EAAAA,OAAO,EAAE;AAPX,CAVsB,CAAjB",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
      "sourcesContent": [
        "export const accounts = [\n  {\n    id: 1,\n    accountNumber: 1233445642,\n    createdOn: '2019-04-10 12:35:00',\n    owner: 3, // user id\n    type: 'savings', // savings, current\n    status: 'active', // draft, active, or dormant\n    balance: 1234125.0\n  },\n  {\n    id: 2,\n    accountNumber: 1233445643,\n    createdOn: '2019-04-10 12:35:00',\n    owner: 5, // user id\n    type: 'savings', // savings, current\n    status: 'active', // draft, active, or dormant\n    balance: 1234125.0\n  }\n];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555149964716
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\tests\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\tests\\\\users.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests\\users.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests\\users.test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests\\users.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests",
        "sourceFileName": "users.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _index = require(\"../index\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar expect = _chai[\"default\"].expect; // const assert = chai.assert;\n\nvar should = _chai[\"default\"].should();\n\n_chai[\"default\"].use(_chaiHttp[\"default\"]);\n\ndescribe('Users', function () {\n  describe('/POST User Register', function () {\n    it('It should sign up a new user', function (done) {\n      var new_user = {\n        firstname: 'first_' + Math.random().toString(36).replace(/[^a-zA-Z0-9]+/g, ''),\n        lastname: 'last_' + Math.random().toString(36).replace(/[^a-zA-Z0-9]+/g, ''),\n        password: 'anothertestpass2',\n        email: Math.random().toString(36).replace(/[^a-zA-Z0-9]+/g, '') + '@mail.com',\n        type: 3,\n        isAdmin: false,\n        updated_at: new Date(),\n        updated_by: 0,\n        created_at: new Date()\n      };\n\n      _chai[\"default\"].request(_index.app).post('/api/v1/auth/signup').send(new_user).end(function (err, res) {\n        expect(new_user).to.have.property('firstname');\n        expect(new_user).to.have.property('lastname');\n        expect(new_user).to.have.property('password');\n        expect(new_user).to.have.property('email');\n        expect(new_user).to.have.property('type');\n        new_user.type.should.equal(3);\n        res.should.have.status(201);\n        expect(res.body).to.be.an('object');\n        done();\n      });\n    });\n  });\n  describe('/POST Login A User', function () {\n    it('It should log a user in', function (done) {\n      var user = {\n        email: 'admin@banka.com',\n        password: 'adminpass@421'\n      };\n\n      _chai[\"default\"].request(_index.app).post('/api/v1/auth/signin').send(user).end(function (err, res) {\n        expect(user).to.have.property('email');\n        expect(user).to.have.property('password');\n        res.should.have.status(200);\n        expect(res.body).to.be.an('object');\n        done();\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLnRlc3QuanMiXSwibmFtZXMiOlsiZXhwZWN0IiwiY2hhaSIsInNob3VsZCIsInVzZSIsImNoYWlIdHRwIiwiZGVzY3JpYmUiLCJpdCIsImRvbmUiLCJuZXdfdXNlciIsImZpcnN0bmFtZSIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInJlcGxhY2UiLCJsYXN0bmFtZSIsInBhc3N3b3JkIiwiZW1haWwiLCJ0eXBlIiwiaXNBZG1pbiIsInVwZGF0ZWRfYXQiLCJEYXRlIiwidXBkYXRlZF9ieSIsImNyZWF0ZWRfYXQiLCJyZXF1ZXN0IiwiYXBwIiwicG9zdCIsInNlbmQiLCJlbmQiLCJlcnIiLCJyZXMiLCJ0byIsImhhdmUiLCJwcm9wZXJ0eSIsImVxdWFsIiwic3RhdHVzIiwiYm9keSIsImJlIiwiYW4iLCJ1c2VyIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHQyxpQkFBS0QsTUFBcEIsQyxDQUNBOztBQUNBLElBQU1FLE1BQU0sR0FBR0QsaUJBQUtDLE1BQUwsRUFBZjs7QUFFQUQsaUJBQUtFLEdBQUwsQ0FBU0Msb0JBQVQ7O0FBQ0FDLFFBQVEsQ0FBQyxPQUFELEVBQVUsWUFBTTtBQUN0QkEsRUFBQUEsUUFBUSxDQUFDLHFCQUFELEVBQXdCLFlBQU07QUFDcENDLElBQUFBLEVBQUUsQ0FBQyw4QkFBRCxFQUFpQyxVQUFBQyxJQUFJLEVBQUk7QUFDekMsVUFBTUMsUUFBUSxHQUFHO0FBQ2ZDLFFBQUFBLFNBQVMsRUFDUCxXQUNBQyxJQUFJLENBQUNDLE1BQUwsR0FDR0MsUUFESCxDQUNZLEVBRFosRUFFR0MsT0FGSCxDQUVXLGdCQUZYLEVBRTZCLEVBRjdCLENBSGE7QUFNZkMsUUFBQUEsUUFBUSxFQUNOLFVBQ0FKLElBQUksQ0FBQ0MsTUFBTCxHQUNHQyxRQURILENBQ1ksRUFEWixFQUVHQyxPQUZILENBRVcsZ0JBRlgsRUFFNkIsRUFGN0IsQ0FSYTtBQVdmRSxRQUFBQSxRQUFRLEVBQUUsa0JBWEs7QUFZZkMsUUFBQUEsS0FBSyxFQUNITixJQUFJLENBQUNDLE1BQUwsR0FDR0MsUUFESCxDQUNZLEVBRFosRUFFR0MsT0FGSCxDQUVXLGdCQUZYLEVBRTZCLEVBRjdCLElBRW1DLFdBZnRCO0FBZ0JmSSxRQUFBQSxJQUFJLEVBQUUsQ0FoQlM7QUFpQmZDLFFBQUFBLE9BQU8sRUFBRSxLQWpCTTtBQWtCZkMsUUFBQUEsVUFBVSxFQUFFLElBQUlDLElBQUosRUFsQkc7QUFtQmZDLFFBQUFBLFVBQVUsRUFBRSxDQW5CRztBQW9CZkMsUUFBQUEsVUFBVSxFQUFFLElBQUlGLElBQUo7QUFwQkcsT0FBakI7O0FBc0JBbkIsdUJBQ0dzQixPQURILENBQ1dDLFVBRFgsRUFFR0MsSUFGSCxDQUVRLHFCQUZSLEVBR0dDLElBSEgsQ0FHUWxCLFFBSFIsRUFJR21CLEdBSkgsQ0FJTyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQjdCLFFBQUFBLE1BQU0sQ0FBQ1EsUUFBRCxDQUFOLENBQWlCc0IsRUFBakIsQ0FBb0JDLElBQXBCLENBQXlCQyxRQUF6QixDQUFrQyxXQUFsQztBQUNBaEMsUUFBQUEsTUFBTSxDQUFDUSxRQUFELENBQU4sQ0FBaUJzQixFQUFqQixDQUFvQkMsSUFBcEIsQ0FBeUJDLFFBQXpCLENBQWtDLFVBQWxDO0FBQ0FoQyxRQUFBQSxNQUFNLENBQUNRLFFBQUQsQ0FBTixDQUFpQnNCLEVBQWpCLENBQW9CQyxJQUFwQixDQUF5QkMsUUFBekIsQ0FBa0MsVUFBbEM7QUFDQWhDLFFBQUFBLE1BQU0sQ0FBQ1EsUUFBRCxDQUFOLENBQWlCc0IsRUFBakIsQ0FBb0JDLElBQXBCLENBQXlCQyxRQUF6QixDQUFrQyxPQUFsQztBQUNBaEMsUUFBQUEsTUFBTSxDQUFDUSxRQUFELENBQU4sQ0FBaUJzQixFQUFqQixDQUFvQkMsSUFBcEIsQ0FBeUJDLFFBQXpCLENBQWtDLE1BQWxDO0FBQ0F4QixRQUFBQSxRQUFRLENBQUNTLElBQVQsQ0FBY2YsTUFBZCxDQUFxQitCLEtBQXJCLENBQTJCLENBQTNCO0FBQ0FKLFFBQUFBLEdBQUcsQ0FBQzNCLE1BQUosQ0FBVzZCLElBQVgsQ0FBZ0JHLE1BQWhCLENBQXVCLEdBQXZCO0FBQ0FsQyxRQUFBQSxNQUFNLENBQUM2QixHQUFHLENBQUNNLElBQUwsQ0FBTixDQUFpQkwsRUFBakIsQ0FBb0JNLEVBQXBCLENBQXVCQyxFQUF2QixDQUEwQixRQUExQjtBQUNBOUIsUUFBQUEsSUFBSTtBQUNMLE9BZEg7QUFlRCxLQXRDQyxDQUFGO0FBdUNELEdBeENPLENBQVI7QUEwQ0FGLEVBQUFBLFFBQVEsQ0FBQyxvQkFBRCxFQUF1QixZQUFNO0FBQ25DQyxJQUFBQSxFQUFFLENBQUMseUJBQUQsRUFBNEIsVUFBQUMsSUFBSSxFQUFJO0FBQ3BDLFVBQU0rQixJQUFJLEdBQUc7QUFDWHRCLFFBQUFBLEtBQUssRUFBRSxpQkFESTtBQUVYRCxRQUFBQSxRQUFRLEVBQUU7QUFGQyxPQUFiOztBQUlBZCx1QkFDR3NCLE9BREgsQ0FDV0MsVUFEWCxFQUVHQyxJQUZILENBRVEscUJBRlIsRUFHR0MsSUFISCxDQUdRWSxJQUhSLEVBSUdYLEdBSkgsQ0FJTyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQjdCLFFBQUFBLE1BQU0sQ0FBQ3NDLElBQUQsQ0FBTixDQUFhUixFQUFiLENBQWdCQyxJQUFoQixDQUFxQkMsUUFBckIsQ0FBOEIsT0FBOUI7QUFDQWhDLFFBQUFBLE1BQU0sQ0FBQ3NDLElBQUQsQ0FBTixDQUFhUixFQUFiLENBQWdCQyxJQUFoQixDQUFxQkMsUUFBckIsQ0FBOEIsVUFBOUI7QUFDQUgsUUFBQUEsR0FBRyxDQUFDM0IsTUFBSixDQUFXNkIsSUFBWCxDQUFnQkcsTUFBaEIsQ0FBdUIsR0FBdkI7QUFDQWxDLFFBQUFBLE1BQU0sQ0FBQzZCLEdBQUcsQ0FBQ00sSUFBTCxDQUFOLENBQWlCTCxFQUFqQixDQUFvQk0sRUFBcEIsQ0FBdUJDLEVBQXZCLENBQTBCLFFBQTFCO0FBQ0E5QixRQUFBQSxJQUFJO0FBQ0wsT0FWSDtBQVdELEtBaEJDLENBQUY7QUFpQkQsR0FsQk8sQ0FBUjtBQW1CRCxDQTlETyxDQUFSIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcT2xheWlua2FcXEFEQ1xcYmFua2FcXGFwaVxcc3JjXFx0ZXN0cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlIdHRwIGZyb20gJ2NoYWktaHR0cCc7XG5pbXBvcnQgeyBhcHAgfSBmcm9tICcuLi9pbmRleCc7XG5cbmNvbnN0IGV4cGVjdCA9IGNoYWkuZXhwZWN0O1xuLy8gY29uc3QgYXNzZXJ0ID0gY2hhaS5hc3NlcnQ7XG5jb25zdCBzaG91bGQgPSBjaGFpLnNob3VsZCgpO1xuXG5jaGFpLnVzZShjaGFpSHR0cCk7XG5kZXNjcmliZSgnVXNlcnMnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCcvUE9TVCBVc2VyIFJlZ2lzdGVyJywgKCkgPT4ge1xuICAgIGl0KCdJdCBzaG91bGQgc2lnbiB1cCBhIG5ldyB1c2VyJywgZG9uZSA9PiB7XG4gICAgICBjb25zdCBuZXdfdXNlciA9IHtcbiAgICAgICAgZmlyc3RuYW1lOlxuICAgICAgICAgICdmaXJzdF8nICtcbiAgICAgICAgICBNYXRoLnJhbmRvbSgpXG4gICAgICAgICAgICAudG9TdHJpbmcoMzYpXG4gICAgICAgICAgICAucmVwbGFjZSgvW15hLXpBLVowLTldKy9nLCAnJyksXG4gICAgICAgIGxhc3RuYW1lOlxuICAgICAgICAgICdsYXN0XycgK1xuICAgICAgICAgIE1hdGgucmFuZG9tKClcbiAgICAgICAgICAgIC50b1N0cmluZygzNilcbiAgICAgICAgICAgIC5yZXBsYWNlKC9bXmEtekEtWjAtOV0rL2csICcnKSxcbiAgICAgICAgcGFzc3dvcmQ6ICdhbm90aGVydGVzdHBhc3MyJyxcbiAgICAgICAgZW1haWw6XG4gICAgICAgICAgTWF0aC5yYW5kb20oKVxuICAgICAgICAgICAgLnRvU3RyaW5nKDM2KVxuICAgICAgICAgICAgLnJlcGxhY2UoL1teYS16QS1aMC05XSsvZywgJycpICsgJ0BtYWlsLmNvbScsXG4gICAgICAgIHR5cGU6IDMsXG4gICAgICAgIGlzQWRtaW46IGZhbHNlLFxuICAgICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLFxuICAgICAgICB1cGRhdGVkX2J5OiAwLFxuICAgICAgICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpXG4gICAgICB9O1xuICAgICAgY2hhaVxuICAgICAgICAucmVxdWVzdChhcHApXG4gICAgICAgIC5wb3N0KCcvYXBpL3YxL2F1dGgvc2lnbnVwJylcbiAgICAgICAgLnNlbmQobmV3X3VzZXIpXG4gICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgICAgZXhwZWN0KG5ld191c2VyKS50by5oYXZlLnByb3BlcnR5KCdmaXJzdG5hbWUnKTtcbiAgICAgICAgICBleHBlY3QobmV3X3VzZXIpLnRvLmhhdmUucHJvcGVydHkoJ2xhc3RuYW1lJyk7XG4gICAgICAgICAgZXhwZWN0KG5ld191c2VyKS50by5oYXZlLnByb3BlcnR5KCdwYXNzd29yZCcpO1xuICAgICAgICAgIGV4cGVjdChuZXdfdXNlcikudG8uaGF2ZS5wcm9wZXJ0eSgnZW1haWwnKTtcbiAgICAgICAgICBleHBlY3QobmV3X3VzZXIpLnRvLmhhdmUucHJvcGVydHkoJ3R5cGUnKTtcbiAgICAgICAgICBuZXdfdXNlci50eXBlLnNob3VsZC5lcXVhbCgzKTtcbiAgICAgICAgICByZXMuc2hvdWxkLmhhdmUuc3RhdHVzKDIwMSk7XG4gICAgICAgICAgZXhwZWN0KHJlcy5ib2R5KS50by5iZS5hbignb2JqZWN0Jyk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJy9QT1NUIExvZ2luIEEgVXNlcicsICgpID0+IHtcbiAgICBpdCgnSXQgc2hvdWxkIGxvZyBhIHVzZXIgaW4nLCBkb25lID0+IHtcbiAgICAgIGNvbnN0IHVzZXIgPSB7XG4gICAgICAgIGVtYWlsOiAnYWRtaW5AYmFua2EuY29tJyxcbiAgICAgICAgcGFzc3dvcmQ6ICdhZG1pbnBhc3NANDIxJ1xuICAgICAgfTtcbiAgICAgIGNoYWlcbiAgICAgICAgLnJlcXVlc3QoYXBwKVxuICAgICAgICAucG9zdCgnL2FwaS92MS9hdXRoL3NpZ25pbicpXG4gICAgICAgIC5zZW5kKHVzZXIpXG4gICAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgICAgZXhwZWN0KHVzZXIpLnRvLmhhdmUucHJvcGVydHkoJ2VtYWlsJyk7XG4gICAgICAgICAgZXhwZWN0KHVzZXIpLnRvLmhhdmUucHJvcGVydHkoJ3Bhc3N3b3JkJyk7XG4gICAgICAgICAgcmVzLnNob3VsZC5oYXZlLnN0YXR1cygyMDApO1xuICAgICAgICAgIGV4cGVjdChyZXMuYm9keSkudG8uYmUuYW4oJ29iamVjdCcpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.test.js"
      ],
      "names": [
        "expect",
        "chai",
        "should",
        "use",
        "chaiHttp",
        "describe",
        "it",
        "done",
        "new_user",
        "firstname",
        "Math",
        "random",
        "toString",
        "replace",
        "lastname",
        "password",
        "email",
        "type",
        "isAdmin",
        "updated_at",
        "Date",
        "updated_by",
        "created_at",
        "request",
        "app",
        "post",
        "send",
        "end",
        "err",
        "res",
        "to",
        "have",
        "property",
        "equal",
        "status",
        "body",
        "be",
        "an",
        "user"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,iBAAKD,MAApB,C,CACA;;AACA,IAAME,MAAM,GAAGD,iBAAKC,MAAL,EAAf;;AAEAD,iBAAKE,GAAL,CAASC,oBAAT;;AACAC,QAAQ,CAAC,OAAD,EAAU,YAAM;AACtBA,EAAAA,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AACpCC,IAAAA,EAAE,CAAC,8BAAD,EAAiC,UAAAC,IAAI,EAAI;AACzC,UAAMC,QAAQ,GAAG;AACfC,QAAAA,SAAS,EACP,WACAC,IAAI,CAACC,MAAL,GACGC,QADH,CACY,EADZ,EAEGC,OAFH,CAEW,gBAFX,EAE6B,EAF7B,CAHa;AAMfC,QAAAA,QAAQ,EACN,UACAJ,IAAI,CAACC,MAAL,GACGC,QADH,CACY,EADZ,EAEGC,OAFH,CAEW,gBAFX,EAE6B,EAF7B,CARa;AAWfE,QAAAA,QAAQ,EAAE,kBAXK;AAYfC,QAAAA,KAAK,EACHN,IAAI,CAACC,MAAL,GACGC,QADH,CACY,EADZ,EAEGC,OAFH,CAEW,gBAFX,EAE6B,EAF7B,IAEmC,WAftB;AAgBfI,QAAAA,IAAI,EAAE,CAhBS;AAiBfC,QAAAA,OAAO,EAAE,KAjBM;AAkBfC,QAAAA,UAAU,EAAE,IAAIC,IAAJ,EAlBG;AAmBfC,QAAAA,UAAU,EAAE,CAnBG;AAoBfC,QAAAA,UAAU,EAAE,IAAIF,IAAJ;AApBG,OAAjB;;AAsBAnB,uBACGsB,OADH,CACWC,UADX,EAEGC,IAFH,CAEQ,qBAFR,EAGGC,IAHH,CAGQlB,QAHR,EAIGmB,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB7B,QAAAA,MAAM,CAACQ,QAAD,CAAN,CAAiBsB,EAAjB,CAAoBC,IAApB,CAAyBC,QAAzB,CAAkC,WAAlC;AACAhC,QAAAA,MAAM,CAACQ,QAAD,CAAN,CAAiBsB,EAAjB,CAAoBC,IAApB,CAAyBC,QAAzB,CAAkC,UAAlC;AACAhC,QAAAA,MAAM,CAACQ,QAAD,CAAN,CAAiBsB,EAAjB,CAAoBC,IAApB,CAAyBC,QAAzB,CAAkC,UAAlC;AACAhC,QAAAA,MAAM,CAACQ,QAAD,CAAN,CAAiBsB,EAAjB,CAAoBC,IAApB,CAAyBC,QAAzB,CAAkC,OAAlC;AACAhC,QAAAA,MAAM,CAACQ,QAAD,CAAN,CAAiBsB,EAAjB,CAAoBC,IAApB,CAAyBC,QAAzB,CAAkC,MAAlC;AACAxB,QAAAA,QAAQ,CAACS,IAAT,CAAcf,MAAd,CAAqB+B,KAArB,CAA2B,CAA3B;AACAJ,QAAAA,GAAG,CAAC3B,MAAJ,CAAW6B,IAAX,CAAgBG,MAAhB,CAAuB,GAAvB;AACAlC,QAAAA,MAAM,CAAC6B,GAAG,CAACM,IAAL,CAAN,CAAiBL,EAAjB,CAAoBM,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACA9B,QAAAA,IAAI;AACL,OAdH;AAeD,KAtCC,CAAF;AAuCD,GAxCO,CAAR;AA0CAF,EAAAA,QAAQ,CAAC,oBAAD,EAAuB,YAAM;AACnCC,IAAAA,EAAE,CAAC,yBAAD,EAA4B,UAAAC,IAAI,EAAI;AACpC,UAAM+B,IAAI,GAAG;AACXtB,QAAAA,KAAK,EAAE,iBADI;AAEXD,QAAAA,QAAQ,EAAE;AAFC,OAAb;;AAIAd,uBACGsB,OADH,CACWC,UADX,EAEGC,IAFH,CAEQ,qBAFR,EAGGC,IAHH,CAGQY,IAHR,EAIGX,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB7B,QAAAA,MAAM,CAACsC,IAAD,CAAN,CAAaR,EAAb,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,OAA9B;AACAhC,QAAAA,MAAM,CAACsC,IAAD,CAAN,CAAaR,EAAb,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,UAA9B;AACAH,QAAAA,GAAG,CAAC3B,MAAJ,CAAW6B,IAAX,CAAgBG,MAAhB,CAAuB,GAAvB;AACAlC,QAAAA,MAAM,CAAC6B,GAAG,CAACM,IAAL,CAAN,CAAiBL,EAAjB,CAAoBM,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACA9B,QAAAA,IAAI;AACL,OAVH;AAWD,KAhBC,CAAF;AAiBD,GAlBO,CAAR;AAmBD,CA9DO,CAAR",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests",
      "sourcesContent": [
        "import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport { app } from '../index';\n\nconst expect = chai.expect;\n// const assert = chai.assert;\nconst should = chai.should();\n\nchai.use(chaiHttp);\ndescribe('Users', () => {\n  describe('/POST User Register', () => {\n    it('It should sign up a new user', done => {\n      const new_user = {\n        firstname:\n          'first_' +\n          Math.random()\n            .toString(36)\n            .replace(/[^a-zA-Z0-9]+/g, ''),\n        lastname:\n          'last_' +\n          Math.random()\n            .toString(36)\n            .replace(/[^a-zA-Z0-9]+/g, ''),\n        password: 'anothertestpass2',\n        email:\n          Math.random()\n            .toString(36)\n            .replace(/[^a-zA-Z0-9]+/g, '') + '@mail.com',\n        type: 3,\n        isAdmin: false,\n        updated_at: new Date(),\n        updated_by: 0,\n        created_at: new Date()\n      };\n      chai\n        .request(app)\n        .post('/api/v1/auth/signup')\n        .send(new_user)\n        .end((err, res) => {\n          expect(new_user).to.have.property('firstname');\n          expect(new_user).to.have.property('lastname');\n          expect(new_user).to.have.property('password');\n          expect(new_user).to.have.property('email');\n          expect(new_user).to.have.property('type');\n          new_user.type.should.equal(3);\n          res.should.have.status(201);\n          expect(res.body).to.be.an('object');\n          done();\n        });\n    });\n  });\n\n  describe('/POST Login A User', () => {\n    it('It should log a user in', done => {\n      const user = {\n        email: 'admin@banka.com',\n        password: 'adminpass@421'\n      };\n      chai\n        .request(app)\n        .post('/api/v1/auth/signin')\n        .send(user)\n        .end((err, res) => {\n          expect(user).to.have.property('email');\n          expect(user).to.have.property('password');\n          res.should.have.status(200);\n          expect(res.body).to.be.an('object');\n          done();\n        });\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554892524476
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.app = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _user = _interopRequireDefault(require(\"./routes/user.route\"));\n\nvar _account = _interopRequireDefault(require(\"./routes/account.route\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\nexports.app = app;\napp.use(_bodyParser[\"default\"].json());\napp.use('/api/v1/auth', _user[\"default\"]);\napp.use('/api/v1/', _account[\"default\"]);\napp.get('/', function (req, res) {\n  res.send('Welcome');\n});\nvar PORT = 8080;\nvar server = app.listen(process.env.PORT || PORT, function () {\n  console.log(\"server started on port \".concat(PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwiVXNlclJvdXRlcyIsIkFjY291bnRSb3V0ZXMiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwiUE9SVCIsInNlcnZlciIsImxpc3RlbiIsInByb2Nlc3MiLCJlbnYiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFTyxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7O0FBRVBBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBRUFILEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGNBQVIsRUFBd0JHLGdCQUF4QjtBQUNBSixHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFSLEVBQW9CSSxtQkFBcEI7QUFFQUwsR0FBRyxDQUFDTSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3pCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxTQUFUO0FBQ0QsQ0FGRDtBQUdBLElBQU1DLElBQUksR0FBRyxJQUFiO0FBQ0EsSUFBTUMsTUFBTSxHQUFHWCxHQUFHLENBQUNZLE1BQUosQ0FBV0MsT0FBTyxDQUFDQyxHQUFSLENBQVlKLElBQVosSUFBb0JBLElBQS9CLEVBQXFDLFlBQU07QUFDeERLLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixrQ0FBc0NOLElBQXRDO0FBQ0QsQ0FGYyxDQUFmIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcT2xheWlua2FcXEFEQ1xcYmFua2FcXGFwaVxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgVXNlclJvdXRlcyBmcm9tICcuL3JvdXRlcy91c2VyLnJvdXRlJztcbmltcG9ydCBBY2NvdW50Um91dGVzIGZyb20gJy4vcm91dGVzL2FjY291bnQucm91dGUnO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuXG5leHBvcnQgY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuYXBwLnVzZSgnL2FwaS92MS9hdXRoJywgVXNlclJvdXRlcyk7XG5hcHAudXNlKCcvYXBpL3YxLycsIEFjY291bnRSb3V0ZXMpO1xuXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5zZW5kKCdXZWxjb21lJyk7XG59KTtcbmNvbnN0IFBPUlQgPSA4MDgwO1xuY29uc3Qgc2VydmVyID0gYXBwLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JUIHx8IFBPUlQsICgpID0+IHtcbiAgY29uc29sZS5sb2coYHNlcnZlciBzdGFydGVkIG9uIHBvcnQgJHtQT1JUfWApO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "UserRoutes",
        "AccountRoutes",
        "get",
        "req",
        "res",
        "send",
        "PORT",
        "server",
        "listen",
        "process",
        "env",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEO,IAAMA,GAAG,GAAG,0BAAZ;;AAEPA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AAEAH,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBG,gBAAxB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBI,mBAApB;AAEAL,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,SAAT;AACD,CAFD;AAGA,IAAMC,IAAI,GAAG,IAAb;AACA,IAAMC,MAAM,GAAGX,GAAG,CAACY,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYJ,IAAZ,IAAoBA,IAA/B,EAAqC,YAAM;AACxDK,EAAAA,OAAO,CAACC,GAAR,kCAAsCN,IAAtC;AACD,CAFc,CAAf",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src",
      "sourcesContent": [
        "import express from 'express';\nimport UserRoutes from './routes/user.route';\nimport AccountRoutes from './routes/account.route';\nimport bodyParser from 'body-parser';\n\nexport const app = express();\n\napp.use(bodyParser.json());\n\napp.use('/api/v1/auth', UserRoutes);\napp.use('/api/v1/', AccountRoutes);\n\napp.get('/', (req, res) => {\n  res.send('Welcome');\n});\nconst PORT = 8080;\nconst server = app.listen(process.env.PORT || PORT, () => {\n  console.log(`server started on port ${PORT}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554994973537
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\routes\\\\user.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\user.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\user.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\user.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
        "sourceFileName": "user.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _users = _interopRequireDefault(require(\"../controllers/users.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar userController = new _users[\"default\"]();\n\nvar router = _express[\"default\"].Router();\n\nrouter.post('/signup', userController.signupUser);\nrouter.post('/signin', userController.loginUser);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGUuanMiXSwibmFtZXMiOlsidXNlckNvbnRyb2xsZXIiLCJVc2VyQ29udHJvbGxlciIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0Iiwic2lnbnVwVXNlciIsImxvZ2luVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsY0FBYyxHQUFHLElBQUlDLGlCQUFKLEVBQXZCOztBQUVBLElBQU1DLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZjs7QUFFQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWixFQUF1QkwsY0FBYyxDQUFDTSxVQUF0QztBQUNBSixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaLEVBQXVCTCxjQUFjLENBQUNPLFNBQXRDO2VBRWVMLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxPbGF5aW5rYVxcQURDXFxiYW5rYVxcYXBpXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IFVzZXJDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXJzLmNvbnRyb2xsZXInO1xuXG5jb25zdCB1c2VyQ29udHJvbGxlciA9IG5ldyBVc2VyQ29udHJvbGxlcigpO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG5yb3V0ZXIucG9zdCgnL3NpZ251cCcsIHVzZXJDb250cm9sbGVyLnNpZ251cFVzZXIpO1xucm91dGVyLnBvc3QoJy9zaWduaW4nLCB1c2VyQ29udHJvbGxlci5sb2dpblVzZXIpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.route.js"
      ],
      "names": [
        "userController",
        "UserController",
        "router",
        "express",
        "Router",
        "post",
        "signupUser",
        "loginUser"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,cAAc,GAAG,IAAIC,iBAAJ,EAAvB;;AAEA,IAAMC,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBL,cAAc,CAACM,UAAtC;AACAJ,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBL,cAAc,CAACO,SAAtC;eAEeL,M",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\nimport UserController from '../controllers/users.controller';\n\nconst userController = new UserController();\n\nconst router = express.Router();\n\nrouter.post('/signup', userController.signupUser);\nrouter.post('/signin', userController.loginUser);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554915255873
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\controllers\\\\users.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\users.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\users.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\users.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
        "sourceFileName": "users.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _user = _interopRequireDefault(require(\"../services/user.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar UsersController =\n/*#__PURE__*/\nfunction () {\n  function UsersController() {\n    _classCallCheck(this, UsersController);\n  }\n\n  _createClass(UsersController, [{\n    key: \"signupUser\",\n    value: function signupUser(req, res) {\n      var user_data = req.body;\n      var user = new _user[\"default\"]();\n      var new_user = user.addUser(user_data);\n\n      if (!new_user.error) {\n        return res.status(new_user.code).send({\n          status: 201,\n          data: new_user.data\n        });\n      }\n\n      return res.status(new_user.code).send({\n        status: 401,\n        error: new_user.message\n      });\n    }\n  }, {\n    key: \"loginUser\",\n    value: function loginUser(req, res) {\n      var user_data = req.body;\n      var user = new _user[\"default\"]();\n      var existing_user = user.loginUser(user_data);\n\n      if (!existing_user.error) {\n        return res.status(existing_user.code).send({\n          status: existing_user.code,\n          data: existing_user.data\n        });\n      }\n\n      return res.status(existing_user.code).send({\n        status: existing_user.code,\n        error: existing_user.message\n      });\n    }\n  }]);\n\n  return UsersController;\n}();\n\nexports[\"default\"] = UsersController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiVXNlcnNDb250cm9sbGVyIiwicmVxIiwicmVzIiwidXNlcl9kYXRhIiwiYm9keSIsInVzZXIiLCJVc2VyIiwibmV3X3VzZXIiLCJhZGRVc2VyIiwiZXJyb3IiLCJzdGF0dXMiLCJjb2RlIiwic2VuZCIsImRhdGEiLCJtZXNzYWdlIiwiZXhpc3RpbmdfdXNlciIsImxvZ2luVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0lBRXFCQSxlOzs7Ozs7Ozs7K0JBQ1JDLEcsRUFBS0MsRyxFQUFLO0FBQ25CLFVBQU1DLFNBQVMsR0FBR0YsR0FBRyxDQUFDRyxJQUF0QjtBQUNBLFVBQU1DLElBQUksR0FBRyxJQUFJQyxnQkFBSixFQUFiO0FBQ0EsVUFBTUMsUUFBUSxHQUFHRixJQUFJLENBQUNHLE9BQUwsQ0FBYUwsU0FBYixDQUFqQjs7QUFFQSxVQUFJLENBQUNJLFFBQVEsQ0FBQ0UsS0FBZCxFQUFxQjtBQUNuQixlQUFPUCxHQUFHLENBQUNRLE1BQUosQ0FBV0gsUUFBUSxDQUFDSSxJQUFwQixFQUEwQkMsSUFBMUIsQ0FBK0I7QUFBRUYsVUFBQUEsTUFBTSxFQUFFLEdBQVY7QUFBZUcsVUFBQUEsSUFBSSxFQUFFTixRQUFRLENBQUNNO0FBQTlCLFNBQS9CLENBQVA7QUFDRDs7QUFDRCxhQUFPWCxHQUFHLENBQUNRLE1BQUosQ0FBV0gsUUFBUSxDQUFDSSxJQUFwQixFQUEwQkMsSUFBMUIsQ0FBK0I7QUFBRUYsUUFBQUEsTUFBTSxFQUFFLEdBQVY7QUFBZUQsUUFBQUEsS0FBSyxFQUFFRixRQUFRLENBQUNPO0FBQS9CLE9BQS9CLENBQVA7QUFDRDs7OzhCQUVTYixHLEVBQUtDLEcsRUFBSztBQUNsQixVQUFNQyxTQUFTLEdBQUdGLEdBQUcsQ0FBQ0csSUFBdEI7QUFDQSxVQUFNQyxJQUFJLEdBQUcsSUFBSUMsZ0JBQUosRUFBYjtBQUNBLFVBQU1TLGFBQWEsR0FBR1YsSUFBSSxDQUFDVyxTQUFMLENBQWViLFNBQWYsQ0FBdEI7O0FBRUEsVUFBSSxDQUFDWSxhQUFhLENBQUNOLEtBQW5CLEVBQTBCO0FBQ3hCLGVBQU9QLEdBQUcsQ0FDUFEsTUFESSxDQUNHSyxhQUFhLENBQUNKLElBRGpCLEVBRUpDLElBRkksQ0FFQztBQUFFRixVQUFBQSxNQUFNLEVBQUVLLGFBQWEsQ0FBQ0osSUFBeEI7QUFBOEJFLFVBQUFBLElBQUksRUFBRUUsYUFBYSxDQUFDRjtBQUFsRCxTQUZELENBQVA7QUFHRDs7QUFDRCxhQUFPWCxHQUFHLENBQ1BRLE1BREksQ0FDR0ssYUFBYSxDQUFDSixJQURqQixFQUVKQyxJQUZJLENBRUM7QUFBRUYsUUFBQUEsTUFBTSxFQUFFSyxhQUFhLENBQUNKLElBQXhCO0FBQThCRixRQUFBQSxLQUFLLEVBQUVNLGFBQWEsQ0FBQ0Q7QUFBbkQsT0FGRCxDQUFQO0FBR0QiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxPbGF5aW5rYVxcQURDXFxiYW5rYVxcYXBpXFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVzZXIgZnJvbSAnLi4vc2VydmljZXMvdXNlci5zZXJ2aWNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlcnNDb250cm9sbGVyIHtcbiAgc2lnbnVwVXNlcihyZXEsIHJlcykge1xuICAgIGNvbnN0IHVzZXJfZGF0YSA9IHJlcS5ib2R5O1xuICAgIGNvbnN0IHVzZXIgPSBuZXcgVXNlcigpO1xuICAgIGNvbnN0IG5ld191c2VyID0gdXNlci5hZGRVc2VyKHVzZXJfZGF0YSk7XG5cbiAgICBpZiAoIW5ld191c2VyLmVycm9yKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyhuZXdfdXNlci5jb2RlKS5zZW5kKHsgc3RhdHVzOiAyMDEsIGRhdGE6IG5ld191c2VyLmRhdGEgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXMuc3RhdHVzKG5ld191c2VyLmNvZGUpLnNlbmQoeyBzdGF0dXM6IDQwMSwgZXJyb3I6IG5ld191c2VyLm1lc3NhZ2UgfSk7XG4gIH1cblxuICBsb2dpblVzZXIocmVxLCByZXMpIHtcbiAgICBjb25zdCB1c2VyX2RhdGEgPSByZXEuYm9keTtcbiAgICBjb25zdCB1c2VyID0gbmV3IFVzZXIoKTtcbiAgICBjb25zdCBleGlzdGluZ191c2VyID0gdXNlci5sb2dpblVzZXIodXNlcl9kYXRhKTtcblxuICAgIGlmICghZXhpc3RpbmdfdXNlci5lcnJvcikge1xuICAgICAgcmV0dXJuIHJlc1xuICAgICAgICAuc3RhdHVzKGV4aXN0aW5nX3VzZXIuY29kZSlcbiAgICAgICAgLnNlbmQoeyBzdGF0dXM6IGV4aXN0aW5nX3VzZXIuY29kZSwgZGF0YTogZXhpc3RpbmdfdXNlci5kYXRhIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzXG4gICAgICAuc3RhdHVzKGV4aXN0aW5nX3VzZXIuY29kZSlcbiAgICAgIC5zZW5kKHsgc3RhdHVzOiBleGlzdGluZ191c2VyLmNvZGUsIGVycm9yOiBleGlzdGluZ191c2VyLm1lc3NhZ2UgfSk7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.controller.js"
      ],
      "names": [
        "UsersController",
        "req",
        "res",
        "user_data",
        "body",
        "user",
        "User",
        "new_user",
        "addUser",
        "error",
        "status",
        "code",
        "send",
        "data",
        "message",
        "existing_user",
        "loginUser"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEqBA,e;;;;;;;;;+BACRC,G,EAAKC,G,EAAK;AACnB,UAAMC,SAAS,GAAGF,GAAG,CAACG,IAAtB;AACA,UAAMC,IAAI,GAAG,IAAIC,gBAAJ,EAAb;AACA,UAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,CAAaL,SAAb,CAAjB;;AAEA,UAAI,CAACI,QAAQ,CAACE,KAAd,EAAqB;AACnB,eAAOP,GAAG,CAACQ,MAAJ,CAAWH,QAAQ,CAACI,IAApB,EAA0BC,IAA1B,CAA+B;AAAEF,UAAAA,MAAM,EAAE,GAAV;AAAeG,UAAAA,IAAI,EAAEN,QAAQ,CAACM;AAA9B,SAA/B,CAAP;AACD;;AACD,aAAOX,GAAG,CAACQ,MAAJ,CAAWH,QAAQ,CAACI,IAApB,EAA0BC,IAA1B,CAA+B;AAAEF,QAAAA,MAAM,EAAE,GAAV;AAAeD,QAAAA,KAAK,EAAEF,QAAQ,CAACO;AAA/B,OAA/B,CAAP;AACD;;;8BAESb,G,EAAKC,G,EAAK;AAClB,UAAMC,SAAS,GAAGF,GAAG,CAACG,IAAtB;AACA,UAAMC,IAAI,GAAG,IAAIC,gBAAJ,EAAb;AACA,UAAMS,aAAa,GAAGV,IAAI,CAACW,SAAL,CAAeb,SAAf,CAAtB;;AAEA,UAAI,CAACY,aAAa,CAACN,KAAnB,EAA0B;AACxB,eAAOP,GAAG,CACPQ,MADI,CACGK,aAAa,CAACJ,IADjB,EAEJC,IAFI,CAEC;AAAEF,UAAAA,MAAM,EAAEK,aAAa,CAACJ,IAAxB;AAA8BE,UAAAA,IAAI,EAAEE,aAAa,CAACF;AAAlD,SAFD,CAAP;AAGD;;AACD,aAAOX,GAAG,CACPQ,MADI,CACGK,aAAa,CAACJ,IADjB,EAEJC,IAFI,CAEC;AAAEF,QAAAA,MAAM,EAAEK,aAAa,CAACJ,IAAxB;AAA8BF,QAAAA,KAAK,EAAEM,aAAa,CAACD;AAAnD,OAFD,CAAP;AAGD",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
      "sourcesContent": [
        "import User from '../services/user.service';\n\nexport default class UsersController {\n  signupUser(req, res) {\n    const user_data = req.body;\n    const user = new User();\n    const new_user = user.addUser(user_data);\n\n    if (!new_user.error) {\n      return res.status(new_user.code).send({ status: 201, data: new_user.data });\n    }\n    return res.status(new_user.code).send({ status: 401, error: new_user.message });\n  }\n\n  loginUser(req, res) {\n    const user_data = req.body;\n    const user = new User();\n    const existing_user = user.loginUser(user_data);\n\n    if (!existing_user.error) {\n      return res\n        .status(existing_user.code)\n        .send({ status: existing_user.code, data: existing_user.data });\n    }\n    return res\n      .status(existing_user.code)\n      .send({ status: existing_user.code, error: existing_user.message });\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554915255834
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\services\\\\user.service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\user.service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\user.service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\user.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
        "sourceFileName": "user.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _users = require(\"../.data/users\");\n\nvar _helpers = require(\"../Helpers/helpers\");\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @exports\n * @class UserService\n */\nvar UserService =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of UserService.\n   * @memberof User\n   */\n  function UserService() {\n    _classCallCheck(this, UserService);\n\n    this.users = _users.users;\n  }\n  /**\n   * Get all user resources.\n   * @param null\n   * @returns {object}\n   */\n\n\n  _createClass(UserService, [{\n    key: \"getAllUsers\",\n    value: function getAllUsers() {\n      return this.users;\n    }\n    /**\n     * Creates a new user.\n     * @param {object} user\n     * @returns {object}\n     */\n\n  }, {\n    key: \"addUser\",\n    value: function addUser(user) {\n      // const new_user = new User({ ...user });\n      var allUsers = this.getAllUsers();\n      var newId = (0, _helpers.getLastId)(allUsers) + 1;\n      var email_exists = (0, _helpers.recordExists)(allUsers, user, 'email');\n      var token = (0, _helpers.generateToken)();\n\n      if (email_exists) {\n        return {\n          message: 'Email already exist',\n          error: true,\n          code: 401\n        };\n      } else {\n        return {\n          message: 'Signup successful',\n          error: false,\n          code: 201,\n          data: _objectSpread({\n            token: token,\n            id: newId\n          }, user)\n        };\n      }\n    }\n    /**\n     * Logs in a user.\n     * @param {object} user\n     * @returns {object}\n     */\n\n  }, {\n    key: \"loginUser\",\n    value: function loginUser(user) {\n      var allUsers = this.getAllUsers();\n      var email_exists = (0, _helpers.recordExists)(allUsers, user, 'email'); // const token = generateToken();\n\n      if (!email_exists) {\n        return {\n          message: 'Users With This Email Does Not exist',\n          error: true,\n          code: 404\n        };\n      } else {\n        var validUser = allUsers.filter(function (db_user) {\n          return user.password === db_user.password && user.email === db_user.email;\n        });\n\n        if (validUser.length) {\n          return {\n            message: 'Login successful',\n            error: false,\n            code: 200,\n            data: _objectSpread({}, validUser[0])\n          };\n        } else {\n          return {\n            message: 'Login Failed. Please enter a valid password',\n            error: true,\n            code: 401\n          };\n        }\n      }\n    }\n    /**\n     * Gets user information.\n     * @param {number} userId\n     * @returns {object}\n     */\n\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo(userId) {\n      var userInfo = this.getAllUsers().filter(function (user) {\n        return user.id === userId;\n      });\n\n      if (!userInfo.length) {\n        return {\n          message: 'User information not found',\n          error: true,\n          code: 404\n        };\n      } else {\n        return {\n          message: 'User Information Found',\n          error: false,\n          code: 200,\n          data: _objectSpread({}, userInfo[0])\n        };\n      }\n    }\n  }]);\n\n  return UserService;\n}();\n\nexports[\"default\"] = UserService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJVc2VyU2VydmljZSIsInVzZXJzIiwidXNlciIsImFsbFVzZXJzIiwiZ2V0QWxsVXNlcnMiLCJuZXdJZCIsImVtYWlsX2V4aXN0cyIsInRva2VuIiwibWVzc2FnZSIsImVycm9yIiwiY29kZSIsImRhdGEiLCJpZCIsInZhbGlkVXNlciIsImZpbHRlciIsImRiX3VzZXIiLCJwYXNzd29yZCIsImVtYWlsIiwibGVuZ3RoIiwidXNlcklkIiwidXNlckluZm8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7O0FBRUE7Ozs7SUFLcUJBLFc7OztBQUNuQjs7OztBQUlBLHlCQUFjO0FBQUE7O0FBQ1osU0FBS0MsS0FBTCxHQUFhQSxZQUFiO0FBQ0Q7QUFFRDs7Ozs7Ozs7O2tDQUtjO0FBQ1osYUFBTyxLQUFLQSxLQUFaO0FBQ0Q7QUFFRDs7Ozs7Ozs7NEJBS1FDLEksRUFBTTtBQUNaO0FBQ0EsVUFBTUMsUUFBUSxHQUFHLEtBQUtDLFdBQUwsRUFBakI7QUFDQSxVQUFNQyxLQUFLLEdBQUcsd0JBQVVGLFFBQVYsSUFBc0IsQ0FBcEM7QUFDQSxVQUFNRyxZQUFZLEdBQUcsMkJBQWFILFFBQWIsRUFBdUJELElBQXZCLEVBQTZCLE9BQTdCLENBQXJCO0FBQ0EsVUFBTUssS0FBSyxHQUFHLDZCQUFkOztBQUNBLFVBQUlELFlBQUosRUFBa0I7QUFDaEIsZUFBTztBQUFFRSxVQUFBQSxPQUFPLEVBQUUscUJBQVg7QUFBa0NDLFVBQUFBLEtBQUssRUFBRSxJQUF6QztBQUErQ0MsVUFBQUEsSUFBSSxFQUFFO0FBQXJELFNBQVA7QUFDRCxPQUZELE1BRU87QUFDTCxlQUFPO0FBQ0xGLFVBQUFBLE9BQU8sRUFBRSxtQkFESjtBQUVMQyxVQUFBQSxLQUFLLEVBQUUsS0FGRjtBQUdMQyxVQUFBQSxJQUFJLEVBQUUsR0FIRDtBQUlMQyxVQUFBQSxJQUFJO0FBQUlKLFlBQUFBLEtBQUssRUFBTEEsS0FBSjtBQUFXSyxZQUFBQSxFQUFFLEVBQUVQO0FBQWYsYUFBeUJILElBQXpCO0FBSkMsU0FBUDtBQU1EO0FBQ0Y7QUFFRDs7Ozs7Ozs7OEJBS1VBLEksRUFBTTtBQUNkLFVBQU1DLFFBQVEsR0FBRyxLQUFLQyxXQUFMLEVBQWpCO0FBQ0EsVUFBTUUsWUFBWSxHQUFHLDJCQUFhSCxRQUFiLEVBQXVCRCxJQUF2QixFQUE2QixPQUE3QixDQUFyQixDQUZjLENBR2Q7O0FBQ0EsVUFBSSxDQUFDSSxZQUFMLEVBQW1CO0FBQ2pCLGVBQU87QUFBRUUsVUFBQUEsT0FBTyxFQUFFLHNDQUFYO0FBQW1EQyxVQUFBQSxLQUFLLEVBQUUsSUFBMUQ7QUFBZ0VDLFVBQUFBLElBQUksRUFBRTtBQUF0RSxTQUFQO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsWUFBTUcsU0FBUyxHQUFHVixRQUFRLENBQUNXLE1BQVQsQ0FBZ0IsVUFBQUMsT0FBTyxFQUFJO0FBQzNDLGlCQUFPYixJQUFJLENBQUNjLFFBQUwsS0FBa0JELE9BQU8sQ0FBQ0MsUUFBMUIsSUFBc0NkLElBQUksQ0FBQ2UsS0FBTCxLQUFlRixPQUFPLENBQUNFLEtBQXBFO0FBQ0QsU0FGaUIsQ0FBbEI7O0FBR0EsWUFBSUosU0FBUyxDQUFDSyxNQUFkLEVBQXNCO0FBQ3BCLGlCQUFPO0FBQ0xWLFlBQUFBLE9BQU8sRUFBRSxrQkFESjtBQUVMQyxZQUFBQSxLQUFLLEVBQUUsS0FGRjtBQUdMQyxZQUFBQSxJQUFJLEVBQUUsR0FIRDtBQUlMQyxZQUFBQSxJQUFJLG9CQUFPRSxTQUFTLENBQUMsQ0FBRCxDQUFoQjtBQUpDLFdBQVA7QUFNRCxTQVBELE1BT087QUFDTCxpQkFBTztBQUNMTCxZQUFBQSxPQUFPLEVBQUUsNkNBREo7QUFFTEMsWUFBQUEsS0FBSyxFQUFFLElBRkY7QUFHTEMsWUFBQUEsSUFBSSxFQUFFO0FBSEQsV0FBUDtBQUtEO0FBQ0Y7QUFDRjtBQUVEOzs7Ozs7OztnQ0FLWVMsTSxFQUFRO0FBQ2xCLFVBQU1DLFFBQVEsR0FBRyxLQUFLaEIsV0FBTCxHQUFtQlUsTUFBbkIsQ0FBMEIsVUFBQVosSUFBSTtBQUFBLGVBQUlBLElBQUksQ0FBQ1UsRUFBTCxLQUFZTyxNQUFoQjtBQUFBLE9BQTlCLENBQWpCOztBQUVBLFVBQUksQ0FBQ0MsUUFBUSxDQUFDRixNQUFkLEVBQXNCO0FBQ3BCLGVBQU87QUFBRVYsVUFBQUEsT0FBTyxFQUFFLDRCQUFYO0FBQXlDQyxVQUFBQSxLQUFLLEVBQUUsSUFBaEQ7QUFBc0RDLFVBQUFBLElBQUksRUFBRTtBQUE1RCxTQUFQO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsZUFBTztBQUNMRixVQUFBQSxPQUFPLEVBQUUsd0JBREo7QUFFTEMsVUFBQUEsS0FBSyxFQUFFLEtBRkY7QUFHTEMsVUFBQUEsSUFBSSxFQUFFLEdBSEQ7QUFJTEMsVUFBQUEsSUFBSSxvQkFBT1MsUUFBUSxDQUFDLENBQUQsQ0FBZjtBQUpDLFNBQVA7QUFNRDtBQUNGIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcT2xheWlua2FcXEFEQ1xcYmFua2FcXGFwaVxcc3JjXFxzZXJ2aWNlcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBVc2VyIGZyb20gJy4uL21vZGVscy91c2VyLm1vZGVsJztcbmltcG9ydCB7IHVzZXJzIH0gZnJvbSAnLi4vLmRhdGEvdXNlcnMnO1xuaW1wb3J0IHsgcmVjb3JkRXhpc3RzLCBnZXRMYXN0SWQsIGdlbmVyYXRlVG9rZW4gfSBmcm9tICcuLi9IZWxwZXJzL2hlbHBlcnMnO1xuXG4vKipcbiAqIEBleHBvcnRzXG4gKiBAY2xhc3MgVXNlclNlcnZpY2VcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VyU2VydmljZSB7XG4gIC8qKlxuICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIFVzZXJTZXJ2aWNlLlxuICAgKiBAbWVtYmVyb2YgVXNlclxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy51c2VycyA9IHVzZXJzO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhbGwgdXNlciByZXNvdXJjZXMuXG4gICAqIEBwYXJhbSBudWxsXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XG4gICAqL1xuICBnZXRBbGxVc2VycygpIHtcbiAgICByZXR1cm4gdGhpcy51c2VycztcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IHVzZXIuXG4gICAqIEBwYXJhbSB7b2JqZWN0fSB1c2VyXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XG4gICAqL1xuICBhZGRVc2VyKHVzZXIpIHtcbiAgICAvLyBjb25zdCBuZXdfdXNlciA9IG5ldyBVc2VyKHsgLi4udXNlciB9KTtcbiAgICBjb25zdCBhbGxVc2VycyA9IHRoaXMuZ2V0QWxsVXNlcnMoKTtcbiAgICBjb25zdCBuZXdJZCA9IGdldExhc3RJZChhbGxVc2VycykgKyAxO1xuICAgIGNvbnN0IGVtYWlsX2V4aXN0cyA9IHJlY29yZEV4aXN0cyhhbGxVc2VycywgdXNlciwgJ2VtYWlsJyk7XG4gICAgY29uc3QgdG9rZW4gPSBnZW5lcmF0ZVRva2VuKCk7XG4gICAgaWYgKGVtYWlsX2V4aXN0cykge1xuICAgICAgcmV0dXJuIHsgbWVzc2FnZTogJ0VtYWlsIGFscmVhZHkgZXhpc3QnLCBlcnJvcjogdHJ1ZSwgY29kZTogNDAxIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG1lc3NhZ2U6ICdTaWdudXAgc3VjY2Vzc2Z1bCcsXG4gICAgICAgIGVycm9yOiBmYWxzZSxcbiAgICAgICAgY29kZTogMjAxLFxuICAgICAgICBkYXRhOiB7IHRva2VuLCBpZDogbmV3SWQsIC4uLnVzZXIgfVxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogTG9ncyBpbiBhIHVzZXIuXG4gICAqIEBwYXJhbSB7b2JqZWN0fSB1c2VyXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XG4gICAqL1xuICBsb2dpblVzZXIodXNlcikge1xuICAgIGNvbnN0IGFsbFVzZXJzID0gdGhpcy5nZXRBbGxVc2VycygpO1xuICAgIGNvbnN0IGVtYWlsX2V4aXN0cyA9IHJlY29yZEV4aXN0cyhhbGxVc2VycywgdXNlciwgJ2VtYWlsJyk7XG4gICAgLy8gY29uc3QgdG9rZW4gPSBnZW5lcmF0ZVRva2VuKCk7XG4gICAgaWYgKCFlbWFpbF9leGlzdHMpIHtcbiAgICAgIHJldHVybiB7IG1lc3NhZ2U6ICdVc2VycyBXaXRoIFRoaXMgRW1haWwgRG9lcyBOb3QgZXhpc3QnLCBlcnJvcjogdHJ1ZSwgY29kZTogNDA0IH07XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHZhbGlkVXNlciA9IGFsbFVzZXJzLmZpbHRlcihkYl91c2VyID0+IHtcbiAgICAgICAgcmV0dXJuIHVzZXIucGFzc3dvcmQgPT09IGRiX3VzZXIucGFzc3dvcmQgJiYgdXNlci5lbWFpbCA9PT0gZGJfdXNlci5lbWFpbDtcbiAgICAgIH0pO1xuICAgICAgaWYgKHZhbGlkVXNlci5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBtZXNzYWdlOiAnTG9naW4gc3VjY2Vzc2Z1bCcsXG4gICAgICAgICAgZXJyb3I6IGZhbHNlLFxuICAgICAgICAgIGNvZGU6IDIwMCxcbiAgICAgICAgICBkYXRhOiB7IC4uLnZhbGlkVXNlclswXSB9XG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIG1lc3NhZ2U6ICdMb2dpbiBGYWlsZWQuIFBsZWFzZSBlbnRlciBhIHZhbGlkIHBhc3N3b3JkJyxcbiAgICAgICAgICBlcnJvcjogdHJ1ZSxcbiAgICAgICAgICBjb2RlOiA0MDFcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogR2V0cyB1c2VyIGluZm9ybWF0aW9uLlxuICAgKiBAcGFyYW0ge251bWJlcn0gdXNlcklkXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XG4gICAqL1xuICBnZXRVc2VySW5mbyh1c2VySWQpIHtcbiAgICBjb25zdCB1c2VySW5mbyA9IHRoaXMuZ2V0QWxsVXNlcnMoKS5maWx0ZXIodXNlciA9PiB1c2VyLmlkID09PSB1c2VySWQpO1xuXG4gICAgaWYgKCF1c2VySW5mby5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB7IG1lc3NhZ2U6ICdVc2VyIGluZm9ybWF0aW9uIG5vdCBmb3VuZCcsIGVycm9yOiB0cnVlLCBjb2RlOiA0MDQgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbWVzc2FnZTogJ1VzZXIgSW5mb3JtYXRpb24gRm91bmQnLFxuICAgICAgICBlcnJvcjogZmFsc2UsXG4gICAgICAgIGNvZGU6IDIwMCxcbiAgICAgICAgZGF0YTogeyAuLi51c2VySW5mb1swXSB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.service.js"
      ],
      "names": [
        "UserService",
        "users",
        "user",
        "allUsers",
        "getAllUsers",
        "newId",
        "email_exists",
        "token",
        "message",
        "error",
        "code",
        "data",
        "id",
        "validUser",
        "filter",
        "db_user",
        "password",
        "email",
        "length",
        "userId",
        "userInfo"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;;;;;;;;;;;AAEA;;;;IAKqBA,W;;;AACnB;;;;AAIA,yBAAc;AAAA;;AACZ,SAAKC,KAAL,GAAaA,YAAb;AACD;AAED;;;;;;;;;kCAKc;AACZ,aAAO,KAAKA,KAAZ;AACD;AAED;;;;;;;;4BAKQC,I,EAAM;AACZ;AACA,UAAMC,QAAQ,GAAG,KAAKC,WAAL,EAAjB;AACA,UAAMC,KAAK,GAAG,wBAAUF,QAAV,IAAsB,CAApC;AACA,UAAMG,YAAY,GAAG,2BAAaH,QAAb,EAAuBD,IAAvB,EAA6B,OAA7B,CAArB;AACA,UAAMK,KAAK,GAAG,6BAAd;;AACA,UAAID,YAAJ,EAAkB;AAChB,eAAO;AAAEE,UAAAA,OAAO,EAAE,qBAAX;AAAkCC,UAAAA,KAAK,EAAE,IAAzC;AAA+CC,UAAAA,IAAI,EAAE;AAArD,SAAP;AACD,OAFD,MAEO;AACL,eAAO;AACLF,UAAAA,OAAO,EAAE,mBADJ;AAELC,UAAAA,KAAK,EAAE,KAFF;AAGLC,UAAAA,IAAI,EAAE,GAHD;AAILC,UAAAA,IAAI;AAAIJ,YAAAA,KAAK,EAALA,KAAJ;AAAWK,YAAAA,EAAE,EAAEP;AAAf,aAAyBH,IAAzB;AAJC,SAAP;AAMD;AACF;AAED;;;;;;;;8BAKUA,I,EAAM;AACd,UAAMC,QAAQ,GAAG,KAAKC,WAAL,EAAjB;AACA,UAAME,YAAY,GAAG,2BAAaH,QAAb,EAAuBD,IAAvB,EAA6B,OAA7B,CAArB,CAFc,CAGd;;AACA,UAAI,CAACI,YAAL,EAAmB;AACjB,eAAO;AAAEE,UAAAA,OAAO,EAAE,sCAAX;AAAmDC,UAAAA,KAAK,EAAE,IAA1D;AAAgEC,UAAAA,IAAI,EAAE;AAAtE,SAAP;AACD,OAFD,MAEO;AACL,YAAMG,SAAS,GAAGV,QAAQ,CAACW,MAAT,CAAgB,UAAAC,OAAO,EAAI;AAC3C,iBAAOb,IAAI,CAACc,QAAL,KAAkBD,OAAO,CAACC,QAA1B,IAAsCd,IAAI,CAACe,KAAL,KAAeF,OAAO,CAACE,KAApE;AACD,SAFiB,CAAlB;;AAGA,YAAIJ,SAAS,CAACK,MAAd,EAAsB;AACpB,iBAAO;AACLV,YAAAA,OAAO,EAAE,kBADJ;AAELC,YAAAA,KAAK,EAAE,KAFF;AAGLC,YAAAA,IAAI,EAAE,GAHD;AAILC,YAAAA,IAAI,oBAAOE,SAAS,CAAC,CAAD,CAAhB;AAJC,WAAP;AAMD,SAPD,MAOO;AACL,iBAAO;AACLL,YAAAA,OAAO,EAAE,6CADJ;AAELC,YAAAA,KAAK,EAAE,IAFF;AAGLC,YAAAA,IAAI,EAAE;AAHD,WAAP;AAKD;AACF;AACF;AAED;;;;;;;;gCAKYS,M,EAAQ;AAClB,UAAMC,QAAQ,GAAG,KAAKhB,WAAL,GAAmBU,MAAnB,CAA0B,UAAAZ,IAAI;AAAA,eAAIA,IAAI,CAACU,EAAL,KAAYO,MAAhB;AAAA,OAA9B,CAAjB;;AAEA,UAAI,CAACC,QAAQ,CAACF,MAAd,EAAsB;AACpB,eAAO;AAAEV,UAAAA,OAAO,EAAE,4BAAX;AAAyCC,UAAAA,KAAK,EAAE,IAAhD;AAAsDC,UAAAA,IAAI,EAAE;AAA5D,SAAP;AACD,OAFD,MAEO;AACL,eAAO;AACLF,UAAAA,OAAO,EAAE,wBADJ;AAELC,UAAAA,KAAK,EAAE,KAFF;AAGLC,UAAAA,IAAI,EAAE,GAHD;AAILC,UAAAA,IAAI,oBAAOS,QAAQ,CAAC,CAAD,CAAf;AAJC,SAAP;AAMD;AACF",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
      "sourcesContent": [
        "// import User from '../models/user.model';\nimport { users } from '../.data/users';\nimport { recordExists, getLastId, generateToken } from '../Helpers/helpers';\n\n/**\n * @exports\n * @class UserService\n */\n\nexport default class UserService {\n  /**\n   * Creates an instance of UserService.\n   * @memberof User\n   */\n  constructor() {\n    this.users = users;\n  }\n\n  /**\n   * Get all user resources.\n   * @param null\n   * @returns {object}\n   */\n  getAllUsers() {\n    return this.users;\n  }\n\n  /**\n   * Creates a new user.\n   * @param {object} user\n   * @returns {object}\n   */\n  addUser(user) {\n    // const new_user = new User({ ...user });\n    const allUsers = this.getAllUsers();\n    const newId = getLastId(allUsers) + 1;\n    const email_exists = recordExists(allUsers, user, 'email');\n    const token = generateToken();\n    if (email_exists) {\n      return { message: 'Email already exist', error: true, code: 401 };\n    } else {\n      return {\n        message: 'Signup successful',\n        error: false,\n        code: 201,\n        data: { token, id: newId, ...user }\n      };\n    }\n  }\n\n  /**\n   * Logs in a user.\n   * @param {object} user\n   * @returns {object}\n   */\n  loginUser(user) {\n    const allUsers = this.getAllUsers();\n    const email_exists = recordExists(allUsers, user, 'email');\n    // const token = generateToken();\n    if (!email_exists) {\n      return { message: 'Users With This Email Does Not exist', error: true, code: 404 };\n    } else {\n      const validUser = allUsers.filter(db_user => {\n        return user.password === db_user.password && user.email === db_user.email;\n      });\n      if (validUser.length) {\n        return {\n          message: 'Login successful',\n          error: false,\n          code: 200,\n          data: { ...validUser[0] }\n        };\n      } else {\n        return {\n          message: 'Login Failed. Please enter a valid password',\n          error: true,\n          code: 401\n        };\n      }\n    }\n  }\n\n  /**\n   * Gets user information.\n   * @param {number} userId\n   * @returns {object}\n   */\n  getUserInfo(userId) {\n    const userInfo = this.getAllUsers().filter(user => user.id === userId);\n\n    if (!userInfo.length) {\n      return { message: 'User information not found', error: true, code: 404 };\n    } else {\n      return {\n        message: 'User Information Found',\n        error: false,\n        code: 200,\n        data: { ...userInfo[0] }\n      };\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554994973744
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\.data\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\.data\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.users = void 0;\nvar users = [{\n  id: 1,\n  email: 'admin@banka.com',\n  firstName: 'Admin',\n  lastName: 'Admin',\n  password: 'adminpass@421',\n  type: 'staff',\n  isAdmin: true,\n  created_at: '2019-04-07 07:00:43',\n  updated_at: '',\n  token: '45erkjherht45495783'\n}, {\n  id: 2,\n  email: 'cashier1@banka.com',\n  firstName: 'Alan',\n  lastName: 'Dave',\n  password: 'cashierpass@421',\n  type: 'staff',\n  isAdmin: false,\n  created_at: '2019-04-07 07:00:43',\n  updated_at: '',\n  token: '45erkjherht45495783'\n}, {\n  id: 3,\n  email: 'user1@mail.com',\n  firstName: 'Smith',\n  lastName: 'Rex',\n  password: 'userpass@421',\n  type: 'client',\n  isAdmin: false,\n  created_at: '2019-04-07 07:00:43',\n  updated_at: '',\n  token: '45erkjherht45495783'\n}];\nexports.users = users;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInVzZXJzIiwiaWQiLCJlbWFpbCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicGFzc3dvcmQiLCJ0eXBlIiwiaXNBZG1pbiIsImNyZWF0ZWRfYXQiLCJ1cGRhdGVkX2F0IiwidG9rZW4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLElBQU1BLEtBQUssR0FBRyxDQUNuQjtBQUNFQyxFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxFQUFBQSxLQUFLLEVBQUUsaUJBRlQ7QUFHRUMsRUFBQUEsU0FBUyxFQUFFLE9BSGI7QUFJRUMsRUFBQUEsUUFBUSxFQUFFLE9BSlo7QUFLRUMsRUFBQUEsUUFBUSxFQUFFLGVBTFo7QUFNRUMsRUFBQUEsSUFBSSxFQUFFLE9BTlI7QUFPRUMsRUFBQUEsT0FBTyxFQUFFLElBUFg7QUFRRUMsRUFBQUEsVUFBVSxFQUFFLHFCQVJkO0FBU0VDLEVBQUFBLFVBQVUsRUFBRSxFQVRkO0FBVUVDLEVBQUFBLEtBQUssRUFBRTtBQVZULENBRG1CLEVBYW5CO0FBQ0VULEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLEVBQUFBLEtBQUssRUFBRSxvQkFGVDtBQUdFQyxFQUFBQSxTQUFTLEVBQUUsTUFIYjtBQUlFQyxFQUFBQSxRQUFRLEVBQUUsTUFKWjtBQUtFQyxFQUFBQSxRQUFRLEVBQUUsaUJBTFo7QUFNRUMsRUFBQUEsSUFBSSxFQUFFLE9BTlI7QUFPRUMsRUFBQUEsT0FBTyxFQUFFLEtBUFg7QUFRRUMsRUFBQUEsVUFBVSxFQUFFLHFCQVJkO0FBU0VDLEVBQUFBLFVBQVUsRUFBRSxFQVRkO0FBVUVDLEVBQUFBLEtBQUssRUFBRTtBQVZULENBYm1CLEVBeUJuQjtBQUNFVCxFQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxFQUFBQSxLQUFLLEVBQUUsZ0JBRlQ7QUFHRUMsRUFBQUEsU0FBUyxFQUFFLE9BSGI7QUFJRUMsRUFBQUEsUUFBUSxFQUFFLEtBSlo7QUFLRUMsRUFBQUEsUUFBUSxFQUFFLGNBTFo7QUFNRUMsRUFBQUEsSUFBSSxFQUFFLFFBTlI7QUFPRUMsRUFBQUEsT0FBTyxFQUFFLEtBUFg7QUFRRUMsRUFBQUEsVUFBVSxFQUFFLHFCQVJkO0FBU0VDLEVBQUFBLFVBQVUsRUFBRSxFQVRkO0FBVUVDLEVBQUFBLEtBQUssRUFBRTtBQVZULENBekJtQixDQUFkIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcT2xheWlua2FcXEFEQ1xcYmFua2FcXGFwaVxcc3JjXFwuZGF0YSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB1c2VycyA9IFtcbiAge1xuICAgIGlkOiAxLFxuICAgIGVtYWlsOiAnYWRtaW5AYmFua2EuY29tJyxcbiAgICBmaXJzdE5hbWU6ICdBZG1pbicsXG4gICAgbGFzdE5hbWU6ICdBZG1pbicsXG4gICAgcGFzc3dvcmQ6ICdhZG1pbnBhc3NANDIxJyxcbiAgICB0eXBlOiAnc3RhZmYnLFxuICAgIGlzQWRtaW46IHRydWUsXG4gICAgY3JlYXRlZF9hdDogJzIwMTktMDQtMDcgMDc6MDA6NDMnLFxuICAgIHVwZGF0ZWRfYXQ6ICcnLFxuICAgIHRva2VuOiAnNDVlcmtqaGVyaHQ0NTQ5NTc4MydcbiAgfSxcbiAge1xuICAgIGlkOiAyLFxuICAgIGVtYWlsOiAnY2FzaGllcjFAYmFua2EuY29tJyxcbiAgICBmaXJzdE5hbWU6ICdBbGFuJyxcbiAgICBsYXN0TmFtZTogJ0RhdmUnLFxuICAgIHBhc3N3b3JkOiAnY2FzaGllcnBhc3NANDIxJyxcbiAgICB0eXBlOiAnc3RhZmYnLFxuICAgIGlzQWRtaW46IGZhbHNlLFxuICAgIGNyZWF0ZWRfYXQ6ICcyMDE5LTA0LTA3IDA3OjAwOjQzJyxcbiAgICB1cGRhdGVkX2F0OiAnJyxcbiAgICB0b2tlbjogJzQ1ZXJramhlcmh0NDU0OTU3ODMnXG4gIH0sXG4gIHtcbiAgICBpZDogMyxcbiAgICBlbWFpbDogJ3VzZXIxQG1haWwuY29tJyxcbiAgICBmaXJzdE5hbWU6ICdTbWl0aCcsXG4gICAgbGFzdE5hbWU6ICdSZXgnLFxuICAgIHBhc3N3b3JkOiAndXNlcnBhc3NANDIxJyxcbiAgICB0eXBlOiAnY2xpZW50JyxcbiAgICBpc0FkbWluOiBmYWxzZSxcbiAgICBjcmVhdGVkX2F0OiAnMjAxOS0wNC0wNyAwNzowMDo0MycsXG4gICAgdXBkYXRlZF9hdDogJycsXG4gICAgdG9rZW46ICc0NWVya2poZXJodDQ1NDk1NzgzJ1xuICB9XG5dO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "users",
        "id",
        "email",
        "firstName",
        "lastName",
        "password",
        "type",
        "isAdmin",
        "created_at",
        "updated_at",
        "token"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,KAAK,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,SAAS,EAAE,OAHb;AAIEC,EAAAA,QAAQ,EAAE,OAJZ;AAKEC,EAAAA,QAAQ,EAAE,eALZ;AAMEC,EAAAA,IAAI,EAAE,OANR;AAOEC,EAAAA,OAAO,EAAE,IAPX;AAQEC,EAAAA,UAAU,EAAE,qBARd;AASEC,EAAAA,UAAU,EAAE,EATd;AAUEC,EAAAA,KAAK,EAAE;AAVT,CADmB,EAanB;AACET,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,oBAFT;AAGEC,EAAAA,SAAS,EAAE,MAHb;AAIEC,EAAAA,QAAQ,EAAE,MAJZ;AAKEC,EAAAA,QAAQ,EAAE,iBALZ;AAMEC,EAAAA,IAAI,EAAE,OANR;AAOEC,EAAAA,OAAO,EAAE,KAPX;AAQEC,EAAAA,UAAU,EAAE,qBARd;AASEC,EAAAA,UAAU,EAAE,EATd;AAUEC,EAAAA,KAAK,EAAE;AAVT,CAbmB,EAyBnB;AACET,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,SAAS,EAAE,OAHb;AAIEC,EAAAA,QAAQ,EAAE,KAJZ;AAKEC,EAAAA,QAAQ,EAAE,cALZ;AAMEC,EAAAA,IAAI,EAAE,QANR;AAOEC,EAAAA,OAAO,EAAE,KAPX;AAQEC,EAAAA,UAAU,EAAE,qBARd;AASEC,EAAAA,UAAU,EAAE,EATd;AAUEC,EAAAA,KAAK,EAAE;AAVT,CAzBmB,CAAd",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
      "sourcesContent": [
        "export const users = [\n  {\n    id: 1,\n    email: 'admin@banka.com',\n    firstName: 'Admin',\n    lastName: 'Admin',\n    password: 'adminpass@421',\n    type: 'staff',\n    isAdmin: true,\n    created_at: '2019-04-07 07:00:43',\n    updated_at: '',\n    token: '45erkjherht45495783'\n  },\n  {\n    id: 2,\n    email: 'cashier1@banka.com',\n    firstName: 'Alan',\n    lastName: 'Dave',\n    password: 'cashierpass@421',\n    type: 'staff',\n    isAdmin: false,\n    created_at: '2019-04-07 07:00:43',\n    updated_at: '',\n    token: '45erkjherht45495783'\n  },\n  {\n    id: 3,\n    email: 'user1@mail.com',\n    firstName: 'Smith',\n    lastName: 'Rex',\n    password: 'userpass@421',\n    type: 'client',\n    isAdmin: false,\n    created_at: '2019-04-07 07:00:43',\n    updated_at: '',\n    token: '45erkjherht45495783'\n  }\n];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554885212121
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\Helpers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\Helpers\\\\helpers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers\\helpers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers\\helpers.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers\\helpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers",
        "sourceFileName": "helpers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateToken = exports.getLastId = exports.recordExists = void 0;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * Checks if a record already exists\n * @param {object} model\n * @param {object} data\n * @param {string} key\n * @returns {boolean}\n */\nvar recordExists = function recordExists(model, data, key) {\n  var check = model.filter(function (resource) {\n    return resource[key] === data[key];\n  });\n  return check.length ? true : false;\n};\n/**\n * Gets the last ID from a list of resources\n * @param {object} model\n * @returns {number}\n */\n\n\nexports.recordExists = recordExists;\n\nvar getLastId = function getLastId(model) {\n  var ids = model.map(function (item) {\n    return item.id;\n  });\n  return Math.max.apply(Math, _toConsumableArray(ids));\n};\n/**\n * Generates random token\n * @param null\n * @returns {string} token\n */\n\n\nexports.getLastId = getLastId;\n\nvar generateToken = function generateToken() {\n  var token = '45erkjherht45495783';\n  return token;\n};\n\nexports.generateToken = generateToken;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsicmVjb3JkRXhpc3RzIiwibW9kZWwiLCJkYXRhIiwia2V5IiwiY2hlY2siLCJmaWx0ZXIiLCJyZXNvdXJjZSIsImxlbmd0aCIsImdldExhc3RJZCIsImlkcyIsIm1hcCIsIml0ZW0iLCJpZCIsIk1hdGgiLCJtYXgiLCJnZW5lcmF0ZVRva2VuIiwidG9rZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7O0FBT08sSUFBTUEsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsS0FBRCxFQUFRQyxJQUFSLEVBQWNDLEdBQWQsRUFBc0I7QUFDaEQsTUFBTUMsS0FBSyxHQUFHSCxLQUFLLENBQUNJLE1BQU4sQ0FBYSxVQUFBQyxRQUFRLEVBQUk7QUFDckMsV0FBT0EsUUFBUSxDQUFDSCxHQUFELENBQVIsS0FBa0JELElBQUksQ0FBQ0MsR0FBRCxDQUE3QjtBQUNELEdBRmEsQ0FBZDtBQUdBLFNBQU9DLEtBQUssQ0FBQ0csTUFBTixHQUFlLElBQWYsR0FBc0IsS0FBN0I7QUFDRCxDQUxNO0FBT1A7Ozs7Ozs7OztBQUtPLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUFQLEtBQUssRUFBSTtBQUNoQyxNQUFNUSxHQUFHLEdBQUdSLEtBQUssQ0FBQ1MsR0FBTixDQUFVLFVBQUFDLElBQUksRUFBSTtBQUM1QixXQUFPQSxJQUFJLENBQUNDLEVBQVo7QUFDRCxHQUZXLENBQVo7QUFHQSxTQUFPQyxJQUFJLENBQUNDLEdBQUwsT0FBQUQsSUFBSSxxQkFBUUosR0FBUixFQUFYO0FBQ0QsQ0FMTTtBQU9QOzs7Ozs7Ozs7QUFLTyxJQUFNTSxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLEdBQU07QUFDakMsTUFBTUMsS0FBSyxHQUFHLHFCQUFkO0FBQ0EsU0FBT0EsS0FBUDtBQUNELENBSE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxPbGF5aW5rYVxcQURDXFxiYW5rYVxcYXBpXFxzcmNcXEhlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBhIHJlY29yZCBhbHJlYWR5IGV4aXN0c1xuICogQHBhcmFtIHtvYmplY3R9IG1vZGVsXG4gKiBAcGFyYW0ge29iamVjdH0gZGF0YVxuICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBjb25zdCByZWNvcmRFeGlzdHMgPSAobW9kZWwsIGRhdGEsIGtleSkgPT4ge1xuICBjb25zdCBjaGVjayA9IG1vZGVsLmZpbHRlcihyZXNvdXJjZSA9PiB7XG4gICAgcmV0dXJuIHJlc291cmNlW2tleV0gPT09IGRhdGFba2V5XTtcbiAgfSk7XG4gIHJldHVybiBjaGVjay5sZW5ndGggPyB0cnVlIDogZmFsc2U7XG59O1xuXG4vKipcbiAqIEdldHMgdGhlIGxhc3QgSUQgZnJvbSBhIGxpc3Qgb2YgcmVzb3VyY2VzXG4gKiBAcGFyYW0ge29iamVjdH0gbW9kZWxcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBnZXRMYXN0SWQgPSBtb2RlbCA9PiB7XG4gIGNvbnN0IGlkcyA9IG1vZGVsLm1hcChpdGVtID0+IHtcbiAgICByZXR1cm4gaXRlbS5pZDtcbiAgfSk7XG4gIHJldHVybiBNYXRoLm1heCguLi5pZHMpO1xufTtcblxuLyoqXG4gKiBHZW5lcmF0ZXMgcmFuZG9tIHRva2VuXG4gKiBAcGFyYW0gbnVsbFxuICogQHJldHVybnMge3N0cmluZ30gdG9rZW5cbiAqL1xuZXhwb3J0IGNvbnN0IGdlbmVyYXRlVG9rZW4gPSAoKSA9PiB7XG4gIGNvbnN0IHRva2VuID0gJzQ1ZXJramhlcmh0NDU0OTU3ODMnO1xuICByZXR1cm4gdG9rZW47XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "helpers.js"
      ],
      "names": [
        "recordExists",
        "model",
        "data",
        "key",
        "check",
        "filter",
        "resource",
        "length",
        "getLastId",
        "ids",
        "map",
        "item",
        "id",
        "Math",
        "max",
        "generateToken",
        "token"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;;;;;;AAOO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,IAAR,EAAcC,GAAd,EAAsB;AAChD,MAAMC,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAa,UAAAC,QAAQ,EAAI;AACrC,WAAOA,QAAQ,CAACH,GAAD,CAAR,KAAkBD,IAAI,CAACC,GAAD,CAA7B;AACD,GAFa,CAAd;AAGA,SAAOC,KAAK,CAACG,MAAN,GAAe,IAAf,GAAsB,KAA7B;AACD,CALM;AAOP;;;;;;;;;AAKO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAP,KAAK,EAAI;AAChC,MAAMQ,GAAG,GAAGR,KAAK,CAACS,GAAN,CAAU,UAAAC,IAAI,EAAI;AAC5B,WAAOA,IAAI,CAACC,EAAZ;AACD,GAFW,CAAZ;AAGA,SAAOC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQJ,GAAR,EAAX;AACD,CALM;AAOP;;;;;;;;;AAKO,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,MAAMC,KAAK,GAAG,qBAAd;AACA,SAAOA,KAAP;AACD,CAHM",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\Helpers",
      "sourcesContent": [
        "/**\n * Checks if a record already exists\n * @param {object} model\n * @param {object} data\n * @param {string} key\n * @returns {boolean}\n */\nexport const recordExists = (model, data, key) => {\n  const check = model.filter(resource => {\n    return resource[key] === data[key];\n  });\n  return check.length ? true : false;\n};\n\n/**\n * Gets the last ID from a list of resources\n * @param {object} model\n * @returns {number}\n */\nexport const getLastId = model => {\n  const ids = model.map(item => {\n    return item.id;\n  });\n  return Math.max(...ids);\n};\n\n/**\n * Generates random token\n * @param null\n * @returns {string} token\n */\nexport const generateToken = () => {\n  const token = '45erkjherht45495783';\n  return token;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554885212141
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\routes\\\\account.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\account.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\account.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\account.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
        "sourceFileName": "account.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _account = _interopRequireDefault(require(\"../controllers/account.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar accountController = new _account[\"default\"]();\n\nvar router = _express[\"default\"].Router();\n\nrouter.post('/accounts', accountController.createAccount);\nrouter.patch('/account/:accountNumber', accountController.updateAccountStatus);\nrouter[\"delete\"]('/account/:accountNumber', accountController.updateAccountStatus);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQucm91dGUuanMiXSwibmFtZXMiOlsiYWNjb3VudENvbnRyb2xsZXIiLCJBY2NvdW50Q29udHJvbGxlciIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwiY3JlYXRlQWNjb3VudCIsInBhdGNoIiwidXBkYXRlQWNjb3VudFN0YXR1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsaUJBQWlCLEdBQUcsSUFBSUMsbUJBQUosRUFBMUI7O0FBRUEsSUFBTUMsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmOztBQUVBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxXQUFaLEVBQXlCTCxpQkFBaUIsQ0FBQ00sYUFBM0M7QUFDQUosTUFBTSxDQUFDSyxLQUFQLENBQWEseUJBQWIsRUFBd0NQLGlCQUFpQixDQUFDUSxtQkFBMUQ7QUFDQU4sTUFBTSxVQUFOLENBQWMseUJBQWQsRUFBeUNGLGlCQUFpQixDQUFDUSxtQkFBM0Q7ZUFFZU4sTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE9sYXlpbmthXFxBRENcXGJhbmthXFxhcGlcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgQWNjb3VudENvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvYWNjb3VudC5jb250cm9sbGVyJztcblxuY29uc3QgYWNjb3VudENvbnRyb2xsZXIgPSBuZXcgQWNjb3VudENvbnRyb2xsZXIoKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLnBvc3QoJy9hY2NvdW50cycsIGFjY291bnRDb250cm9sbGVyLmNyZWF0ZUFjY291bnQpO1xucm91dGVyLnBhdGNoKCcvYWNjb3VudC86YWNjb3VudE51bWJlcicsIGFjY291bnRDb250cm9sbGVyLnVwZGF0ZUFjY291bnRTdGF0dXMpO1xucm91dGVyLmRlbGV0ZSgnL2FjY291bnQvOmFjY291bnROdW1iZXInLCBhY2NvdW50Q29udHJvbGxlci51cGRhdGVBY2NvdW50U3RhdHVzKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "account.route.js"
      ],
      "names": [
        "accountController",
        "AccountController",
        "router",
        "express",
        "Router",
        "post",
        "createAccount",
        "patch",
        "updateAccountStatus"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,iBAAiB,GAAG,IAAIC,mBAAJ,EAA1B;;AAEA,IAAMC,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,IAAP,CAAY,WAAZ,EAAyBL,iBAAiB,CAACM,aAA3C;AACAJ,MAAM,CAACK,KAAP,CAAa,yBAAb,EAAwCP,iBAAiB,CAACQ,mBAA1D;AACAN,MAAM,UAAN,CAAc,yBAAd,EAAyCF,iBAAiB,CAACQ,mBAA3D;eAEeN,M",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\nimport AccountController from '../controllers/account.controller';\n\nconst accountController = new AccountController();\n\nconst router = express.Router();\n\nrouter.post('/accounts', accountController.createAccount);\nrouter.patch('/account/:accountNumber', accountController.updateAccountStatus);\nrouter.delete('/account/:accountNumber', accountController.updateAccountStatus);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555110626903
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\controllers\\\\account.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\account.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\account.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\account.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
        "sourceFileName": "account.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _accounts = _interopRequireDefault(require(\"../services/accounts.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar AccountController =\n/*#__PURE__*/\nfunction () {\n  function AccountController() {\n    _classCallCheck(this, AccountController);\n  }\n\n  _createClass(AccountController, [{\n    key: \"createAccount\",\n    value: function createAccount(req, res) {\n      var accountInfo = req.body;\n      var account = new _accounts[\"default\"]();\n      var newAccount = account.addAccount(accountInfo);\n\n      if (!newAccount.error) {\n        return res.status(newAccount.code).send({\n          status: newAccount.code,\n          data: newAccount.data\n        });\n      }\n\n      return res.status(newAccount.code).send({\n        status: newAccount.code,\n        error: newAccount.message\n      });\n    }\n  }, {\n    key: \"updateAccountStatus\",\n    value: function updateAccountStatus(req, res) {\n      var _req$body = req.body,\n          status = _req$body.status,\n          userId = _req$body.userId;\n      var accountNumber = req.params.accountNumber;\n      var account = new _accounts[\"default\"]();\n      var updatedAccount = account.updateAccountStatus({\n        status: status,\n        accountNumber: accountNumber\n      }, userId);\n\n      if (!updatedAccount.error) {\n        var response = req.body.status === 'deleted' ? {\n          status: updatedAccount.code,\n          message: updatedAccount.message\n        } : {\n          status: updatedAccount.code,\n          data: updatedAccount.data\n        };\n        return res.status(updatedAccount.code).send(response);\n      }\n\n      return res.status(updatedAccount.code).send({\n        status: updatedAccount.code,\n        error: updatedAccount.message\n      });\n    }\n  }]);\n\n  return AccountController;\n}();\n\nexports[\"default\"] = AccountController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJBY2NvdW50Q29udHJvbGxlciIsInJlcSIsInJlcyIsImFjY291bnRJbmZvIiwiYm9keSIsImFjY291bnQiLCJBY2NvdW50IiwibmV3QWNjb3VudCIsImFkZEFjY291bnQiLCJlcnJvciIsInN0YXR1cyIsImNvZGUiLCJzZW5kIiwiZGF0YSIsIm1lc3NhZ2UiLCJ1c2VySWQiLCJhY2NvdW50TnVtYmVyIiwicGFyYW1zIiwidXBkYXRlZEFjY291bnQiLCJ1cGRhdGVBY2NvdW50U3RhdHVzIiwicmVzcG9uc2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztJQUVxQkEsaUI7Ozs7Ozs7OztrQ0FDTEMsRyxFQUFLQyxHLEVBQUs7QUFDdEIsVUFBTUMsV0FBVyxHQUFHRixHQUFHLENBQUNHLElBQXhCO0FBQ0EsVUFBTUMsT0FBTyxHQUFHLElBQUlDLG9CQUFKLEVBQWhCO0FBQ0EsVUFBTUMsVUFBVSxHQUFHRixPQUFPLENBQUNHLFVBQVIsQ0FBbUJMLFdBQW5CLENBQW5COztBQUVBLFVBQUksQ0FBQ0ksVUFBVSxDQUFDRSxLQUFoQixFQUF1QjtBQUNyQixlQUFPUCxHQUFHLENBQUNRLE1BQUosQ0FBV0gsVUFBVSxDQUFDSSxJQUF0QixFQUE0QkMsSUFBNUIsQ0FBaUM7QUFBRUYsVUFBQUEsTUFBTSxFQUFFSCxVQUFVLENBQUNJLElBQXJCO0FBQTJCRSxVQUFBQSxJQUFJLEVBQUVOLFVBQVUsQ0FBQ007QUFBNUMsU0FBakMsQ0FBUDtBQUNEOztBQUNELGFBQU9YLEdBQUcsQ0FBQ1EsTUFBSixDQUFXSCxVQUFVLENBQUNJLElBQXRCLEVBQTRCQyxJQUE1QixDQUFpQztBQUFFRixRQUFBQSxNQUFNLEVBQUVILFVBQVUsQ0FBQ0ksSUFBckI7QUFBMkJGLFFBQUFBLEtBQUssRUFBRUYsVUFBVSxDQUFDTztBQUE3QyxPQUFqQyxDQUFQO0FBQ0Q7Ozt3Q0FFbUJiLEcsRUFBS0MsRyxFQUFLO0FBQUEsc0JBQ0RELEdBQUcsQ0FBQ0csSUFESDtBQUFBLFVBQ3BCTSxNQURvQixhQUNwQkEsTUFEb0I7QUFBQSxVQUNaSyxNQURZLGFBQ1pBLE1BRFk7QUFFNUIsVUFBTUMsYUFBYSxHQUFHZixHQUFHLENBQUNnQixNQUFKLENBQVdELGFBQWpDO0FBQ0EsVUFBTVgsT0FBTyxHQUFHLElBQUlDLG9CQUFKLEVBQWhCO0FBQ0EsVUFBTVksY0FBYyxHQUFHYixPQUFPLENBQUNjLG1CQUFSLENBQTRCO0FBQUVULFFBQUFBLE1BQU0sRUFBTkEsTUFBRjtBQUFVTSxRQUFBQSxhQUFhLEVBQWJBO0FBQVYsT0FBNUIsRUFBdURELE1BQXZELENBQXZCOztBQUVBLFVBQUksQ0FBQ0csY0FBYyxDQUFDVCxLQUFwQixFQUEyQjtBQUN6QixZQUFNVyxRQUFRLEdBQ1puQixHQUFHLENBQUNHLElBQUosQ0FBU00sTUFBVCxLQUFvQixTQUFwQixHQUNJO0FBQUVBLFVBQUFBLE1BQU0sRUFBRVEsY0FBYyxDQUFDUCxJQUF6QjtBQUErQkcsVUFBQUEsT0FBTyxFQUFFSSxjQUFjLENBQUNKO0FBQXZELFNBREosR0FFSTtBQUFFSixVQUFBQSxNQUFNLEVBQUVRLGNBQWMsQ0FBQ1AsSUFBekI7QUFBK0JFLFVBQUFBLElBQUksRUFBRUssY0FBYyxDQUFDTDtBQUFwRCxTQUhOO0FBSUEsZUFBT1gsR0FBRyxDQUFDUSxNQUFKLENBQVdRLGNBQWMsQ0FBQ1AsSUFBMUIsRUFBZ0NDLElBQWhDLENBQXFDUSxRQUFyQyxDQUFQO0FBQ0Q7O0FBQ0QsYUFBT2xCLEdBQUcsQ0FDUFEsTUFESSxDQUNHUSxjQUFjLENBQUNQLElBRGxCLEVBRUpDLElBRkksQ0FFQztBQUFFRixRQUFBQSxNQUFNLEVBQUVRLGNBQWMsQ0FBQ1AsSUFBekI7QUFBK0JGLFFBQUFBLEtBQUssRUFBRVMsY0FBYyxDQUFDSjtBQUFyRCxPQUZELENBQVA7QUFHRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE9sYXlpbmthXFxBRENcXGJhbmthXFxhcGlcXHNyY1xcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWNjb3VudCBmcm9tICcuLi9zZXJ2aWNlcy9hY2NvdW50cy5zZXJ2aWNlJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWNjb3VudENvbnRyb2xsZXIge1xuICBjcmVhdGVBY2NvdW50KHJlcSwgcmVzKSB7XG4gICAgY29uc3QgYWNjb3VudEluZm8gPSByZXEuYm9keTtcbiAgICBjb25zdCBhY2NvdW50ID0gbmV3IEFjY291bnQoKTtcbiAgICBjb25zdCBuZXdBY2NvdW50ID0gYWNjb3VudC5hZGRBY2NvdW50KGFjY291bnRJbmZvKTtcblxuICAgIGlmICghbmV3QWNjb3VudC5lcnJvcikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMobmV3QWNjb3VudC5jb2RlKS5zZW5kKHsgc3RhdHVzOiBuZXdBY2NvdW50LmNvZGUsIGRhdGE6IG5ld0FjY291bnQuZGF0YSB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMobmV3QWNjb3VudC5jb2RlKS5zZW5kKHsgc3RhdHVzOiBuZXdBY2NvdW50LmNvZGUsIGVycm9yOiBuZXdBY2NvdW50Lm1lc3NhZ2UgfSk7XG4gIH1cblxuICB1cGRhdGVBY2NvdW50U3RhdHVzKHJlcSwgcmVzKSB7XG4gICAgY29uc3QgeyBzdGF0dXMsIHVzZXJJZCB9ID0gcmVxLmJvZHk7XG4gICAgY29uc3QgYWNjb3VudE51bWJlciA9IHJlcS5wYXJhbXMuYWNjb3VudE51bWJlcjtcbiAgICBjb25zdCBhY2NvdW50ID0gbmV3IEFjY291bnQoKTtcbiAgICBjb25zdCB1cGRhdGVkQWNjb3VudCA9IGFjY291bnQudXBkYXRlQWNjb3VudFN0YXR1cyh7IHN0YXR1cywgYWNjb3VudE51bWJlciB9LCB1c2VySWQpO1xuXG4gICAgaWYgKCF1cGRhdGVkQWNjb3VudC5lcnJvcikge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPVxuICAgICAgICByZXEuYm9keS5zdGF0dXMgPT09ICdkZWxldGVkJ1xuICAgICAgICAgID8geyBzdGF0dXM6IHVwZGF0ZWRBY2NvdW50LmNvZGUsIG1lc3NhZ2U6IHVwZGF0ZWRBY2NvdW50Lm1lc3NhZ2UgfVxuICAgICAgICAgIDogeyBzdGF0dXM6IHVwZGF0ZWRBY2NvdW50LmNvZGUsIGRhdGE6IHVwZGF0ZWRBY2NvdW50LmRhdGEgfTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKHVwZGF0ZWRBY2NvdW50LmNvZGUpLnNlbmQocmVzcG9uc2UpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzXG4gICAgICAuc3RhdHVzKHVwZGF0ZWRBY2NvdW50LmNvZGUpXG4gICAgICAuc2VuZCh7IHN0YXR1czogdXBkYXRlZEFjY291bnQuY29kZSwgZXJyb3I6IHVwZGF0ZWRBY2NvdW50Lm1lc3NhZ2UgfSk7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "account.controller.js"
      ],
      "names": [
        "AccountController",
        "req",
        "res",
        "accountInfo",
        "body",
        "account",
        "Account",
        "newAccount",
        "addAccount",
        "error",
        "status",
        "code",
        "send",
        "data",
        "message",
        "userId",
        "accountNumber",
        "params",
        "updatedAccount",
        "updateAccountStatus",
        "response"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEqBA,iB;;;;;;;;;kCACLC,G,EAAKC,G,EAAK;AACtB,UAAMC,WAAW,GAAGF,GAAG,CAACG,IAAxB;AACA,UAAMC,OAAO,GAAG,IAAIC,oBAAJ,EAAhB;AACA,UAAMC,UAAU,GAAGF,OAAO,CAACG,UAAR,CAAmBL,WAAnB,CAAnB;;AAEA,UAAI,CAACI,UAAU,CAACE,KAAhB,EAAuB;AACrB,eAAOP,GAAG,CAACQ,MAAJ,CAAWH,UAAU,CAACI,IAAtB,EAA4BC,IAA5B,CAAiC;AAAEF,UAAAA,MAAM,EAAEH,UAAU,CAACI,IAArB;AAA2BE,UAAAA,IAAI,EAAEN,UAAU,CAACM;AAA5C,SAAjC,CAAP;AACD;;AACD,aAAOX,GAAG,CAACQ,MAAJ,CAAWH,UAAU,CAACI,IAAtB,EAA4BC,IAA5B,CAAiC;AAAEF,QAAAA,MAAM,EAAEH,UAAU,CAACI,IAArB;AAA2BF,QAAAA,KAAK,EAAEF,UAAU,CAACO;AAA7C,OAAjC,CAAP;AACD;;;wCAEmBb,G,EAAKC,G,EAAK;AAAA,sBACDD,GAAG,CAACG,IADH;AAAA,UACpBM,MADoB,aACpBA,MADoB;AAAA,UACZK,MADY,aACZA,MADY;AAE5B,UAAMC,aAAa,GAAGf,GAAG,CAACgB,MAAJ,CAAWD,aAAjC;AACA,UAAMX,OAAO,GAAG,IAAIC,oBAAJ,EAAhB;AACA,UAAMY,cAAc,GAAGb,OAAO,CAACc,mBAAR,CAA4B;AAAET,QAAAA,MAAM,EAANA,MAAF;AAAUM,QAAAA,aAAa,EAAbA;AAAV,OAA5B,EAAuDD,MAAvD,CAAvB;;AAEA,UAAI,CAACG,cAAc,CAACT,KAApB,EAA2B;AACzB,YAAMW,QAAQ,GACZnB,GAAG,CAACG,IAAJ,CAASM,MAAT,KAAoB,SAApB,GACI;AAAEA,UAAAA,MAAM,EAAEQ,cAAc,CAACP,IAAzB;AAA+BG,UAAAA,OAAO,EAAEI,cAAc,CAACJ;AAAvD,SADJ,GAEI;AAAEJ,UAAAA,MAAM,EAAEQ,cAAc,CAACP,IAAzB;AAA+BE,UAAAA,IAAI,EAAEK,cAAc,CAACL;AAApD,SAHN;AAIA,eAAOX,GAAG,CAACQ,MAAJ,CAAWQ,cAAc,CAACP,IAA1B,EAAgCC,IAAhC,CAAqCQ,QAArC,CAAP;AACD;;AACD,aAAOlB,GAAG,CACPQ,MADI,CACGQ,cAAc,CAACP,IADlB,EAEJC,IAFI,CAEC;AAAEF,QAAAA,MAAM,EAAEQ,cAAc,CAACP,IAAzB;AAA+BF,QAAAA,KAAK,EAAES,cAAc,CAACJ;AAArD,OAFD,CAAP;AAGD",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
      "sourcesContent": [
        "import Account from '../services/accounts.service';\n\nexport default class AccountController {\n  createAccount(req, res) {\n    const accountInfo = req.body;\n    const account = new Account();\n    const newAccount = account.addAccount(accountInfo);\n\n    if (!newAccount.error) {\n      return res.status(newAccount.code).send({ status: newAccount.code, data: newAccount.data });\n    }\n    return res.status(newAccount.code).send({ status: newAccount.code, error: newAccount.message });\n  }\n\n  updateAccountStatus(req, res) {\n    const { status, userId } = req.body;\n    const accountNumber = req.params.accountNumber;\n    const account = new Account();\n    const updatedAccount = account.updateAccountStatus({ status, accountNumber }, userId);\n\n    if (!updatedAccount.error) {\n      const response =\n        req.body.status === 'deleted'\n          ? { status: updatedAccount.code, message: updatedAccount.message }\n          : { status: updatedAccount.code, data: updatedAccount.data };\n      return res.status(updatedAccount.code).send(response);\n    }\n    return res\n      .status(updatedAccount.code)\n      .send({ status: updatedAccount.code, error: updatedAccount.message });\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555110570205
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\services\\\\accounts.service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\accounts.service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\accounts.service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\accounts.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
        "sourceFileName": "accounts.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _accounts = require(\"../.data/accounts\");\n\nvar _helpers = require(\"../Helpers/helpers\");\n\nvar _user = _interopRequireDefault(require(\"./user.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @exports\n * @class AccountService\n */\nvar AccountService =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of AccountService.\n   * @memberof AccountService\n   */\n  function AccountService() {\n    _classCallCheck(this, AccountService);\n\n    this.accounts = _accounts.accounts;\n  }\n  /**\n   * Get all account resources.\n   * @param null\n   * @returns {object}\n   */\n\n\n  _createClass(AccountService, [{\n    key: \"getAllAccounts\",\n    value: function getAllAccounts() {\n      return this.accounts;\n    }\n    /**\n     * Creates a new bank account.\n     * @param {object} accountInfo\n     * @returns {object}\n     */\n\n  }, {\n    key: \"addAccount\",\n    value: function addAccount(accountInfo) {\n      var allAccounts = this.getAllAccounts();\n      var newId = (0, _helpers.getLastId)(allAccounts) + 1;\n      var userAccounts = allAccounts.filter(function (account) {\n        return account.owner === accountInfo.owner;\n      });\n      var account_type_exists = (0, _helpers.recordExists)(userAccounts, accountInfo, 'type');\n\n      if (account_type_exists) {\n        return {\n          message: \"You already have a \".concat(accountInfo.type, \" account\"),\n          error: true,\n          code: 401\n        };\n      } else {\n        var account_number = Math.max.apply(Math, _toConsumableArray(this.getAllAccounts().map(function (account) {\n          return account.accountNumber;\n        }))) + 1; // console.log('Account number',account_number);\n\n        var userService = new _user[\"default\"]();\n        var userInfo = userService.getUserInfo(accountInfo.owner);\n\n        if (!userInfo.error) {\n          var _userInfo$data = userInfo.data,\n              id = _userInfo$data.id,\n              firstName = _userInfo$data.firstName,\n              lastName = _userInfo$data.lastName,\n              email = _userInfo$data.email;\n          var newAccount = {\n            id: newId,\n            accountNumber: account_number,\n            type: accountInfo.type,\n            openingBalance: parseFloat(0.0),\n            createdOn: new Date(),\n            owner: id,\n            firstName: firstName,\n            lastName: lastName,\n            email: email\n          };\n          return {\n            message: 'Account Created successfully',\n            error: false,\n            code: 201,\n            data: _objectSpread({}, newAccount)\n          };\n        } else {\n          return {\n            message: 'Error Creating Account User information required',\n            error: true,\n            code: 403\n          };\n        }\n      }\n    }\n    /**\n     * Activates/Deactvate a bank account.\n     * @param {number} userId\n     * @param {object} update\n     * @returns {object}\n     */\n\n  }, {\n    key: \"updateAccountStatus\",\n    value: function updateAccountStatus(update, userId) {\n      var users = new _user[\"default\"]();\n      var allUsers = users.getAllUsers();\n      var validUser = allUsers.filter(function (db_user) {\n        return userId === db_user.id && db_user.isAdmin === true;\n      });\n\n      if (validUser.length) {\n        var accountToUpdate = this.accounts.filter(function (account) {\n          return account.accountNumber === parseInt(update.accountNumber);\n        });\n\n        if (accountToUpdate.length) {\n          var allowedStatuses = ['deleted', 'dormant', 'active'];\n\n          if (!allowedStatuses.includes(update.status)) {\n            return {\n              message: \"Unidentified status specified\",\n              error: true,\n              code: 400\n            };\n          }\n\n          if (update.status === 'deleted') {\n            accountToUpdate[0].status = 'deleted';\n            return {\n              message: \"Account deleted successfully\",\n              error: false,\n              code: 200\n            };\n          } else {\n            accountToUpdate[0].status = accountToUpdate[0].status === 'active' ? 'dormant' : 'active';\n            return {\n              message: \"Account Status successfully updated to '\".concat(accountToUpdate[0].status, \"'\"),\n              error: false,\n              code: 200,\n              data: _objectSpread({}, accountToUpdate[0])\n            };\n          }\n        } else {\n          return {\n            message: \"Account number \".concat(update.accountNumber, \" does not exist\"),\n            error: true,\n            code: 404\n          };\n        }\n      } else {\n        return {\n          message: 'You are not authorized to perform this action.',\n          error: true,\n          code: 403\n        };\n      }\n    }\n  }]);\n\n  return AccountService;\n}();\n\nexports[\"default\"] = AccountService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "accounts.service.js"
      ],
      "names": [
        "AccountService",
        "accounts",
        "accountInfo",
        "allAccounts",
        "getAllAccounts",
        "newId",
        "userAccounts",
        "filter",
        "account",
        "owner",
        "account_type_exists",
        "message",
        "type",
        "error",
        "code",
        "account_number",
        "Math",
        "max",
        "map",
        "accountNumber",
        "userService",
        "UserService",
        "userInfo",
        "getUserInfo",
        "data",
        "id",
        "firstName",
        "lastName",
        "email",
        "newAccount",
        "openingBalance",
        "parseFloat",
        "createdOn",
        "Date",
        "update",
        "userId",
        "users",
        "allUsers",
        "getAllUsers",
        "validUser",
        "db_user",
        "isAdmin",
        "length",
        "accountToUpdate",
        "parseInt",
        "allowedStatuses",
        "includes",
        "status"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;IAKqBA,c;;;AACnB;;;;AAIA,4BAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgBA,kBAAhB;AACD;AAED;;;;;;;;;qCAKiB;AACf,aAAO,KAAKA,QAAZ;AACD;AAED;;;;;;;;+BAKWC,W,EAAa;AACtB,UAAMC,WAAW,GAAG,KAAKC,cAAL,EAApB;AACA,UAAMC,KAAK,GAAG,wBAAUF,WAAV,IAAyB,CAAvC;AACA,UAAMG,YAAY,GAAGH,WAAW,CAACI,MAAZ,CAAmB,UAAAC,OAAO,EAAI;AACjD,eAAOA,OAAO,CAACC,KAAR,KAAkBP,WAAW,CAACO,KAArC;AACD,OAFoB,CAArB;AAGA,UAAMC,mBAAmB,GAAG,2BAAaJ,YAAb,EAA2BJ,WAA3B,EAAwC,MAAxC,CAA5B;;AAEA,UAAIQ,mBAAJ,EAAyB;AACvB,eAAO;AAAEC,UAAAA,OAAO,+BAAwBT,WAAW,CAACU,IAApC,aAAT;AAA6DC,UAAAA,KAAK,EAAE,IAApE;AAA0EC,UAAAA,IAAI,EAAE;AAAhF,SAAP;AACD,OAFD,MAEO;AACL,YAAMC,cAAc,GAClBC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ,KAAKZ,cAAL,GAAsBc,GAAtB,CAA0B,UAAAV,OAAO;AAAA,iBAAIA,OAAO,CAACW,aAAZ;AAAA,SAAjC,CAAR,EAAJ,GAA2E,CAD7E,CADK,CAGL;;AACA,YAAMC,WAAW,GAAG,IAAIC,gBAAJ,EAApB;AACA,YAAMC,QAAQ,GAAGF,WAAW,CAACG,WAAZ,CAAwBrB,WAAW,CAACO,KAApC,CAAjB;;AACA,YAAI,CAACa,QAAQ,CAACT,KAAd,EAAqB;AAAA,+BACwBS,QAAQ,CAACE,IADjC;AAAA,cACXC,EADW,kBACXA,EADW;AAAA,cACPC,SADO,kBACPA,SADO;AAAA,cACIC,QADJ,kBACIA,QADJ;AAAA,cACcC,KADd,kBACcA,KADd;AAEnB,cAAMC,UAAU,GAAG;AACjBJ,YAAAA,EAAE,EAAEpB,KADa;AAEjBc,YAAAA,aAAa,EAAEJ,cAFE;AAGjBH,YAAAA,IAAI,EAAEV,WAAW,CAACU,IAHD;AAIjBkB,YAAAA,cAAc,EAAEC,UAAU,CAAC,GAAD,CAJT;AAKjBC,YAAAA,SAAS,EAAE,IAAIC,IAAJ,EALM;AAMjBxB,YAAAA,KAAK,EAAEgB,EANU;AAOjBC,YAAAA,SAAS,EAATA,SAPiB;AAQjBC,YAAAA,QAAQ,EAARA,QARiB;AASjBC,YAAAA,KAAK,EAALA;AATiB,WAAnB;AAYA,iBAAO;AACLjB,YAAAA,OAAO,EAAE,8BADJ;AAELE,YAAAA,KAAK,EAAE,KAFF;AAGLC,YAAAA,IAAI,EAAE,GAHD;AAILU,YAAAA,IAAI,oBAAOK,UAAP;AAJC,WAAP;AAMD,SApBD,MAoBO;AACL,iBAAO;AACLlB,YAAAA,OAAO,EAAE,kDADJ;AAELE,YAAAA,KAAK,EAAE,IAFF;AAGLC,YAAAA,IAAI,EAAE;AAHD,WAAP;AAKD;AACF;AACF;AAED;;;;;;;;;wCAMoBoB,M,EAAQC,M,EAAQ;AAClC,UAAMC,KAAK,GAAG,IAAIf,gBAAJ,EAAd;AACA,UAAMgB,QAAQ,GAAGD,KAAK,CAACE,WAAN,EAAjB;AACA,UAAMC,SAAS,GAAGF,QAAQ,CAAC9B,MAAT,CAAgB,UAAAiC,OAAO,EAAI;AAC3C,eAAOL,MAAM,KAAKK,OAAO,CAACf,EAAnB,IAAyBe,OAAO,CAACC,OAAR,KAAoB,IAApD;AACD,OAFiB,CAAlB;;AAGA,UAAIF,SAAS,CAACG,MAAd,EAAsB;AACpB,YAAMC,eAAe,GAAG,KAAK1C,QAAL,CAAcM,MAAd,CAAqB,UAAAC,OAAO,EAAI;AACtD,iBAAOA,OAAO,CAACW,aAAR,KAA0ByB,QAAQ,CAACV,MAAM,CAACf,aAAR,CAAzC;AACD,SAFuB,CAAxB;;AAGA,YAAIwB,eAAe,CAACD,MAApB,EAA4B;AAC1B,cAAMG,eAAe,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,CAAxB;;AACA,cAAI,CAACA,eAAe,CAACC,QAAhB,CAAyBZ,MAAM,CAACa,MAAhC,CAAL,EAA8C;AAC5C,mBAAO;AACLpC,cAAAA,OAAO,iCADF;AAELE,cAAAA,KAAK,EAAE,IAFF;AAGLC,cAAAA,IAAI,EAAE;AAHD,aAAP;AAKD;;AACD,cAAIoB,MAAM,CAACa,MAAP,KAAkB,SAAtB,EAAiC;AAC/BJ,YAAAA,eAAe,CAAC,CAAD,CAAf,CAAmBI,MAAnB,GAA4B,SAA5B;AACA,mBAAO;AACLpC,cAAAA,OAAO,gCADF;AAELE,cAAAA,KAAK,EAAE,KAFF;AAGLC,cAAAA,IAAI,EAAE;AAHD,aAAP;AAKD,WAPD,MAOO;AACL6B,YAAAA,eAAe,CAAC,CAAD,CAAf,CAAmBI,MAAnB,GAA4BJ,eAAe,CAAC,CAAD,CAAf,CAAmBI,MAAnB,KAA8B,QAA9B,GAAyC,SAAzC,GAAqD,QAAjF;AACA,mBAAO;AACLpC,cAAAA,OAAO,oDAA6CgC,eAAe,CAAC,CAAD,CAAf,CAAmBI,MAAhE,MADF;AAELlC,cAAAA,KAAK,EAAE,KAFF;AAGLC,cAAAA,IAAI,EAAE,GAHD;AAILU,cAAAA,IAAI,oBAAOmB,eAAe,CAAC,CAAD,CAAtB;AAJC,aAAP;AAMD;AACF,SAzBD,MAyBO;AACL,iBAAO;AACLhC,YAAAA,OAAO,2BAAoBuB,MAAM,CAACf,aAA3B,oBADF;AAELN,YAAAA,KAAK,EAAE,IAFF;AAGLC,YAAAA,IAAI,EAAE;AAHD,WAAP;AAKD;AACF,OApCD,MAoCO;AACL,eAAO;AACLH,UAAAA,OAAO,EAAE,gDADJ;AAELE,UAAAA,KAAK,EAAE,IAFF;AAGLC,UAAAA,IAAI,EAAE;AAHD,SAAP;AAKD;AACF",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
      "sourcesContent": [
        "import { accounts } from '../.data/accounts';\nimport { recordExists, getLastId } from '../Helpers/helpers';\nimport UserService from './user.service';\n\n/**\n * @exports\n * @class AccountService\n */\n\nexport default class AccountService {\n  /**\n   * Creates an instance of AccountService.\n   * @memberof AccountService\n   */\n  constructor() {\n    this.accounts = accounts;\n  }\n\n  /**\n   * Get all account resources.\n   * @param null\n   * @returns {object}\n   */\n  getAllAccounts() {\n    return this.accounts;\n  }\n\n  /**\n   * Creates a new bank account.\n   * @param {object} accountInfo\n   * @returns {object}\n   */\n  addAccount(accountInfo) {\n    const allAccounts = this.getAllAccounts();\n    const newId = getLastId(allAccounts) + 1;\n    const userAccounts = allAccounts.filter(account => {\n      return account.owner === accountInfo.owner;\n    });\n    const account_type_exists = recordExists(userAccounts, accountInfo, 'type');\n\n    if (account_type_exists) {\n      return { message: `You already have a ${accountInfo.type} account`, error: true, code: 401 };\n    } else {\n      const account_number =\n        Math.max(...this.getAllAccounts().map(account => account.accountNumber)) + 1;\n      // console.log('Account number',account_number);\n      const userService = new UserService();\n      const userInfo = userService.getUserInfo(accountInfo.owner);\n      if (!userInfo.error) {\n        const { id, firstName, lastName, email } = userInfo.data;\n        const newAccount = {\n          id: newId,\n          accountNumber: account_number,\n          type: accountInfo.type,\n          openingBalance: parseFloat(0.0),\n          createdOn: new Date(),\n          owner: id,\n          firstName,\n          lastName,\n          email\n        };\n\n        return {\n          message: 'Account Created successfully',\n          error: false,\n          code: 201,\n          data: { ...newAccount }\n        };\n      } else {\n        return {\n          message: 'Error Creating Account User information required',\n          error: true,\n          code: 403\n        };\n      }\n    }\n  }\n\n  /**\n   * Activates/Deactvate a bank account.\n   * @param {number} userId\n   * @param {object} update\n   * @returns {object}\n   */\n  updateAccountStatus(update, userId) {\n    const users = new UserService();\n    const allUsers = users.getAllUsers();\n    const validUser = allUsers.filter(db_user => {\n      return userId === db_user.id && db_user.isAdmin === true;\n    });\n    if (validUser.length) {\n      const accountToUpdate = this.accounts.filter(account => {\n        return account.accountNumber === parseInt(update.accountNumber);\n      });\n      if (accountToUpdate.length) {\n        const allowedStatuses = ['deleted', 'dormant', 'active'];\n        if (!allowedStatuses.includes(update.status)) {\n          return {\n            message: `Unidentified status specified`,\n            error: true,\n            code: 400\n          };\n        }\n        if (update.status === 'deleted') {\n          accountToUpdate[0].status = 'deleted';\n          return {\n            message: `Account deleted successfully`,\n            error: false,\n            code: 200\n          };\n        } else {\n          accountToUpdate[0].status = accountToUpdate[0].status === 'active' ? 'dormant' : 'active';\n          return {\n            message: `Account Status successfully updated to '${accountToUpdate[0].status}'`,\n            error: false,\n            code: 200,\n            data: { ...accountToUpdate[0] }\n          };\n        }\n      } else {\n        return {\n          message: `Account number ${update.accountNumber} does not exist`,\n          error: true,\n          code: 404\n        };\n      }\n    } else {\n      return {\n        message: 'You are not authorized to perform this action.',\n        error: true,\n        code: 403\n      };\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555111778007
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\.data\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\.data\\\\accounts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\accounts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\accounts.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\accounts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
        "sourceFileName": "accounts.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.accounts = void 0;\nvar accounts = [{\n  id: 1,\n  accountNumber: 1233445642,\n  createdOn: '2019-04-10 12:35:00',\n  owner: 3,\n  // user id\n  type: 'savings',\n  // savings, current\n  status: 'active',\n  // draft, active, or dormant\n  balance: 1234125.0\n}];\nexports.accounts = accounts;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnRzLmpzIl0sIm5hbWVzIjpbImFjY291bnRzIiwiaWQiLCJhY2NvdW50TnVtYmVyIiwiY3JlYXRlZE9uIiwib3duZXIiLCJ0eXBlIiwic3RhdHVzIiwiYmFsYW5jZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sSUFBTUEsUUFBUSxHQUFHLENBQ3RCO0FBQ0VDLEVBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLEVBQUFBLGFBQWEsRUFBRSxVQUZqQjtBQUdFQyxFQUFBQSxTQUFTLEVBQUUscUJBSGI7QUFJRUMsRUFBQUEsS0FBSyxFQUFFLENBSlQ7QUFJWTtBQUNWQyxFQUFBQSxJQUFJLEVBQUUsU0FMUjtBQUttQjtBQUNqQkMsRUFBQUEsTUFBTSxFQUFFLFFBTlY7QUFNb0I7QUFDbEJDLEVBQUFBLE9BQU8sRUFBRTtBQVBYLENBRHNCLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcT2xheWlua2FcXEFEQ1xcYmFua2FcXGFwaVxcc3JjXFwuZGF0YSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBhY2NvdW50cyA9IFtcbiAge1xuICAgIGlkOiAxLFxuICAgIGFjY291bnROdW1iZXI6IDEyMzM0NDU2NDIsXG4gICAgY3JlYXRlZE9uOiAnMjAxOS0wNC0xMCAxMjozNTowMCcsXG4gICAgb3duZXI6IDMsIC8vIHVzZXIgaWRcbiAgICB0eXBlOiAnc2F2aW5ncycsIC8vIHNhdmluZ3MsIGN1cnJlbnRcbiAgICBzdGF0dXM6ICdhY3RpdmUnLCAvLyBkcmFmdCwgYWN0aXZlLCBvciBkb3JtYW50XG4gICAgYmFsYW5jZTogMTIzNDEyNS4wXG4gIH1cbl07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "accounts.js"
      ],
      "names": [
        "accounts",
        "id",
        "accountNumber",
        "createdOn",
        "owner",
        "type",
        "status",
        "balance"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,QAAQ,GAAG,CACtB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,aAAa,EAAE,UAFjB;AAGEC,EAAAA,SAAS,EAAE,qBAHb;AAIEC,EAAAA,KAAK,EAAE,CAJT;AAIY;AACVC,EAAAA,IAAI,EAAE,SALR;AAKmB;AACjBC,EAAAA,MAAM,EAAE,QANV;AAMoB;AAClBC,EAAAA,OAAO,EAAE;AAPX,CADsB,CAAjB",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
      "sourcesContent": [
        "export const accounts = [\n  {\n    id: 1,\n    accountNumber: 1233445642,\n    createdOn: '2019-04-10 12:35:00',\n    owner: 3, // user id\n    type: 'savings', // savings, current\n    status: 'active', // draft, active, or dormant\n    balance: 1234125.0\n  }\n];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1554994973486
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\tests\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\tests\\\\transactions.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests\\transactions.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests\\transactions.test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests\\transactions.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests",
        "sourceFileName": "transactions.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _index = require(\"../index\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar expect = _chai[\"default\"].expect; // const assert = chai.assert;\n\nvar should = _chai[\"default\"].should();\n\n_chai[\"default\"].use(_chaiHttp[\"default\"]);\n\ndescribe('Transactions', function () {\n  describe('/POST Perform Transaction', function () {\n    it('It should debit a bank account', function (done) {\n      var transaction_detail = {\n        amount: parseFloat('3000.00'),\n        cashier: 2,\n        type: 'debit'\n      };\n\n      _chai[\"default\"].request(_index.app).post('/api/v1/transactions/1233445643/debit').send(transaction_detail).end(function (err, res) {\n        expect(transaction_detail).to.have.property('type');\n        expect(transaction_detail).to.have.property('cashier');\n        expect(transaction_detail).to.have.property('amount');\n        res.should.have.status(200);\n        expect(res.body).to.be.an('object');\n        expect(res.body.data).to.have.property('transactionId');\n        expect(res.body.data).to.have.property('amount');\n        expect(res.body.data).to.have.property('cashier');\n        expect(res.body.data).to.have.property('transactionType');\n        expect(res.body.data).to.have.property('accountNumber');\n        expect(res.body.data).to.have.property('accountBalance');\n        done();\n      });\n    });\n    it('It should credit a bank account', function (done) {\n      var transaction_detail = {\n        amount: parseFloat('3000.00'),\n        cashier: 2,\n        type: 'credit'\n      };\n\n      _chai[\"default\"].request(_index.app).post('/api/v1/transactions/1233445643/credit').send(transaction_detail).end(function (err, res) {\n        expect(transaction_detail).to.have.property('type');\n        expect(transaction_detail).to.have.property('cashier');\n        expect(transaction_detail).to.have.property('amount');\n        res.should.have.status(200);\n        expect(res.body).to.be.an('object');\n        expect(res.body.data).to.have.property('transactionId');\n        expect(res.body.data).to.have.property('amount');\n        expect(res.body.data).to.have.property('cashier');\n        expect(res.body.data).to.have.property('transactionType');\n        expect(res.body.data).to.have.property('accountNumber');\n        expect(res.body.data).to.have.property('accountBalance');\n        done();\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zYWN0aW9ucy50ZXN0LmpzIl0sIm5hbWVzIjpbImV4cGVjdCIsImNoYWkiLCJzaG91bGQiLCJ1c2UiLCJjaGFpSHR0cCIsImRlc2NyaWJlIiwiaXQiLCJkb25lIiwidHJhbnNhY3Rpb25fZGV0YWlsIiwiYW1vdW50IiwicGFyc2VGbG9hdCIsImNhc2hpZXIiLCJ0eXBlIiwicmVxdWVzdCIsImFwcCIsInBvc3QiLCJzZW5kIiwiZW5kIiwiZXJyIiwicmVzIiwidG8iLCJoYXZlIiwicHJvcGVydHkiLCJzdGF0dXMiLCJib2R5IiwiYmUiLCJhbiIsImRhdGEiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLGlCQUFLRCxNQUFwQixDLENBQ0E7O0FBQ0EsSUFBTUUsTUFBTSxHQUFHRCxpQkFBS0MsTUFBTCxFQUFmOztBQUVBRCxpQkFBS0UsR0FBTCxDQUFTQyxvQkFBVDs7QUFDQUMsUUFBUSxDQUFDLGNBQUQsRUFBaUIsWUFBTTtBQUM3QkEsRUFBQUEsUUFBUSxDQUFDLDJCQUFELEVBQThCLFlBQU07QUFDMUNDLElBQUFBLEVBQUUsQ0FBQyxnQ0FBRCxFQUFtQyxVQUFBQyxJQUFJLEVBQUk7QUFDM0MsVUFBTUMsa0JBQWtCLEdBQUc7QUFDekJDLFFBQUFBLE1BQU0sRUFBRUMsVUFBVSxDQUFDLFNBQUQsQ0FETztBQUV6QkMsUUFBQUEsT0FBTyxFQUFFLENBRmdCO0FBR3pCQyxRQUFBQSxJQUFJLEVBQUU7QUFIbUIsT0FBM0I7O0FBTUFYLHVCQUNHWSxPQURILENBQ1dDLFVBRFgsRUFFR0MsSUFGSCxDQUVRLHVDQUZSLEVBR0dDLElBSEgsQ0FHUVIsa0JBSFIsRUFJR1MsR0FKSCxDQUlPLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pCbkIsUUFBQUEsTUFBTSxDQUFDUSxrQkFBRCxDQUFOLENBQTJCWSxFQUEzQixDQUE4QkMsSUFBOUIsQ0FBbUNDLFFBQW5DLENBQTRDLE1BQTVDO0FBQ0F0QixRQUFBQSxNQUFNLENBQUNRLGtCQUFELENBQU4sQ0FBMkJZLEVBQTNCLENBQThCQyxJQUE5QixDQUFtQ0MsUUFBbkMsQ0FBNEMsU0FBNUM7QUFDQXRCLFFBQUFBLE1BQU0sQ0FBQ1Esa0JBQUQsQ0FBTixDQUEyQlksRUFBM0IsQ0FBOEJDLElBQTlCLENBQW1DQyxRQUFuQyxDQUE0QyxRQUE1QztBQUNBSCxRQUFBQSxHQUFHLENBQUNqQixNQUFKLENBQVdtQixJQUFYLENBQWdCRSxNQUFoQixDQUF1QixHQUF2QjtBQUNBdkIsUUFBQUEsTUFBTSxDQUFDbUIsR0FBRyxDQUFDSyxJQUFMLENBQU4sQ0FBaUJKLEVBQWpCLENBQW9CSyxFQUFwQixDQUF1QkMsRUFBdkIsQ0FBMEIsUUFBMUI7QUFDQTFCLFFBQUFBLE1BQU0sQ0FBQ21CLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRyxJQUFWLENBQU4sQ0FBc0JQLEVBQXRCLENBQXlCQyxJQUF6QixDQUE4QkMsUUFBOUIsQ0FBdUMsZUFBdkM7QUFDQXRCLFFBQUFBLE1BQU0sQ0FBQ21CLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRyxJQUFWLENBQU4sQ0FBc0JQLEVBQXRCLENBQXlCQyxJQUF6QixDQUE4QkMsUUFBOUIsQ0FBdUMsUUFBdkM7QUFDQXRCLFFBQUFBLE1BQU0sQ0FBQ21CLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRyxJQUFWLENBQU4sQ0FBc0JQLEVBQXRCLENBQXlCQyxJQUF6QixDQUE4QkMsUUFBOUIsQ0FBdUMsU0FBdkM7QUFDQXRCLFFBQUFBLE1BQU0sQ0FBQ21CLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRyxJQUFWLENBQU4sQ0FBc0JQLEVBQXRCLENBQXlCQyxJQUF6QixDQUE4QkMsUUFBOUIsQ0FBdUMsaUJBQXZDO0FBQ0F0QixRQUFBQSxNQUFNLENBQUNtQixHQUFHLENBQUNLLElBQUosQ0FBU0csSUFBVixDQUFOLENBQXNCUCxFQUF0QixDQUF5QkMsSUFBekIsQ0FBOEJDLFFBQTlCLENBQXVDLGVBQXZDO0FBQ0F0QixRQUFBQSxNQUFNLENBQUNtQixHQUFHLENBQUNLLElBQUosQ0FBU0csSUFBVixDQUFOLENBQXNCUCxFQUF0QixDQUF5QkMsSUFBekIsQ0FBOEJDLFFBQTlCLENBQXVDLGdCQUF2QztBQUNBZixRQUFBQSxJQUFJO0FBQ0wsT0FqQkg7QUFrQkQsS0F6QkMsQ0FBRjtBQTJCQUQsSUFBQUEsRUFBRSxDQUFDLGlDQUFELEVBQW9DLFVBQUFDLElBQUksRUFBSTtBQUM1QyxVQUFNQyxrQkFBa0IsR0FBRztBQUN6QkMsUUFBQUEsTUFBTSxFQUFFQyxVQUFVLENBQUMsU0FBRCxDQURPO0FBRXpCQyxRQUFBQSxPQUFPLEVBQUUsQ0FGZ0I7QUFHekJDLFFBQUFBLElBQUksRUFBRTtBQUhtQixPQUEzQjs7QUFNQVgsdUJBQ0dZLE9BREgsQ0FDV0MsVUFEWCxFQUVHQyxJQUZILENBRVEsd0NBRlIsRUFHR0MsSUFISCxDQUdRUixrQkFIUixFQUlHUyxHQUpILENBSU8sVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakJuQixRQUFBQSxNQUFNLENBQUNRLGtCQUFELENBQU4sQ0FBMkJZLEVBQTNCLENBQThCQyxJQUE5QixDQUFtQ0MsUUFBbkMsQ0FBNEMsTUFBNUM7QUFDQXRCLFFBQUFBLE1BQU0sQ0FBQ1Esa0JBQUQsQ0FBTixDQUEyQlksRUFBM0IsQ0FBOEJDLElBQTlCLENBQW1DQyxRQUFuQyxDQUE0QyxTQUE1QztBQUNBdEIsUUFBQUEsTUFBTSxDQUFDUSxrQkFBRCxDQUFOLENBQTJCWSxFQUEzQixDQUE4QkMsSUFBOUIsQ0FBbUNDLFFBQW5DLENBQTRDLFFBQTVDO0FBQ0FILFFBQUFBLEdBQUcsQ0FBQ2pCLE1BQUosQ0FBV21CLElBQVgsQ0FBZ0JFLE1BQWhCLENBQXVCLEdBQXZCO0FBQ0F2QixRQUFBQSxNQUFNLENBQUNtQixHQUFHLENBQUNLLElBQUwsQ0FBTixDQUFpQkosRUFBakIsQ0FBb0JLLEVBQXBCLENBQXVCQyxFQUF2QixDQUEwQixRQUExQjtBQUNBMUIsUUFBQUEsTUFBTSxDQUFDbUIsR0FBRyxDQUFDSyxJQUFKLENBQVNHLElBQVYsQ0FBTixDQUFzQlAsRUFBdEIsQ0FBeUJDLElBQXpCLENBQThCQyxRQUE5QixDQUF1QyxlQUF2QztBQUNBdEIsUUFBQUEsTUFBTSxDQUFDbUIsR0FBRyxDQUFDSyxJQUFKLENBQVNHLElBQVYsQ0FBTixDQUFzQlAsRUFBdEIsQ0FBeUJDLElBQXpCLENBQThCQyxRQUE5QixDQUF1QyxRQUF2QztBQUNBdEIsUUFBQUEsTUFBTSxDQUFDbUIsR0FBRyxDQUFDSyxJQUFKLENBQVNHLElBQVYsQ0FBTixDQUFzQlAsRUFBdEIsQ0FBeUJDLElBQXpCLENBQThCQyxRQUE5QixDQUF1QyxTQUF2QztBQUNBdEIsUUFBQUEsTUFBTSxDQUFDbUIsR0FBRyxDQUFDSyxJQUFKLENBQVNHLElBQVYsQ0FBTixDQUFzQlAsRUFBdEIsQ0FBeUJDLElBQXpCLENBQThCQyxRQUE5QixDQUF1QyxpQkFBdkM7QUFDQXRCLFFBQUFBLE1BQU0sQ0FBQ21CLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRyxJQUFWLENBQU4sQ0FBc0JQLEVBQXRCLENBQXlCQyxJQUF6QixDQUE4QkMsUUFBOUIsQ0FBdUMsZUFBdkM7QUFDQXRCLFFBQUFBLE1BQU0sQ0FBQ21CLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRyxJQUFWLENBQU4sQ0FBc0JQLEVBQXRCLENBQXlCQyxJQUF6QixDQUE4QkMsUUFBOUIsQ0FBdUMsZ0JBQXZDO0FBQ0FmLFFBQUFBLElBQUk7QUFDTCxPQWpCSDtBQWtCRCxLQXpCQyxDQUFGO0FBMEJELEdBdERPLENBQVI7QUF1REQsQ0F4RE8sQ0FBUiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE9sYXlpbmthXFxBRENcXGJhbmthXFxhcGlcXHNyY1xcdGVzdHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpSHR0cCBmcm9tICdjaGFpLWh0dHAnO1xuaW1wb3J0IHsgYXBwIH0gZnJvbSAnLi4vaW5kZXgnO1xuXG5jb25zdCBleHBlY3QgPSBjaGFpLmV4cGVjdDtcbi8vIGNvbnN0IGFzc2VydCA9IGNoYWkuYXNzZXJ0O1xuY29uc3Qgc2hvdWxkID0gY2hhaS5zaG91bGQoKTtcblxuY2hhaS51c2UoY2hhaUh0dHApO1xuZGVzY3JpYmUoJ1RyYW5zYWN0aW9ucycsICgpID0+IHtcbiAgZGVzY3JpYmUoJy9QT1NUIFBlcmZvcm0gVHJhbnNhY3Rpb24nLCAoKSA9PiB7XG4gICAgaXQoJ0l0IHNob3VsZCBkZWJpdCBhIGJhbmsgYWNjb3VudCcsIGRvbmUgPT4ge1xuICAgICAgY29uc3QgdHJhbnNhY3Rpb25fZGV0YWlsID0ge1xuICAgICAgICBhbW91bnQ6IHBhcnNlRmxvYXQoJzMwMDAuMDAnKSxcbiAgICAgICAgY2FzaGllcjogMixcbiAgICAgICAgdHlwZTogJ2RlYml0J1xuICAgICAgfTtcblxuICAgICAgY2hhaVxuICAgICAgICAucmVxdWVzdChhcHApXG4gICAgICAgIC5wb3N0KCcvYXBpL3YxL3RyYW5zYWN0aW9ucy8xMjMzNDQ1NjQzL2RlYml0JylcbiAgICAgICAgLnNlbmQodHJhbnNhY3Rpb25fZGV0YWlsKVxuICAgICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICAgIGV4cGVjdCh0cmFuc2FjdGlvbl9kZXRhaWwpLnRvLmhhdmUucHJvcGVydHkoJ3R5cGUnKTtcbiAgICAgICAgICBleHBlY3QodHJhbnNhY3Rpb25fZGV0YWlsKS50by5oYXZlLnByb3BlcnR5KCdjYXNoaWVyJyk7XG4gICAgICAgICAgZXhwZWN0KHRyYW5zYWN0aW9uX2RldGFpbCkudG8uaGF2ZS5wcm9wZXJ0eSgnYW1vdW50Jyk7XG4gICAgICAgICAgcmVzLnNob3VsZC5oYXZlLnN0YXR1cygyMDApO1xuICAgICAgICAgIGV4cGVjdChyZXMuYm9keSkudG8uYmUuYW4oJ29iamVjdCcpO1xuICAgICAgICAgIGV4cGVjdChyZXMuYm9keS5kYXRhKS50by5oYXZlLnByb3BlcnR5KCd0cmFuc2FjdGlvbklkJyk7XG4gICAgICAgICAgZXhwZWN0KHJlcy5ib2R5LmRhdGEpLnRvLmhhdmUucHJvcGVydHkoJ2Ftb3VudCcpO1xuICAgICAgICAgIGV4cGVjdChyZXMuYm9keS5kYXRhKS50by5oYXZlLnByb3BlcnR5KCdjYXNoaWVyJyk7XG4gICAgICAgICAgZXhwZWN0KHJlcy5ib2R5LmRhdGEpLnRvLmhhdmUucHJvcGVydHkoJ3RyYW5zYWN0aW9uVHlwZScpO1xuICAgICAgICAgIGV4cGVjdChyZXMuYm9keS5kYXRhKS50by5oYXZlLnByb3BlcnR5KCdhY2NvdW50TnVtYmVyJyk7XG4gICAgICAgICAgZXhwZWN0KHJlcy5ib2R5LmRhdGEpLnRvLmhhdmUucHJvcGVydHkoJ2FjY291bnRCYWxhbmNlJyk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KTtcbiAgICB9KTtcblxuICAgIGl0KCdJdCBzaG91bGQgY3JlZGl0IGEgYmFuayBhY2NvdW50JywgZG9uZSA9PiB7XG4gICAgICBjb25zdCB0cmFuc2FjdGlvbl9kZXRhaWwgPSB7XG4gICAgICAgIGFtb3VudDogcGFyc2VGbG9hdCgnMzAwMC4wMCcpLFxuICAgICAgICBjYXNoaWVyOiAyLFxuICAgICAgICB0eXBlOiAnY3JlZGl0J1xuICAgICAgfTtcblxuICAgICAgY2hhaVxuICAgICAgICAucmVxdWVzdChhcHApXG4gICAgICAgIC5wb3N0KCcvYXBpL3YxL3RyYW5zYWN0aW9ucy8xMjMzNDQ1NjQzL2NyZWRpdCcpXG4gICAgICAgIC5zZW5kKHRyYW5zYWN0aW9uX2RldGFpbClcbiAgICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgICBleHBlY3QodHJhbnNhY3Rpb25fZGV0YWlsKS50by5oYXZlLnByb3BlcnR5KCd0eXBlJyk7XG4gICAgICAgICAgZXhwZWN0KHRyYW5zYWN0aW9uX2RldGFpbCkudG8uaGF2ZS5wcm9wZXJ0eSgnY2FzaGllcicpO1xuICAgICAgICAgIGV4cGVjdCh0cmFuc2FjdGlvbl9kZXRhaWwpLnRvLmhhdmUucHJvcGVydHkoJ2Ftb3VudCcpO1xuICAgICAgICAgIHJlcy5zaG91bGQuaGF2ZS5zdGF0dXMoMjAwKTtcbiAgICAgICAgICBleHBlY3QocmVzLmJvZHkpLnRvLmJlLmFuKCdvYmplY3QnKTtcbiAgICAgICAgICBleHBlY3QocmVzLmJvZHkuZGF0YSkudG8uaGF2ZS5wcm9wZXJ0eSgndHJhbnNhY3Rpb25JZCcpO1xuICAgICAgICAgIGV4cGVjdChyZXMuYm9keS5kYXRhKS50by5oYXZlLnByb3BlcnR5KCdhbW91bnQnKTtcbiAgICAgICAgICBleHBlY3QocmVzLmJvZHkuZGF0YSkudG8uaGF2ZS5wcm9wZXJ0eSgnY2FzaGllcicpO1xuICAgICAgICAgIGV4cGVjdChyZXMuYm9keS5kYXRhKS50by5oYXZlLnByb3BlcnR5KCd0cmFuc2FjdGlvblR5cGUnKTtcbiAgICAgICAgICBleHBlY3QocmVzLmJvZHkuZGF0YSkudG8uaGF2ZS5wcm9wZXJ0eSgnYWNjb3VudE51bWJlcicpO1xuICAgICAgICAgIGV4cGVjdChyZXMuYm9keS5kYXRhKS50by5oYXZlLnByb3BlcnR5KCdhY2NvdW50QmFsYW5jZScpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "transactions.test.js"
      ],
      "names": [
        "expect",
        "chai",
        "should",
        "use",
        "chaiHttp",
        "describe",
        "it",
        "done",
        "transaction_detail",
        "amount",
        "parseFloat",
        "cashier",
        "type",
        "request",
        "app",
        "post",
        "send",
        "end",
        "err",
        "res",
        "to",
        "have",
        "property",
        "status",
        "body",
        "be",
        "an",
        "data"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,iBAAKD,MAApB,C,CACA;;AACA,IAAME,MAAM,GAAGD,iBAAKC,MAAL,EAAf;;AAEAD,iBAAKE,GAAL,CAASC,oBAAT;;AACAC,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BA,EAAAA,QAAQ,CAAC,2BAAD,EAA8B,YAAM;AAC1CC,IAAAA,EAAE,CAAC,gCAAD,EAAmC,UAAAC,IAAI,EAAI;AAC3C,UAAMC,kBAAkB,GAAG;AACzBC,QAAAA,MAAM,EAAEC,UAAU,CAAC,SAAD,CADO;AAEzBC,QAAAA,OAAO,EAAE,CAFgB;AAGzBC,QAAAA,IAAI,EAAE;AAHmB,OAA3B;;AAMAX,uBACGY,OADH,CACWC,UADX,EAEGC,IAFH,CAEQ,uCAFR,EAGGC,IAHH,CAGQR,kBAHR,EAIGS,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACQ,kBAAD,CAAN,CAA2BY,EAA3B,CAA8BC,IAA9B,CAAmCC,QAAnC,CAA4C,MAA5C;AACAtB,QAAAA,MAAM,CAACQ,kBAAD,CAAN,CAA2BY,EAA3B,CAA8BC,IAA9B,CAAmCC,QAAnC,CAA4C,SAA5C;AACAtB,QAAAA,MAAM,CAACQ,kBAAD,CAAN,CAA2BY,EAA3B,CAA8BC,IAA9B,CAAmCC,QAAnC,CAA4C,QAA5C;AACAH,QAAAA,GAAG,CAACjB,MAAJ,CAAWmB,IAAX,CAAgBE,MAAhB,CAAuB,GAAvB;AACAvB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBK,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACA1B,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,eAAvC;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,QAAvC;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,SAAvC;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,iBAAvC;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,eAAvC;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,gBAAvC;AACAf,QAAAA,IAAI;AACL,OAjBH;AAkBD,KAzBC,CAAF;AA2BAD,IAAAA,EAAE,CAAC,iCAAD,EAAoC,UAAAC,IAAI,EAAI;AAC5C,UAAMC,kBAAkB,GAAG;AACzBC,QAAAA,MAAM,EAAEC,UAAU,CAAC,SAAD,CADO;AAEzBC,QAAAA,OAAO,EAAE,CAFgB;AAGzBC,QAAAA,IAAI,EAAE;AAHmB,OAA3B;;AAMAX,uBACGY,OADH,CACWC,UADX,EAEGC,IAFH,CAEQ,wCAFR,EAGGC,IAHH,CAGQR,kBAHR,EAIGS,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBnB,QAAAA,MAAM,CAACQ,kBAAD,CAAN,CAA2BY,EAA3B,CAA8BC,IAA9B,CAAmCC,QAAnC,CAA4C,MAA5C;AACAtB,QAAAA,MAAM,CAACQ,kBAAD,CAAN,CAA2BY,EAA3B,CAA8BC,IAA9B,CAAmCC,QAAnC,CAA4C,SAA5C;AACAtB,QAAAA,MAAM,CAACQ,kBAAD,CAAN,CAA2BY,EAA3B,CAA8BC,IAA9B,CAAmCC,QAAnC,CAA4C,QAA5C;AACAH,QAAAA,GAAG,CAACjB,MAAJ,CAAWmB,IAAX,CAAgBE,MAAhB,CAAuB,GAAvB;AACAvB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAL,CAAN,CAAiBJ,EAAjB,CAAoBK,EAApB,CAAuBC,EAAvB,CAA0B,QAA1B;AACA1B,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,eAAvC;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,QAAvC;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,SAAvC;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,iBAAvC;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,eAAvC;AACAtB,QAAAA,MAAM,CAACmB,GAAG,CAACK,IAAJ,CAASG,IAAV,CAAN,CAAsBP,EAAtB,CAAyBC,IAAzB,CAA8BC,QAA9B,CAAuC,gBAAvC;AACAf,QAAAA,IAAI;AACL,OAjBH;AAkBD,KAzBC,CAAF;AA0BD,GAtDO,CAAR;AAuDD,CAxDO,CAAR",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\tests",
      "sourcesContent": [
        "import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport { app } from '../index';\n\nconst expect = chai.expect;\n// const assert = chai.assert;\nconst should = chai.should();\n\nchai.use(chaiHttp);\ndescribe('Transactions', () => {\n  describe('/POST Perform Transaction', () => {\n    it('It should debit a bank account', done => {\n      const transaction_detail = {\n        amount: parseFloat('3000.00'),\n        cashier: 2,\n        type: 'debit'\n      };\n\n      chai\n        .request(app)\n        .post('/api/v1/transactions/1233445643/debit')\n        .send(transaction_detail)\n        .end((err, res) => {\n          expect(transaction_detail).to.have.property('type');\n          expect(transaction_detail).to.have.property('cashier');\n          expect(transaction_detail).to.have.property('amount');\n          res.should.have.status(200);\n          expect(res.body).to.be.an('object');\n          expect(res.body.data).to.have.property('transactionId');\n          expect(res.body.data).to.have.property('amount');\n          expect(res.body.data).to.have.property('cashier');\n          expect(res.body.data).to.have.property('transactionType');\n          expect(res.body.data).to.have.property('accountNumber');\n          expect(res.body.data).to.have.property('accountBalance');\n          done();\n        });\n    });\n\n    it('It should credit a bank account', done => {\n      const transaction_detail = {\n        amount: parseFloat('3000.00'),\n        cashier: 2,\n        type: 'credit'\n      };\n\n      chai\n        .request(app)\n        .post('/api/v1/transactions/1233445643/credit')\n        .send(transaction_detail)\n        .end((err, res) => {\n          expect(transaction_detail).to.have.property('type');\n          expect(transaction_detail).to.have.property('cashier');\n          expect(transaction_detail).to.have.property('amount');\n          res.should.have.status(200);\n          expect(res.body).to.be.an('object');\n          expect(res.body.data).to.have.property('transactionId');\n          expect(res.body.data).to.have.property('amount');\n          expect(res.body.data).to.have.property('cashier');\n          expect(res.body.data).to.have.property('transactionType');\n          expect(res.body.data).to.have.property('accountNumber');\n          expect(res.body.data).to.have.property('accountBalance');\n          done();\n        });\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555151343440
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\routes\\\\transactions.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\transactions.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\transactions.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes\\transactions.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
        "sourceFileName": "transactions.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _transactions = _interopRequireDefault(require(\"../controllers/transactions.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar transactionController = new _transactions[\"default\"]();\n\nvar router = _express[\"default\"].Router();\n\nrouter.post('/:accountNumber/debit', transactionController.performTransaction);\nrouter.post('/:accountNumber/credit', transactionController.performTransaction);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zYWN0aW9ucy5yb3V0ZS5qcyJdLCJuYW1lcyI6WyJ0cmFuc2FjdGlvbkNvbnRyb2xsZXIiLCJUcmFuc2FjdGlvbkNvbnRyb2xsZXIiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwicG9zdCIsInBlcmZvcm1UcmFuc2FjdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEscUJBQXFCLEdBQUcsSUFBSUMsd0JBQUosRUFBOUI7O0FBRUEsSUFBTUMsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmOztBQUVBRixNQUFNLENBQUNHLElBQVAsQ0FBWSx1QkFBWixFQUFxQ0wscUJBQXFCLENBQUNNLGtCQUEzRDtBQUNBSixNQUFNLENBQUNHLElBQVAsQ0FBWSx3QkFBWixFQUFzQ0wscUJBQXFCLENBQUNNLGtCQUE1RDtlQUVlSixNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcT2xheWlua2FcXEFEQ1xcYmFua2FcXGFwaVxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBUcmFuc2FjdGlvbkNvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvdHJhbnNhY3Rpb25zLmNvbnRyb2xsZXInO1xuXG5jb25zdCB0cmFuc2FjdGlvbkNvbnRyb2xsZXIgPSBuZXcgVHJhbnNhY3Rpb25Db250cm9sbGVyKCk7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbnJvdXRlci5wb3N0KCcvOmFjY291bnROdW1iZXIvZGViaXQnLCB0cmFuc2FjdGlvbkNvbnRyb2xsZXIucGVyZm9ybVRyYW5zYWN0aW9uKTtcbnJvdXRlci5wb3N0KCcvOmFjY291bnROdW1iZXIvY3JlZGl0JywgdHJhbnNhY3Rpb25Db250cm9sbGVyLnBlcmZvcm1UcmFuc2FjdGlvbik7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "transactions.route.js"
      ],
      "names": [
        "transactionController",
        "TransactionController",
        "router",
        "express",
        "Router",
        "post",
        "performTransaction"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,qBAAqB,GAAG,IAAIC,wBAAJ,EAA9B;;AAEA,IAAMC,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAEAF,MAAM,CAACG,IAAP,CAAY,uBAAZ,EAAqCL,qBAAqB,CAACM,kBAA3D;AACAJ,MAAM,CAACG,IAAP,CAAY,wBAAZ,EAAsCL,qBAAqB,CAACM,kBAA5D;eAEeJ,M",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\routes",
      "sourcesContent": [
        "import express from 'express';\nimport TransactionController from '../controllers/transactions.controller';\n\nconst transactionController = new TransactionController();\n\nconst router = express.Router();\n\nrouter.post('/:accountNumber/debit', transactionController.performTransaction);\nrouter.post('/:accountNumber/credit', transactionController.performTransaction);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555154283013
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\controllers\\\\transactions.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\transactions.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\transactions.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers\\transactions.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
        "sourceFileName": "transactions.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _transactions = _interopRequireDefault(require(\"../services/transactions.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar AccountController =\n/*#__PURE__*/\nfunction () {\n  function AccountController() {\n    _classCallCheck(this, AccountController);\n  }\n\n  _createClass(AccountController, [{\n    key: \"performTransaction\",\n    value: function performTransaction(req, res) {\n      var transactionInfo = req.body;\n      var accountNumber = req.params.accountNumber;\n      var transaction = new _transactions[\"default\"]();\n      var newTransaction = transaction.performTransaction(_objectSpread({}, transactionInfo, {\n        accountNumber: accountNumber\n      }), transactionInfo.cashier);\n\n      if (!newTransaction.error) {\n        return res.status(newTransaction.code).send({\n          status: newTransaction.code,\n          data: newTransaction.data\n        });\n      }\n\n      return res.status(newTransaction.code).send({\n        status: newTransaction.code,\n        error: newTransaction.message\n      });\n    }\n  }]);\n\n  return AccountController;\n}();\n\nexports[\"default\"] = AccountController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zYWN0aW9ucy5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIkFjY291bnRDb250cm9sbGVyIiwicmVxIiwicmVzIiwidHJhbnNhY3Rpb25JbmZvIiwiYm9keSIsImFjY291bnROdW1iZXIiLCJwYXJhbXMiLCJ0cmFuc2FjdGlvbiIsIlRyYW5zYWN0aW9uIiwibmV3VHJhbnNhY3Rpb24iLCJwZXJmb3JtVHJhbnNhY3Rpb24iLCJjYXNoaWVyIiwiZXJyb3IiLCJzdGF0dXMiLCJjb2RlIiwic2VuZCIsImRhdGEiLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7O0lBRXFCQSxpQjs7Ozs7Ozs7O3VDQUNBQyxHLEVBQUtDLEcsRUFBSztBQUMzQixVQUFNQyxlQUFlLEdBQUdGLEdBQUcsQ0FBQ0csSUFBNUI7QUFDQSxVQUFNQyxhQUFhLEdBQUdKLEdBQUcsQ0FBQ0ssTUFBSixDQUFXRCxhQUFqQztBQUNBLFVBQU1FLFdBQVcsR0FBRyxJQUFJQyx3QkFBSixFQUFwQjtBQUNBLFVBQU1DLGNBQWMsR0FBR0YsV0FBVyxDQUFDRyxrQkFBWixtQkFDaEJQLGVBRGdCO0FBQ0NFLFFBQUFBLGFBQWEsRUFBYkE7QUFERCxVQUVyQkYsZUFBZSxDQUFDUSxPQUZLLENBQXZCOztBQUtBLFVBQUksQ0FBQ0YsY0FBYyxDQUFDRyxLQUFwQixFQUEyQjtBQUN6QixlQUFPVixHQUFHLENBQ1BXLE1BREksQ0FDR0osY0FBYyxDQUFDSyxJQURsQixFQUVKQyxJQUZJLENBRUM7QUFBRUYsVUFBQUEsTUFBTSxFQUFFSixjQUFjLENBQUNLLElBQXpCO0FBQStCRSxVQUFBQSxJQUFJLEVBQUVQLGNBQWMsQ0FBQ087QUFBcEQsU0FGRCxDQUFQO0FBR0Q7O0FBQ0QsYUFBT2QsR0FBRyxDQUNQVyxNQURJLENBQ0dKLGNBQWMsQ0FBQ0ssSUFEbEIsRUFFSkMsSUFGSSxDQUVDO0FBQUVGLFFBQUFBLE1BQU0sRUFBRUosY0FBYyxDQUFDSyxJQUF6QjtBQUErQkYsUUFBQUEsS0FBSyxFQUFFSCxjQUFjLENBQUNRO0FBQXJELE9BRkQsQ0FBUDtBQUdEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcT2xheWlua2FcXEFEQ1xcYmFua2FcXGFwaVxcc3JjXFxjb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUcmFuc2FjdGlvbiBmcm9tICcuLi9zZXJ2aWNlcy90cmFuc2FjdGlvbnMuc2VydmljZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFjY291bnRDb250cm9sbGVyIHtcbiAgcGVyZm9ybVRyYW5zYWN0aW9uKHJlcSwgcmVzKSB7XG4gICAgY29uc3QgdHJhbnNhY3Rpb25JbmZvID0gcmVxLmJvZHk7XG4gICAgY29uc3QgYWNjb3VudE51bWJlciA9IHJlcS5wYXJhbXMuYWNjb3VudE51bWJlcjtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IG5ldyBUcmFuc2FjdGlvbigpO1xuICAgIGNvbnN0IG5ld1RyYW5zYWN0aW9uID0gdHJhbnNhY3Rpb24ucGVyZm9ybVRyYW5zYWN0aW9uKFxuICAgICAgeyAuLi50cmFuc2FjdGlvbkluZm8sIGFjY291bnROdW1iZXIgfSxcbiAgICAgIHRyYW5zYWN0aW9uSW5mby5jYXNoaWVyXG4gICAgKTtcblxuICAgIGlmICghbmV3VHJhbnNhY3Rpb24uZXJyb3IpIHtcbiAgICAgIHJldHVybiByZXNcbiAgICAgICAgLnN0YXR1cyhuZXdUcmFuc2FjdGlvbi5jb2RlKVxuICAgICAgICAuc2VuZCh7IHN0YXR1czogbmV3VHJhbnNhY3Rpb24uY29kZSwgZGF0YTogbmV3VHJhbnNhY3Rpb24uZGF0YSB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc1xuICAgICAgLnN0YXR1cyhuZXdUcmFuc2FjdGlvbi5jb2RlKVxuICAgICAgLnNlbmQoeyBzdGF0dXM6IG5ld1RyYW5zYWN0aW9uLmNvZGUsIGVycm9yOiBuZXdUcmFuc2FjdGlvbi5tZXNzYWdlIH0pO1xuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "transactions.controller.js"
      ],
      "names": [
        "AccountController",
        "req",
        "res",
        "transactionInfo",
        "body",
        "accountNumber",
        "params",
        "transaction",
        "Transaction",
        "newTransaction",
        "performTransaction",
        "cashier",
        "error",
        "status",
        "code",
        "send",
        "data",
        "message"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;IAEqBA,iB;;;;;;;;;uCACAC,G,EAAKC,G,EAAK;AAC3B,UAAMC,eAAe,GAAGF,GAAG,CAACG,IAA5B;AACA,UAAMC,aAAa,GAAGJ,GAAG,CAACK,MAAJ,CAAWD,aAAjC;AACA,UAAME,WAAW,GAAG,IAAIC,wBAAJ,EAApB;AACA,UAAMC,cAAc,GAAGF,WAAW,CAACG,kBAAZ,mBAChBP,eADgB;AACCE,QAAAA,aAAa,EAAbA;AADD,UAErBF,eAAe,CAACQ,OAFK,CAAvB;;AAKA,UAAI,CAACF,cAAc,CAACG,KAApB,EAA2B;AACzB,eAAOV,GAAG,CACPW,MADI,CACGJ,cAAc,CAACK,IADlB,EAEJC,IAFI,CAEC;AAAEF,UAAAA,MAAM,EAAEJ,cAAc,CAACK,IAAzB;AAA+BE,UAAAA,IAAI,EAAEP,cAAc,CAACO;AAApD,SAFD,CAAP;AAGD;;AACD,aAAOd,GAAG,CACPW,MADI,CACGJ,cAAc,CAACK,IADlB,EAEJC,IAFI,CAEC;AAAEF,QAAAA,MAAM,EAAEJ,cAAc,CAACK,IAAzB;AAA+BF,QAAAA,KAAK,EAAEH,cAAc,CAACQ;AAArD,OAFD,CAAP;AAGD",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\controllers",
      "sourcesContent": [
        "import Transaction from '../services/transactions.service';\n\nexport default class AccountController {\n  performTransaction(req, res) {\n    const transactionInfo = req.body;\n    const accountNumber = req.params.accountNumber;\n    const transaction = new Transaction();\n    const newTransaction = transaction.performTransaction(\n      { ...transactionInfo, accountNumber },\n      transactionInfo.cashier\n    );\n\n    if (!newTransaction.error) {\n      return res\n        .status(newTransaction.code)\n        .send({ status: newTransaction.code, data: newTransaction.data });\n    }\n    return res\n      .status(newTransaction.code)\n      .send({ status: newTransaction.code, error: newTransaction.message });\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555149964752
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\services\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\services\\\\transactions.service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\transactions.service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\transactions.service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services\\transactions.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
        "sourceFileName": "transactions.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _transactions = require(\"../.data/transactions\");\n\nvar _helpers = require(\"../Helpers/helpers\");\n\nvar _user = _interopRequireDefault(require(\"./user.service\"));\n\nvar _accounts = _interopRequireDefault(require(\"./accounts.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @exports\n * @class TransactionService\n */\nvar TransactionService =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of TransactionService.\n   * @memberof TransactionService\n   */\n  function TransactionService() {\n    _classCallCheck(this, TransactionService);\n\n    this.transactions = _transactions.transactions;\n  }\n  /**\n   * Get all transaction resources.\n   * @param null\n   * @returns {object}\n   */\n\n\n  _createClass(TransactionService, [{\n    key: \"getAllTransactions\",\n    value: function getAllTransactions() {\n      return this.transactions;\n    }\n    /**\n     * Performs a debit or credit account on a bank account.\n     * @param {number} userId\n     * @param {object} transactionInfo\n     * @returns {object}\n     */\n\n  }, {\n    key: \"performTransaction\",\n    value: function performTransaction(transactionInfo, userId) {\n      var users = new _user[\"default\"]();\n      var allUsers = users.getAllUsers();\n      var validCashier = allUsers.filter(function (db_user) {\n        return userId === db_user.id && db_user.type === 'staff' && db_user.isAdmin === false;\n      });\n\n      if (validCashier.length) {\n        var accountService = new _accounts[\"default\"]();\n        var account = accountService.getAllAccounts().filter(function (account) {\n          return account.accountNumber === parseInt(transactionInfo.accountNumber);\n        });\n\n        if (account.length) {\n          var accountBalance = account[0].balance;\n          var transactionAmount = transactionInfo.amount;\n          var debitable = accountBalance - transactionAmount >= 0 ? true : false;\n\n          if (account[0].status === 'dormant' || account[0].status === 'deleted') {\n            return {\n              message: \"\".concat(transactionInfo.type, \" not allowed. Account is \").concat(account.status, \", kindly contact admin.\"),\n              error: true,\n              code: 403\n            };\n          } else {\n            var transactionId = (0, _helpers.getLastId)(this.getAllTransactions()) + 1;\n            var oldAccountBalance = accountBalance;\n            var newAccountBalance = accountBalance;\n\n            if (debitable && transactionInfo.type.toLowerCase() === 'debit') {\n              newAccountBalance = accountBalance - transactionAmount;\n            } else if (transactionInfo.type.toLowerCase() === 'credit') {\n              newAccountBalance = accountBalance + transactionAmount;\n            } else {\n              return {\n                message: 'Insufficient balance.',\n                error: true,\n                code: 403\n              };\n            }\n\n            var newTransactionDetail = {\n              id: transactionId,\n              createdOn: new Date(),\n              type: transactionInfo.type.toLowerCase(),\n              accountNumber: account.accountNumber,\n              cashier: userId,\n              // cashier who consummated the transaction\n              amount: parseFloat(\"\".concat(transactionInfo.amount, \".00\")),\n              oldBalance: parseFloat(\"\".concat(oldAccountBalance, \".00\")),\n              newBalance: parseFloat(\"\".concat(newAccountBalance, \".00\"))\n            };\n            this.getAllTransactions().push(newTransactionDetail);\n            var dataToReturn = {\n              transactionId: transactionId,\n              accountNumber: transactionInfo.accountNumber,\n              amount: parseFloat(\"\".concat(transactionInfo.amount, \".00\")),\n              cashier: userId,\n              transactionType: transactionInfo.type,\n              accountBalance: parseFloat(\"\".concat(newAccountBalance, \".00\"))\n            };\n            return {\n              message: \"\".concat(transactionInfo.type, \" action successfull on '\").concat(account[0].accountNumber, \"'\"),\n              error: false,\n              code: 200,\n              data: dataToReturn\n            };\n          }\n        } else {\n          return {\n            message: \"Account number \".concat(transactionInfo.accountNumber, \" does not exist\"),\n            error: true,\n            code: 404\n          };\n        }\n      } else {\n        return {\n          message: 'You are not authorized to perform this action.',\n          error: true,\n          code: 403\n        };\n      }\n    }\n  }]);\n\n  return TransactionService;\n}();\n\nexports[\"default\"] = TransactionService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "transactions.service.js"
      ],
      "names": [
        "TransactionService",
        "transactions",
        "transactionInfo",
        "userId",
        "users",
        "UserService",
        "allUsers",
        "getAllUsers",
        "validCashier",
        "filter",
        "db_user",
        "id",
        "type",
        "isAdmin",
        "length",
        "accountService",
        "AccountService",
        "account",
        "getAllAccounts",
        "accountNumber",
        "parseInt",
        "accountBalance",
        "balance",
        "transactionAmount",
        "amount",
        "debitable",
        "status",
        "message",
        "error",
        "code",
        "transactionId",
        "getAllTransactions",
        "oldAccountBalance",
        "newAccountBalance",
        "toLowerCase",
        "newTransactionDetail",
        "createdOn",
        "Date",
        "cashier",
        "parseFloat",
        "oldBalance",
        "newBalance",
        "push",
        "dataToReturn",
        "transactionType",
        "data"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA;;;;IAKqBA,kB;;;AACnB;;;;AAIA,gCAAc;AAAA;;AACZ,SAAKC,YAAL,GAAoBA,0BAApB;AACD;AAED;;;;;;;;;yCAKqB;AACnB,aAAO,KAAKA,YAAZ;AACD;AAED;;;;;;;;;uCAMmBC,e,EAAiBC,M,EAAQ;AAC1C,UAAMC,KAAK,GAAG,IAAIC,gBAAJ,EAAd;AACA,UAAMC,QAAQ,GAAGF,KAAK,CAACG,WAAN,EAAjB;AACA,UAAMC,YAAY,GAAGF,QAAQ,CAACG,MAAT,CAAgB,UAAAC,OAAO,EAAI;AAC9C,eAAOP,MAAM,KAAKO,OAAO,CAACC,EAAnB,IAAyBD,OAAO,CAACE,IAAR,KAAiB,OAA1C,IAAqDF,OAAO,CAACG,OAAR,KAAoB,KAAhF;AACD,OAFoB,CAArB;;AAGA,UAAIL,YAAY,CAACM,MAAjB,EAAyB;AACvB,YAAMC,cAAc,GAAG,IAAIC,oBAAJ,EAAvB;AACA,YAAMC,OAAO,GAAGF,cAAc,CAACG,cAAf,GAAgCT,MAAhC,CAAuC,UAAAQ,OAAO,EAAI;AAChE,iBAAOA,OAAO,CAACE,aAAR,KAA0BC,QAAQ,CAAClB,eAAe,CAACiB,aAAjB,CAAzC;AACD,SAFe,CAAhB;;AAGA,YAAIF,OAAO,CAACH,MAAZ,EAAoB;AAClB,cAAMO,cAAc,GAAGJ,OAAO,CAAC,CAAD,CAAP,CAAWK,OAAlC;AACA,cAAMC,iBAAiB,GAAGrB,eAAe,CAACsB,MAA1C;AACA,cAAMC,SAAS,GAAGJ,cAAc,GAAGE,iBAAjB,IAAsC,CAAtC,GAA0C,IAA1C,GAAiD,KAAnE;;AAEA,cAAIN,OAAO,CAAC,CAAD,CAAP,CAAWS,MAAX,KAAsB,SAAtB,IAAmCT,OAAO,CAAC,CAAD,CAAP,CAAWS,MAAX,KAAsB,SAA7D,EAAwE;AACtE,mBAAO;AACLC,cAAAA,OAAO,YAAKzB,eAAe,CAACU,IAArB,sCACLK,OAAO,CAACS,MADH,4BADF;AAILE,cAAAA,KAAK,EAAE,IAJF;AAKLC,cAAAA,IAAI,EAAE;AALD,aAAP;AAOD,WARD,MAQO;AACL,gBAAMC,aAAa,GAAG,wBAAU,KAAKC,kBAAL,EAAV,IAAuC,CAA7D;AACA,gBAAMC,iBAAiB,GAAGX,cAA1B;AACA,gBAAIY,iBAAiB,GAAGZ,cAAxB;;AACA,gBAAII,SAAS,IAAIvB,eAAe,CAACU,IAAhB,CAAqBsB,WAArB,OAAuC,OAAxD,EAAiE;AAC/DD,cAAAA,iBAAiB,GAAGZ,cAAc,GAAGE,iBAArC;AACD,aAFD,MAEO,IAAIrB,eAAe,CAACU,IAAhB,CAAqBsB,WAArB,OAAuC,QAA3C,EAAqD;AAC1DD,cAAAA,iBAAiB,GAAGZ,cAAc,GAAGE,iBAArC;AACD,aAFM,MAEA;AACL,qBAAO;AACLI,gBAAAA,OAAO,EAAE,uBADJ;AAELC,gBAAAA,KAAK,EAAE,IAFF;AAGLC,gBAAAA,IAAI,EAAE;AAHD,eAAP;AAKD;;AACD,gBAAMM,oBAAoB,GAAG;AAC3BxB,cAAAA,EAAE,EAAEmB,aADuB;AAE3BM,cAAAA,SAAS,EAAE,IAAIC,IAAJ,EAFgB;AAG3BzB,cAAAA,IAAI,EAAEV,eAAe,CAACU,IAAhB,CAAqBsB,WAArB,EAHqB;AAI3Bf,cAAAA,aAAa,EAAEF,OAAO,CAACE,aAJI;AAK3BmB,cAAAA,OAAO,EAAEnC,MALkB;AAKV;AACjBqB,cAAAA,MAAM,EAAEe,UAAU,WAAIrC,eAAe,CAACsB,MAApB,SANS;AAO3BgB,cAAAA,UAAU,EAAED,UAAU,WAAIP,iBAAJ,SAPK;AAQ3BS,cAAAA,UAAU,EAAEF,UAAU,WAAIN,iBAAJ;AARK,aAA7B;AAUA,iBAAKF,kBAAL,GAA0BW,IAA1B,CAA+BP,oBAA/B;AACA,gBAAMQ,YAAY,GAAG;AACnBb,cAAAA,aAAa,EAAbA,aADmB;AAEnBX,cAAAA,aAAa,EAAEjB,eAAe,CAACiB,aAFZ;AAGnBK,cAAAA,MAAM,EAAEe,UAAU,WAAIrC,eAAe,CAACsB,MAApB,SAHC;AAInBc,cAAAA,OAAO,EAAEnC,MAJU;AAKnByC,cAAAA,eAAe,EAAE1C,eAAe,CAACU,IALd;AAMnBS,cAAAA,cAAc,EAAEkB,UAAU,WAAIN,iBAAJ;AANP,aAArB;AAQA,mBAAO;AACLN,cAAAA,OAAO,YAAKzB,eAAe,CAACU,IAArB,qCAAoDK,OAAO,CAAC,CAAD,CAAP,CAAWE,aAA/D,MADF;AAELS,cAAAA,KAAK,EAAE,KAFF;AAGLC,cAAAA,IAAI,EAAE,GAHD;AAILgB,cAAAA,IAAI,EAAEF;AAJD,aAAP;AAMD;AACF,SAtDD,MAsDO;AACL,iBAAO;AACLhB,YAAAA,OAAO,2BAAoBzB,eAAe,CAACiB,aAApC,oBADF;AAELS,YAAAA,KAAK,EAAE,IAFF;AAGLC,YAAAA,IAAI,EAAE;AAHD,WAAP;AAKD;AACF,OAlED,MAkEO;AACL,eAAO;AACLF,UAAAA,OAAO,EAAE,gDADJ;AAELC,UAAAA,KAAK,EAAE,IAFF;AAGLC,UAAAA,IAAI,EAAE;AAHD,SAAP;AAKD;AACF",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\services",
      "sourcesContent": [
        "import { transactions } from '../.data/transactions';\nimport { recordExists, getLastId } from '../Helpers/helpers';\nimport UserService from './user.service';\nimport AccountService from './accounts.service';\n\n/**\n * @exports\n * @class TransactionService\n */\n\nexport default class TransactionService {\n  /**\n   * Creates an instance of TransactionService.\n   * @memberof TransactionService\n   */\n  constructor() {\n    this.transactions = transactions;\n  }\n\n  /**\n   * Get all transaction resources.\n   * @param null\n   * @returns {object}\n   */\n  getAllTransactions() {\n    return this.transactions;\n  }\n\n  /**\n   * Performs a debit or credit account on a bank account.\n   * @param {number} userId\n   * @param {object} transactionInfo\n   * @returns {object}\n   */\n  performTransaction(transactionInfo, userId) {\n    const users = new UserService();\n    const allUsers = users.getAllUsers();\n    const validCashier = allUsers.filter(db_user => {\n      return userId === db_user.id && db_user.type === 'staff' && db_user.isAdmin === false;\n    });\n    if (validCashier.length) {\n      const accountService = new AccountService();\n      const account = accountService.getAllAccounts().filter(account => {\n        return account.accountNumber === parseInt(transactionInfo.accountNumber);\n      });\n      if (account.length) {\n        const accountBalance = account[0].balance;\n        const transactionAmount = transactionInfo.amount;\n        const debitable = accountBalance - transactionAmount >= 0 ? true : false;\n\n        if (account[0].status === 'dormant' || account[0].status === 'deleted') {\n          return {\n            message: `${transactionInfo.type} not allowed. Account is ${\n              account.status\n            }, kindly contact admin.`,\n            error: true,\n            code: 403\n          };\n        } else {\n          const transactionId = getLastId(this.getAllTransactions()) + 1;\n          const oldAccountBalance = accountBalance;\n          let newAccountBalance = accountBalance;\n          if (debitable && transactionInfo.type.toLowerCase() === 'debit') {\n            newAccountBalance = accountBalance - transactionAmount;\n          } else if (transactionInfo.type.toLowerCase() === 'credit') {\n            newAccountBalance = accountBalance + transactionAmount;\n          } else {\n            return {\n              message: 'Insufficient balance.',\n              error: true,\n              code: 403\n            };\n          }\n          const newTransactionDetail = {\n            id: transactionId,\n            createdOn: new Date(),\n            type: transactionInfo.type.toLowerCase(),\n            accountNumber: account.accountNumber,\n            cashier: userId, // cashier who consummated the transaction\n            amount: parseFloat(`${transactionInfo.amount}.00`),\n            oldBalance: parseFloat(`${oldAccountBalance}.00`),\n            newBalance: parseFloat(`${newAccountBalance}.00`)\n          };\n          this.getAllTransactions().push(newTransactionDetail);\n          const dataToReturn = {\n            transactionId,\n            accountNumber: transactionInfo.accountNumber,\n            amount: parseFloat(`${transactionInfo.amount}.00`),\n            cashier: userId,\n            transactionType: transactionInfo.type,\n            accountBalance: parseFloat(`${newAccountBalance}.00`)\n          };\n          return {\n            message: `${transactionInfo.type} action successfull on '${account[0].accountNumber}'`,\n            error: false,\n            code: 200,\n            data: dataToReturn\n          };\n        }\n      } else {\n        return {\n          message: `Account number ${transactionInfo.accountNumber} does not exist`,\n          error: true,\n          code: 404\n        };\n      }\n    } else {\n      return {\n        message: 'You are not authorized to perform this action.',\n        error: true,\n        code: 403\n      };\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555154283206
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\.data\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"filename\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\\\\src\\\\.data\\\\transactions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Olayinka\\\\ADC\\\\banka\\\\api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\transactions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Olayinka\\ADC\\banka\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\transactions.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data\\transactions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
        "sourceFileName": "transactions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transactions = void 0;\nvar transactions = [{\n  id: 1,\n  createdOn: '2019-04-13 01:21:00',\n  type: 'credit',\n  // credit or debit\n  accountNumber: 1233445642,\n  cashier: 2,\n  // cashier who consummated the transaction\n  amount: '3000.00',\n  oldBalance: 43500.65,\n  newBalance: 40500.65\n}];\nexports.transactions = transactions;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zYWN0aW9ucy5qcyJdLCJuYW1lcyI6WyJ0cmFuc2FjdGlvbnMiLCJpZCIsImNyZWF0ZWRPbiIsInR5cGUiLCJhY2NvdW50TnVtYmVyIiwiY2FzaGllciIsImFtb3VudCIsIm9sZEJhbGFuY2UiLCJuZXdCYWxhbmNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxJQUFNQSxZQUFZLEdBQUcsQ0FDMUI7QUFDRUMsRUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRUMsRUFBQUEsU0FBUyxFQUFFLHFCQUZiO0FBR0VDLEVBQUFBLElBQUksRUFBRSxRQUhSO0FBR2tCO0FBQ2hCQyxFQUFBQSxhQUFhLEVBQUUsVUFKakI7QUFLRUMsRUFBQUEsT0FBTyxFQUFFLENBTFg7QUFLYztBQUNaQyxFQUFBQSxNQUFNLEVBQUUsU0FOVjtBQU9FQyxFQUFBQSxVQUFVLEVBQUUsUUFQZDtBQVFFQyxFQUFBQSxVQUFVLEVBQUU7QUFSZCxDQUQwQixDQUFyQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXE9sYXlpbmthXFxBRENcXGJhbmthXFxhcGlcXHNyY1xcLmRhdGEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdHJhbnNhY3Rpb25zID0gW1xuICB7XG4gICAgaWQ6IDEsXG4gICAgY3JlYXRlZE9uOiAnMjAxOS0wNC0xMyAwMToyMTowMCcsXG4gICAgdHlwZTogJ2NyZWRpdCcsIC8vIGNyZWRpdCBvciBkZWJpdFxuICAgIGFjY291bnROdW1iZXI6IDEyMzM0NDU2NDIsXG4gICAgY2FzaGllcjogMiwgLy8gY2FzaGllciB3aG8gY29uc3VtbWF0ZWQgdGhlIHRyYW5zYWN0aW9uXG4gICAgYW1vdW50OiAnMzAwMC4wMCcsXG4gICAgb2xkQmFsYW5jZTogNDM1MDAuNjUsXG4gICAgbmV3QmFsYW5jZTogNDA1MDAuNjVcbiAgfVxuXTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "transactions.js"
      ],
      "names": [
        "transactions",
        "id",
        "createdOn",
        "type",
        "accountNumber",
        "cashier",
        "amount",
        "oldBalance",
        "newBalance"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,YAAY,GAAG,CAC1B;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,SAAS,EAAE,qBAFb;AAGEC,EAAAA,IAAI,EAAE,QAHR;AAGkB;AAChBC,EAAAA,aAAa,EAAE,UAJjB;AAKEC,EAAAA,OAAO,EAAE,CALX;AAKc;AACZC,EAAAA,MAAM,EAAE,SANV;AAOEC,EAAAA,UAAU,EAAE,QAPd;AAQEC,EAAAA,UAAU,EAAE;AARd,CAD0B,CAArB",
      "sourceRoot": "C:\\Users\\Olayinka\\ADC\\banka\\api\\src\\.data",
      "sourcesContent": [
        "export const transactions = [\n  {\n    id: 1,\n    createdOn: '2019-04-13 01:21:00',\n    type: 'credit', // credit or debit\n    accountNumber: 1233445642,\n    cashier: 2, // cashier who consummated the transaction\n    amount: '3000.00',\n    oldBalance: 43500.65,\n    newBalance: 40500.65\n  }\n];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555149964732
  }
}