{"version":3,"sources":["transactions.service.js"],"names":["Object","defineProperty","exports","value","_transactions","require","_helpers","_user","_interopRequireDefault","_accounts","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","TransactionService","transactions","getAllTransactions","performTransaction","transactionInfo","userId","users","allUsers","getAllUsers","validCashier","filter","db_user","id","type","isAdmin","accountService","account","getAllAccounts","accountNumber","parseInt","accountBalance","balance","transactionAmount","amount","debitable","status","message","concat","error","code","transactionId","getLastId","oldAccountBalance","newAccountBalance","toLowerCase","newTransactionDetail","createdOn","Date","cashier","parseFloat","oldBalance","newBalance","push","dataToReturn","transactionType","data"],"mappings":"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","sourceRoot":"C:\\Users\\Olayinka\\ADC\\banka\\api\\dist\\services","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _transactions = require(\"../.data/transactions\");\n\nvar _helpers = require(\"../Helpers/helpers\");\n\nvar _user = _interopRequireDefault(require(\"./user.service\"));\n\nvar _accounts = _interopRequireDefault(require(\"./accounts.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @exports\n * @class TransactionService\n */\nvar TransactionService =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of TransactionService.\n   * @memberof TransactionService\n   */\n  function TransactionService() {\n    _classCallCheck(this, TransactionService);\n\n    this.transactions = _transactions.transactions;\n  }\n  /**\n   * Get all transaction resources.\n   * @param null\n   * @returns {object}\n   */\n\n\n  _createClass(TransactionService, [{\n    key: \"getAllTransactions\",\n    value: function getAllTransactions() {\n      return this.transactions;\n    }\n    /**\n     * Performs a debit or credit account on a bank account.\n     * @param {number} userId\n     * @param {object} transactionInfo\n     * @returns {object}\n     */\n\n  }, {\n    key: \"performTransaction\",\n    value: function performTransaction(transactionInfo, userId) {\n      var users = new _user[\"default\"]();\n      var allUsers = users.getAllUsers();\n      var validCashier = allUsers.filter(function (db_user) {\n        return userId === db_user.id && db_user.type === 'staff' && db_user.isAdmin === false;\n      });\n\n      if (validCashier.length) {\n        var accountService = new _accounts[\"default\"]();\n        var account = accountService.getAllAccounts().filter(function (account) {\n          return account.accountNumber === parseInt(transactionInfo.accountNumber);\n        });\n\n        if (account.length) {\n          var accountBalance = account[0].balance;\n          var transactionAmount = transactionInfo.amount;\n          var debitable = accountBalance - transactionAmount >= 0 ? true : false;\n\n          if (account[0].status === 'dormant' || account[0].status === 'deleted') {\n            return {\n              message: \"\".concat(transactionInfo.type, \" not allowed. Account is \").concat(account.status, \", kindly contact admin.\"),\n              error: true,\n              code: 403\n            };\n          } else {\n            var transactionId = (0, _helpers.getLastId)(this.getAllTransactions()) + 1;\n            var oldAccountBalance = accountBalance;\n            var newAccountBalance = accountBalance;\n\n            if (debitable && transactionInfo.type.toLowerCase() === 'debit') {\n              newAccountBalance = accountBalance - transactionAmount;\n            } else if (transactionInfo.type.toLowerCase() === 'credit') {\n              newAccountBalance = accountBalance + transactionAmount;\n            } else {\n              return {\n                message: 'Insufficient balance.',\n                error: true,\n                code: 403\n              };\n            }\n\n            var newTransactionDetail = {\n              id: transactionId,\n              createdOn: new Date(),\n              type: transactionInfo.type.toLowerCase(),\n              accountNumber: account.accountNumber,\n              cashier: userId,\n              // cashier who consummated the transaction\n              amount: parseFloat(\"\".concat(transactionInfo.amount, \".00\")),\n              oldBalance: parseFloat(\"\".concat(oldAccountBalance, \".00\")),\n              newBalance: parseFloat(\"\".concat(newAccountBalance, \".00\"))\n            };\n            this.getAllTransactions().push(newTransactionDetail);\n            var dataToReturn = {\n              transactionId: transactionId,\n              accountNumber: transactionInfo.accountNumber,\n              amount: parseFloat(\"\".concat(transactionInfo.amount, \".00\")),\n              cashier: userId,\n              transactionType: transactionInfo.type,\n              accountBalance: parseFloat(\"\".concat(newAccountBalance, \".00\"))\n            };\n            return {\n              message: \"\".concat(transactionInfo.type, \" action successfull on '\").concat(account[0].accountNumber, \"'\"),\n              error: false,\n              code: 200,\n              data: dataToReturn\n            };\n          }\n        } else {\n          return {\n            message: \"Account number \".concat(transactionInfo.accountNumber, \" does not exist\"),\n            error: true,\n            code: 404\n          };\n        }\n      } else {\n        return {\n          message: 'You are not authorized to perform this action.',\n          error: true,\n          code: 403\n        };\n      }\n    }\n  }]);\n\n  return TransactionService;\n}();\n\nexports[\"default\"] = TransactionService;"]}